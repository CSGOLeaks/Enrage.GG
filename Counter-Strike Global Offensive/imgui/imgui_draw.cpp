// dear imgui, v1.54 WIP
// (drawing and font code)

// Contains implementation for
// - Default styles
// - ImDrawList
// - ImDrawData
// - ImFontAtlas
// - ImFont
// - Default font data

#if defined(_MSC_VER) && !defined(_CRT_SECURE_NO_WARNINGS)
#define _CRT_SECURE_NO_WARNINGS
#endif

#include "imgui.h"
#define IMGUI_DEFINE_MATH_OPERATORS
#include "imgui_internal.h"

#include <stdio.h>      // vsnprintf, sscanf, printf
#if !defined(alloca)
#ifdef _WIN32
#include <malloc.h>     // alloca
#if !defined(alloca)
#define alloca _alloca  // for clang with MS Codegen
#endif
#elif defined(__GLIBC__) || defined(__sun)
#include <alloca.h>     // alloca
#else
#include <stdlib.h>     // alloca
#endif
#endif

#ifdef _MSC_VER
#pragma warning (disable: 4505) // unreferenced local function has been removed (stb stuff)
#pragma warning (disable: 4996) // 'This function or variable may be unsafe': strcpy, strdup, sprintf, vsnprintf, sscanf, fopen
#define snprintf _snprintf
#endif

#ifdef __clang__
#pragma clang diagnostic ignored "-Wold-style-cast"         // warning : use of old-style cast                              // yes, they are more terse.
#pragma clang diagnostic ignored "-Wfloat-equal"            // warning : comparing floating point with == or != is unsafe   // storing and comparing against same constants ok.
#pragma clang diagnostic ignored "-Wglobal-constructors"    // warning : declaration requires a global destructor           // similar to above, not sure what the exact difference it.
#pragma clang diagnostic ignored "-Wsign-conversion"        // warning : implicit conversion changes signedness             //
#if __has_warning("-Wcomma")
#pragma clang diagnostic ignored "-Wcomma"                  // warning : possible misuse of comma operator here             //
#endif
#if __has_warning("-Wreserved-id-macro")
#pragma clang diagnostic ignored "-Wreserved-id-macro"      // warning : macro name is a reserved identifier                //
#endif
#if __has_warning("-Wdouble-promotion")
#pragma clang diagnostic ignored "-Wdouble-promotion"       // warning: implicit conversion from 'float' to 'double' when passing argument to function
#endif
#elif defined(__GNUC__)
#pragma GCC diagnostic ignored "-Wunused-function"          // warning: 'xxxx' defined but not used
#pragma GCC diagnostic ignored "-Wdouble-promotion"         // warning: implicit conversion from 'float' to 'double' when passing argument to function
#pragma GCC diagnostic ignored "-Wconversion"               // warning: conversion to 'xxxx' from 'xxxx' may alter its value
#pragma GCC diagnostic ignored "-Wcast-qual"                // warning: cast from type 'xxxx' to type 'xxxx' casts away qualifiers
#endif

//-------------------------------------------------------------------------
// STB libraries implementation
//-------------------------------------------------------------------------

//#define IMGUI_STB_NAMESPACE     ImGuiStb
//#define IMGUI_DISABLE_STB_RECT_PACK_IMPLEMENTATION
//#define IMGUI_DISABLE_STB_TRUETYPE_IMPLEMENTATION

#ifdef IMGUI_STB_NAMESPACE
namespace IMGUI_STB_NAMESPACE
{
#endif

#ifdef _MSC_VER
#pragma warning (push)
#pragma warning (disable: 4456)                             // declaration of 'xx' hides previous local declaration
#endif

#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wunused-function"
#pragma clang diagnostic ignored "-Wmissing-prototypes"
#pragma clang diagnostic ignored "-Wimplicit-fallthrough"
#endif

#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wtype-limits"              // warning: comparison is always true due to limited range of data type [-Wtype-limits]
#endif

#define STBRP_ASSERT(x)    IM_ASSERT(x)
#ifndef IMGUI_DISABLE_STB_RECT_PACK_IMPLEMENTATION
#define STBRP_STATIC
#define STB_RECT_PACK_IMPLEMENTATION
#endif
#include "stb_rect_pack.h"

#define STBTT_malloc(x,u)  ((void)(u), ImGui::MemAlloc(x))
#define STBTT_free(x,u)    ((void)(u), ImGui::MemFree(x))
#define STBTT_assert(x)    IM_ASSERT(x)
#ifndef IMGUI_DISABLE_STB_TRUETYPE_IMPLEMENTATION
#define STBTT_STATIC
#define STB_TRUETYPE_IMPLEMENTATION
#else
#define STBTT_DEF extern
#endif
#include "stb_truetype.h"

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif

#ifdef __clang__
#pragma clang diagnostic pop
#endif

#ifdef _MSC_VER
#pragma warning (pop)
#endif

#ifdef IMGUI_STB_NAMESPACE
} // namespace ImGuiStb
using namespace IMGUI_STB_NAMESPACE;
#endif

//-----------------------------------------------------------------------------
// Style functions
//-----------------------------------------------------------------------------

void ImGui::StyleColorsClassic(ImGuiStyle* dst)
{
    ImGuiStyle* style = dst ? dst : &ImGui::GetStyle();
    ImVec4* colors = style->Colors;

    colors[ImGuiCol_Text]                   = ImVec4(0.90f, 0.90f, 0.90f, 1.00f);
    colors[ImGuiCol_TextDisabled]           = ImVec4(0.60f, 0.60f, 0.60f, 1.00f);
    colors[ImGuiCol_WindowBg]               = ImVec4(0.00f, 0.00f, 0.00f, 0.70f);
    colors[ImGuiCol_ChildBg]                = ImVec4(0.00f, 0.00f, 0.00f, 0.00f);
    colors[ImGuiCol_PopupBg]                = ImVec4(0.11f, 0.11f, 0.14f, 0.92f);
    colors[ImGuiCol_Border]                 = ImVec4(0.50f, 0.50f, 0.50f, 0.50f);
    colors[ImGuiCol_BorderShadow]           = ImVec4(0.00f, 0.00f, 0.00f, 0.00f);
    colors[ImGuiCol_FrameBg]                = ImVec4(0.43f, 0.43f, 0.43f, 0.39f);
    colors[ImGuiCol_FrameBgHovered]         = ImVec4(0.47f, 0.47f, 0.69f, 0.40f);
    colors[ImGuiCol_FrameBgActive]          = ImVec4(0.42f, 0.41f, 0.64f, 0.69f);
    colors[ImGuiCol_TitleBg]                = ImVec4(0.27f, 0.27f, 0.54f, 0.83f);
    colors[ImGuiCol_TitleBgActive]          = ImVec4(0.32f, 0.32f, 0.63f, 0.87f);
    colors[ImGuiCol_TitleBgCollapsed]       = ImVec4(0.40f, 0.40f, 0.80f, 0.20f);
    colors[ImGuiCol_MenuBarBg]              = ImVec4(0.40f, 0.40f, 0.55f, 0.80f);
    colors[ImGuiCol_ScrollbarBg]            = ImVec4(0.20f, 0.25f, 0.30f, 0.60f);
    colors[ImGuiCol_ScrollbarGrab]          = ImVec4(0.40f, 0.40f, 0.80f, 0.30f);
    colors[ImGuiCol_ScrollbarGrabHovered]   = ImVec4(0.40f, 0.40f, 0.80f, 0.40f);
    colors[ImGuiCol_ScrollbarGrabActive]    = ImVec4(0.41f, 0.39f, 0.80f, 0.60f);
    colors[ImGuiCol_CheckMark]              = ImVec4(0.90f, 0.90f, 0.90f, 0.50f);
    colors[ImGuiCol_SliderGrab]             = ImVec4(1.00f, 1.00f, 1.00f, 0.30f);
    colors[ImGuiCol_SliderGrabActive]       = ImVec4(0.41f, 0.39f, 0.80f, 0.60f);
    colors[ImGuiCol_Button]                 = ImVec4(0.35f, 0.40f, 0.61f, 0.62f);
    colors[ImGuiCol_ButtonHovered]          = ImVec4(0.40f, 0.48f, 0.71f, 0.79f);
    colors[ImGuiCol_ButtonActive]           = ImVec4(0.46f, 0.54f, 0.80f, 1.00f);
    colors[ImGuiCol_Header]                 = ImVec4(0.40f, 0.40f, 0.90f, 0.45f);
    colors[ImGuiCol_HeaderHovered]          = ImVec4(0.45f, 0.45f, 0.90f, 0.80f);
    colors[ImGuiCol_HeaderActive]           = ImVec4(0.53f, 0.53f, 0.87f, 0.80f);
    colors[ImGuiCol_Separator]              = ImVec4(0.50f, 0.50f, 0.50f, 1.00f);
    colors[ImGuiCol_SeparatorHovered]       = ImVec4(0.60f, 0.60f, 0.70f, 1.00f);
    colors[ImGuiCol_SeparatorActive]        = ImVec4(0.70f, 0.70f, 0.90f, 1.00f);
    colors[ImGuiCol_ResizeGrip]             = ImVec4(1.00f, 1.00f, 1.00f, 0.16f);
    colors[ImGuiCol_ResizeGripHovered]      = ImVec4(0.78f, 0.82f, 1.00f, 0.60f);
    colors[ImGuiCol_ResizeGripActive]       = ImVec4(0.78f, 0.82f, 1.00f, 0.90f);
    colors[ImGuiCol_CloseButton]            = ImVec4(0.50f, 0.50f, 0.90f, 0.50f);
    colors[ImGuiCol_CloseButtonHovered]     = ImVec4(0.70f, 0.70f, 0.90f, 0.60f);
    colors[ImGuiCol_CloseButtonActive]      = ImVec4(0.70f, 0.70f, 0.70f, 1.00f);
    colors[ImGuiCol_PlotLines]              = ImVec4(1.00f, 1.00f, 1.00f, 1.00f);
    colors[ImGuiCol_PlotLinesHovered]       = ImVec4(0.90f, 0.70f, 0.00f, 1.00f);
    colors[ImGuiCol_PlotHistogram]          = ImVec4(0.90f, 0.70f, 0.00f, 1.00f);
    colors[ImGuiCol_PlotHistogramHovered]   = ImVec4(1.00f, 0.60f, 0.00f, 1.00f);
    colors[ImGuiCol_TextSelectedBg]         = ImVec4(0.00f, 0.00f, 1.00f, 0.35f);
    colors[ImGuiCol_ModalWindowDarkening]   = ImVec4(0.20f, 0.20f, 0.20f, 0.35f);
    colors[ImGuiCol_DragDropTarget]         = ImVec4(1.00f, 1.00f, 0.00f, 0.90f);
}

void ImGui::StyleColorsDark(ImGuiStyle* dst)
{
    ImGuiStyle* style = dst ? dst : &ImGui::GetStyle();
    ImVec4* colors = style->Colors;

    colors[ImGuiCol_Text]                   = ImVec4(1.00f, 1.00f, 1.00f, 1.00f);
    colors[ImGuiCol_TextDisabled]           = ImVec4(0.50f, 0.50f, 0.50f, 1.00f);
    colors[ImGuiCol_WindowBg]               = ImVec4(0.06f, 0.06f, 0.06f, 0.94f);
    colors[ImGuiCol_ChildBg]                = ImVec4(1.00f, 1.00f, 1.00f, 0.00f);
    colors[ImGuiCol_PopupBg]                = ImVec4(0.08f, 0.08f, 0.08f, 0.94f);
    colors[ImGuiCol_Border]                 = ImVec4(0.43f, 0.43f, 0.50f, 0.50f);
    colors[ImGuiCol_BorderShadow]           = ImVec4(0.00f, 0.00f, 0.00f, 0.00f);
    colors[ImGuiCol_FrameBg]                = ImVec4(0.16f, 0.29f, 0.48f, 0.54f);
    colors[ImGuiCol_FrameBgHovered]         = ImVec4(0.26f, 0.59f, 0.98f, 0.40f);
    colors[ImGuiCol_FrameBgActive]          = ImVec4(0.26f, 0.59f, 0.98f, 0.67f);
    colors[ImGuiCol_TitleBg]                = ImVec4(0.04f, 0.04f, 0.04f, 1.00f);
    colors[ImGuiCol_TitleBgActive]          = ImVec4(0.16f, 0.29f, 0.48f, 1.00f);
    colors[ImGuiCol_TitleBgCollapsed]       = ImVec4(0.00f, 0.00f, 0.00f, 0.51f);
    colors[ImGuiCol_MenuBarBg]              = ImVec4(0.14f, 0.14f, 0.14f, 1.00f);
    colors[ImGuiCol_ScrollbarBg]            = ImVec4(0.02f, 0.02f, 0.02f, 0.53f);
    colors[ImGuiCol_ScrollbarGrab]          = ImVec4(0.31f, 0.31f, 0.31f, 1.00f);
    colors[ImGuiCol_ScrollbarGrabHovered]   = ImVec4(0.41f, 0.41f, 0.41f, 1.00f);
    colors[ImGuiCol_ScrollbarGrabActive]    = ImVec4(0.51f, 0.51f, 0.51f, 1.00f);
    colors[ImGuiCol_CheckMark]              = ImVec4(0.26f, 0.59f, 0.98f, 1.00f);
    colors[ImGuiCol_SliderGrab]             = ImVec4(0.24f, 0.52f, 0.88f, 1.00f);
    colors[ImGuiCol_SliderGrabActive]       = ImVec4(0.26f, 0.59f, 0.98f, 1.00f);
    colors[ImGuiCol_Button]                 = ImVec4(0.26f, 0.59f, 0.98f, 0.40f);
    colors[ImGuiCol_ButtonHovered]          = ImVec4(0.26f, 0.59f, 0.98f, 1.00f);
    colors[ImGuiCol_ButtonActive]           = ImVec4(0.06f, 0.53f, 0.98f, 1.00f);
    colors[ImGuiCol_Header]                 = ImVec4(0.26f, 0.59f, 0.98f, 0.31f);
    colors[ImGuiCol_HeaderHovered]          = ImVec4(0.26f, 0.59f, 0.98f, 0.80f);
    colors[ImGuiCol_HeaderActive]           = ImVec4(0.26f, 0.59f, 0.98f, 1.00f);
    colors[ImGuiCol_Separator]              = colors[ImGuiCol_Border];//ImVec4(0.61f, 0.61f, 0.61f, 1.00f);
    colors[ImGuiCol_SeparatorHovered]       = ImVec4(0.10f, 0.40f, 0.75f, 0.78f);
    colors[ImGuiCol_SeparatorActive]        = ImVec4(0.10f, 0.40f, 0.75f, 1.00f);
    colors[ImGuiCol_ResizeGrip]             = ImVec4(0.26f, 0.59f, 0.98f, 0.25f);
    colors[ImGuiCol_ResizeGripHovered]      = ImVec4(0.26f, 0.59f, 0.98f, 0.67f);
    colors[ImGuiCol_ResizeGripActive]       = ImVec4(0.26f, 0.59f, 0.98f, 0.95f);
    colors[ImGuiCol_CloseButton]            = ImVec4(0.41f, 0.41f, 0.41f, 0.50f);
    colors[ImGuiCol_CloseButtonHovered]     = ImVec4(0.98f, 0.39f, 0.36f, 1.00f);
    colors[ImGuiCol_CloseButtonActive]      = ImVec4(0.98f, 0.39f, 0.36f, 1.00f);
    colors[ImGuiCol_PlotLines]              = ImVec4(0.61f, 0.61f, 0.61f, 1.00f);
    colors[ImGuiCol_PlotLinesHovered]       = ImVec4(1.00f, 0.43f, 0.35f, 1.00f);
    colors[ImGuiCol_PlotHistogram]          = ImVec4(0.90f, 0.70f, 0.00f, 1.00f);
    colors[ImGuiCol_PlotHistogramHovered]   = ImVec4(1.00f, 0.60f, 0.00f, 1.00f);
    colors[ImGuiCol_TextSelectedBg]         = ImVec4(0.26f, 0.59f, 0.98f, 0.35f);
    colors[ImGuiCol_ModalWindowDarkening]   = ImVec4(0.80f, 0.80f, 0.80f, 0.35f);
    colors[ImGuiCol_DragDropTarget]         = ImVec4(1.00f, 1.00f, 0.00f, 0.90f);
}

// Those light colors are better suited with a thicker font than the default one + FrameBorder
void ImGui::StyleColorsLight(ImGuiStyle* dst)
{
    ImGuiStyle* style = dst ? dst : &ImGui::GetStyle();
    ImVec4* colors = style->Colors;

    colors[ImGuiCol_Text]                   = ImVec4(0.00f, 0.00f, 0.00f, 1.00f);
    colors[ImGuiCol_TextDisabled]           = ImVec4(0.60f, 0.60f, 0.60f, 1.00f);
    //colors[ImGuiCol_TextHovered]          = ImVec4(1.00f, 1.00f, 1.00f, 1.00f);
    //colors[ImGuiCol_TextActive]           = ImVec4(1.00f, 1.00f, 0.00f, 1.00f);
    colors[ImGuiCol_WindowBg]               = ImVec4(0.94f, 0.94f, 0.94f, 1.00f);
    colors[ImGuiCol_ChildBg]                = ImVec4(0.00f, 0.00f, 0.00f, 0.00f);
    colors[ImGuiCol_PopupBg]                = ImVec4(1.00f, 1.00f, 1.00f, 0.98f);
    colors[ImGuiCol_Border]                 = ImVec4(0.00f, 0.00f, 0.00f, 0.30f);
    colors[ImGuiCol_BorderShadow]           = ImVec4(0.00f, 0.00f, 0.00f, 0.00f);
    colors[ImGuiCol_FrameBg]                = ImVec4(1.00f, 1.00f, 1.00f, 1.00f);
    colors[ImGuiCol_FrameBgHovered]         = ImVec4(0.26f, 0.59f, 0.98f, 0.40f);
    colors[ImGuiCol_FrameBgActive]          = ImVec4(0.26f, 0.59f, 0.98f, 0.67f);
    colors[ImGuiCol_TitleBg]                = ImVec4(0.96f, 0.96f, 0.96f, 1.00f);
    colors[ImGuiCol_TitleBgActive]          = ImVec4(0.82f, 0.82f, 0.82f, 1.00f);
    colors[ImGuiCol_TitleBgCollapsed]       = ImVec4(1.00f, 1.00f, 1.00f, 0.51f);
    colors[ImGuiCol_MenuBarBg]              = ImVec4(0.86f, 0.86f, 0.86f, 1.00f);
    colors[ImGuiCol_ScrollbarBg]            = ImVec4(0.98f, 0.98f, 0.98f, 0.53f);
    colors[ImGuiCol_ScrollbarGrab]          = ImVec4(0.69f, 0.69f, 0.69f, 0.80f);
    colors[ImGuiCol_ScrollbarGrabHovered]   = ImVec4(0.49f, 0.49f, 0.49f, 0.80f);
    colors[ImGuiCol_ScrollbarGrabActive]    = ImVec4(0.49f, 0.49f, 0.49f, 1.00f);
    colors[ImGuiCol_CheckMark]              = ImVec4(0.26f, 0.59f, 0.98f, 1.00f);
    colors[ImGuiCol_SliderGrab]             = ImVec4(0.26f, 0.59f, 0.98f, 0.78f);
    colors[ImGuiCol_SliderGrabActive]       = ImVec4(0.46f, 0.54f, 0.80f, 0.60f);
    colors[ImGuiCol_Button]                 = ImVec4(0.26f, 0.59f, 0.98f, 0.40f);
    colors[ImGuiCol_ButtonHovered]          = ImVec4(0.26f, 0.59f, 0.98f, 1.00f);
    colors[ImGuiCol_ButtonActive]           = ImVec4(0.06f, 0.53f, 0.98f, 1.00f);
    colors[ImGuiCol_Header]                 = ImVec4(0.26f, 0.59f, 0.98f, 0.31f);
    colors[ImGuiCol_HeaderHovered]          = ImVec4(0.26f, 0.59f, 0.98f, 0.80f);
    colors[ImGuiCol_HeaderActive]           = ImVec4(0.26f, 0.59f, 0.98f, 1.00f);
    colors[ImGuiCol_Separator]              = ImVec4(0.39f, 0.39f, 0.39f, 1.00f);
    colors[ImGuiCol_SeparatorHovered]       = ImVec4(0.14f, 0.44f, 0.80f, 0.78f);
    colors[ImGuiCol_SeparatorActive]        = ImVec4(0.14f, 0.44f, 0.80f, 1.00f);
    colors[ImGuiCol_ResizeGrip]             = ImVec4(0.80f, 0.80f, 0.80f, 0.56f);
    colors[ImGuiCol_ResizeGripHovered]      = ImVec4(0.26f, 0.59f, 0.98f, 0.67f);
    colors[ImGuiCol_ResizeGripActive]       = ImVec4(0.26f, 0.59f, 0.98f, 0.95f);
    colors[ImGuiCol_CloseButton]            = ImVec4(0.59f, 0.59f, 0.59f, 0.50f);
    colors[ImGuiCol_CloseButtonHovered]     = ImVec4(0.98f, 0.39f, 0.36f, 1.00f);
    colors[ImGuiCol_CloseButtonActive]      = ImVec4(0.98f, 0.39f, 0.36f, 1.00f);
    colors[ImGuiCol_PlotLines]              = ImVec4(0.39f, 0.39f, 0.39f, 1.00f);
    colors[ImGuiCol_PlotLinesHovered]       = ImVec4(1.00f, 0.43f, 0.35f, 1.00f);
    colors[ImGuiCol_PlotHistogram]          = ImVec4(0.90f, 0.70f, 0.00f, 1.00f);
    colors[ImGuiCol_PlotHistogramHovered]   = ImVec4(1.00f, 0.45f, 0.00f, 1.00f);
    colors[ImGuiCol_TextSelectedBg]         = ImVec4(0.26f, 0.59f, 0.98f, 0.35f);
    colors[ImGuiCol_ModalWindowDarkening]   = ImVec4(0.20f, 0.20f, 0.20f, 0.35f);
    colors[ImGuiCol_DragDropTarget]         = ImVec4(0.26f, 0.59f, 0.98f, 0.95f);
}

//-----------------------------------------------------------------------------
// ImDrawListData
//-----------------------------------------------------------------------------

ImDrawListSharedData::ImDrawListSharedData()
{
    Font = NULL;
    FontSize = 0.0f;
    CurveTessellationTol = 0.0f;
    ClipRectFullscreen = ImVec4(-8192.0f, -8192.0f, +8192.0f, +8192.0f);
    
    // Const data
    for (int i = 0; i < IM_ARRAYSIZE(CircleVtx12); i++)
    {
        const float a = ((float)i * 2 * IM_PI) / (float)IM_ARRAYSIZE(CircleVtx12);
        CircleVtx12[i] = ImVec2(cosf(a), sinf(a));
    }
}

//-----------------------------------------------------------------------------
// ImDrawList
//-----------------------------------------------------------------------------

void ImDrawList::Clear()
{
    CmdBuffer.resize(0);
    IdxBuffer.resize(0);
    VtxBuffer.resize(0);
    Flags = ImDrawListFlags_AntiAliasedLines | ImDrawListFlags_AntiAliasedFill;
    _VtxCurrentIdx = 0;
    _VtxWritePtr = NULL;
    _IdxWritePtr = NULL;
    _ClipRectStack.resize(0);
    _TextureIdStack.resize(0);
	_ShaderIdStack.resize(0);
    _Path.resize(0);
    _ChannelsCurrent = 0;
    _ChannelsCount = 1;
    // NB: Do not clear channels so our allocations are re-used after the first frame.
}

void ImDrawList::ClearFreeMemory()
{
    CmdBuffer.clear();
    IdxBuffer.clear();
    VtxBuffer.clear();
    _VtxCurrentIdx = 0;
    _VtxWritePtr = NULL;
    _IdxWritePtr = NULL;
    _ClipRectStack.clear();
	_ShaderIdStack.clear();
    _TextureIdStack.clear();
    _Path.clear();
    _ChannelsCurrent = 0;
    _ChannelsCount = 1;
    for (int i = 0; i < _Channels.Size; i++)
    {
        if (i == 0) memset(&_Channels[0], 0, sizeof(_Channels[0]));  // channel 0 is a copy of CmdBuffer/IdxBuffer, don't destruct again
        _Channels[i].CmdBuffer.clear();
        _Channels[i].IdxBuffer.clear();
    }
    _Channels.clear();
}

// Using macros because C++ is a terrible language, we want guaranteed inline, no code in header, and no overhead in Debug builds
#define GetCurrentClipRect()    (_ClipRectStack.Size ? _ClipRectStack.Data[_ClipRectStack.Size-1]  : _Data->ClipRectFullscreen)
#define GetCurrentTextureId()   (_TextureIdStack.Size ? _TextureIdStack.Data[_TextureIdStack.Size-1] : NULL)
#define GetCurrentShaderId()   (_ShaderIdStack.Size ? _ShaderIdStack.Data[_ShaderIdStack.Size-1] : NULL)

void ImDrawList::AddDrawCmd()
{
    ImDrawCmd draw_cmd;
    draw_cmd.ClipRect = GetCurrentClipRect();
    draw_cmd.TextureId = GetCurrentTextureId();

    IM_ASSERT(draw_cmd.ClipRect.x <= draw_cmd.ClipRect.z && draw_cmd.ClipRect.y <= draw_cmd.ClipRect.w);
    CmdBuffer.push_back(draw_cmd);
}

void ImDrawList::AddCallback(ImDrawCallback callback, void* callback_data)
{
    ImDrawCmd* current_cmd = CmdBuffer.Size ? &CmdBuffer.back() : NULL;
    if (!current_cmd || current_cmd->ElemCount != 0 || current_cmd->UserCallback != NULL)
    {
        AddDrawCmd();
        current_cmd = &CmdBuffer.back();
    }
    current_cmd->UserCallback = callback;
    current_cmd->UserCallbackData = callback_data;

    AddDrawCmd(); // Force a new command after us (see comment below)
}

// Our scheme may appears a bit unusual, basically we want the most-common calls AddLine AddRect etc. to not have to perform any check so we always have a command ready in the stack.
// The cost of figuring out if a new command has to be added or if we can merge is paid in those update** functions only.
void ImDrawList::UpdateClipRect()
{
    // If current command is used with different settings we need to add a new command
    const ImVec4 curr_clip_rect = GetCurrentClipRect();
    ImDrawCmd* curr_cmd = CmdBuffer.Size > 0 ? &CmdBuffer.Data[CmdBuffer.Size-1] : NULL;
    if (!curr_cmd || (curr_cmd->ElemCount != 0 && memcmp(&curr_cmd->ClipRect, &curr_clip_rect, sizeof(ImVec4)) != 0) || curr_cmd->UserCallback != NULL)
    {
        AddDrawCmd();
        return;
    }

    // Try to merge with previous command if it matches, else use current command
    ImDrawCmd* prev_cmd = CmdBuffer.Size > 1 ? curr_cmd - 1 : NULL;
    if (curr_cmd->ElemCount == 0 && prev_cmd && memcmp(&prev_cmd->ClipRect, &curr_clip_rect, sizeof(ImVec4)) == 0 && prev_cmd->TextureId == GetCurrentTextureId() && prev_cmd->UserCallback == NULL)
        CmdBuffer.pop_back();
    else
        curr_cmd->ClipRect = curr_clip_rect;
}

void ImDrawList::UpdateTextureID()
{
	// If current command is used with different settings we need to add a new command
	const ImTextureID curr_texture_id = GetCurrentTextureId();
	ImDrawCmd* curr_cmd = CmdBuffer.Size ? &CmdBuffer.back() : NULL;
	if (!curr_cmd || (curr_cmd->ElemCount != 0 && curr_cmd->TextureId != curr_texture_id) || curr_cmd->UserCallback != NULL)
	{
		AddDrawCmd();
		return;
	}

	// Try to merge with previous command if it matches, else use current command
	ImDrawCmd* prev_cmd = CmdBuffer.Size > 1 ? curr_cmd - 1 : NULL;
	if (curr_cmd->ElemCount == 0 && prev_cmd && prev_cmd->TextureId == curr_texture_id && memcmp(&prev_cmd->ClipRect, &GetCurrentClipRect(), sizeof(ImVec4)) == 0 && prev_cmd->UserCallback == NULL)
		CmdBuffer.pop_back();
	else
		curr_cmd->TextureId = curr_texture_id;
}

void ImDrawList::UpdateShaderID()
{
	// If current command is used with different settings we need to add a new command
	const ImTextureID curr_shader_id = GetCurrentShaderId();
	ImDrawCmd* curr_cmd = CmdBuffer.Size ? &CmdBuffer.back() : NULL;
	if (!curr_cmd || (curr_cmd->ElemCount != 0 && curr_cmd->ShaderID != curr_shader_id) || curr_cmd->UserCallback != NULL)
	{
		AddDrawCmd();
		return;
	}

	// Try to merge with previous command if it matches, else use current command
	ImDrawCmd* prev_cmd = CmdBuffer.Size > 1 ? curr_cmd - 1 : NULL;
	if (curr_cmd->ElemCount == 0 && prev_cmd && prev_cmd->ShaderID == curr_shader_id && memcmp(&prev_cmd->ClipRect, &GetCurrentClipRect(), sizeof(ImVec4)) == 0 && prev_cmd->UserCallback == NULL)
		CmdBuffer.pop_back();
	else
		curr_cmd->ShaderID = curr_shader_id;
}

#undef GetCurrentClipRect
#undef GetCurrentTextureId
#undef GetCurrentShaderId

// Render-level scissoring. This is passed down to your render function but not used for CPU-side coarse clipping. Prefer using higher-level ImGui::PushClipRect() to affect logic (hit-testing and widget culling)
void ImDrawList::PushClipRect(ImVec2 cr_min, ImVec2 cr_max, bool intersect_with_current_clip_rect)
{
    ImVec4 cr(cr_min.x, cr_min.y, cr_max.x, cr_max.y);
    if (intersect_with_current_clip_rect && _ClipRectStack.Size)
    {
        ImVec4 current = _ClipRectStack.Data[_ClipRectStack.Size-1];
        if (cr.x < current.x) cr.x = current.x;
        if (cr.y < current.y) cr.y = current.y;
        if (cr.z > current.z) cr.z = current.z;
        if (cr.w > current.w) cr.w = current.w;
    }
    cr.z = ImMax(cr.x, cr.z);
    cr.w = ImMax(cr.y, cr.w);

    _ClipRectStack.push_back(cr);
    UpdateClipRect();
}

void ImDrawList::PushClipRectFullScreen()
{
    PushClipRect(ImVec2(_Data->ClipRectFullscreen.x, _Data->ClipRectFullscreen.y), ImVec2(_Data->ClipRectFullscreen.z, _Data->ClipRectFullscreen.w));
}

void ImDrawList::PopClipRect()
{
    IM_ASSERT(_ClipRectStack.Size > 0);
    _ClipRectStack.pop_back();
    UpdateClipRect();
}

void ImDrawList::PushTextureID(const ImTextureID& texture_id)
{
	_TextureIdStack.push_back(texture_id);
	UpdateTextureID();
}

void ImDrawList::PushShaderID(const ImShaderID& shader_id)
{
	_ShaderIdStack.push_back(shader_id);
	UpdateShaderID();
}

void ImDrawList::PopTextureID()
{
	IM_ASSERT(_TextureIdStack.Size > 0);
	_TextureIdStack.pop_back();
	UpdateTextureID();
}

void ImDrawList::PopShaderID()
{
	IM_ASSERT(_ShaderIdStack.Size > 0);
	_ShaderIdStack.pop_back();
	UpdateShaderID();
}

void ImDrawList::ChannelsSplit(int channels_count)
{
    IM_ASSERT(_ChannelsCurrent == 0 && _ChannelsCount == 1);
    int old_channels_count = _Channels.Size;
    if (old_channels_count < channels_count)
        _Channels.resize(channels_count);
    _ChannelsCount = channels_count;

    // _Channels[] (24/32 BYTEs each) hold storage that we'll swap with this->_CmdBuffer/_IdxBuffer
    // The content of _Channels[0] at this point doesn't matter. We clear it to make state tidy in a debugger but we don't strictly need to.
    // When we switch to the next channel, we'll copy _CmdBuffer/_IdxBuffer into _Channels[0] and then _Channels[1] into _CmdBuffer/_IdxBuffer
    memset(&_Channels[0], 0, sizeof(ImDrawChannel));
    for (int i = 1; i < channels_count; i++)
    {
        if (i >= old_channels_count)
        {
            IM_PLACEMENT_NEW(&_Channels[i]) ImDrawChannel();
        }
        else
        {
            _Channels[i].CmdBuffer.resize(0);
            _Channels[i].IdxBuffer.resize(0);
        }
        if (_Channels[i].CmdBuffer.Size == 0)
        {
            ImDrawCmd draw_cmd;
            draw_cmd.ClipRect = _ClipRectStack.back();
            draw_cmd.TextureId = _TextureIdStack.back();
            _Channels[i].CmdBuffer.push_back(draw_cmd);
        }
    }
}

void ImDrawList::ChannelsMerge()
{
    // Note that we never use or rely on channels.Size because it is merely a buffer that we never shrink back to 0 to keep all sub-buffers ready for use.
    if (_ChannelsCount <= 1)
        return;

    ChannelsSetCurrent(0);
    if (CmdBuffer.Size && CmdBuffer.back().ElemCount == 0)
        CmdBuffer.pop_back();

    int new_cmd_buffer_count = 0, new_idx_buffer_count = 0;
    for (int i = 1; i < _ChannelsCount; i++)
    {
        ImDrawChannel& ch = _Channels[i];
        if (ch.CmdBuffer.Size && ch.CmdBuffer.back().ElemCount == 0)
            ch.CmdBuffer.pop_back();
        new_cmd_buffer_count += ch.CmdBuffer.Size;
        new_idx_buffer_count += ch.IdxBuffer.Size;
    }
    CmdBuffer.resize(CmdBuffer.Size + new_cmd_buffer_count);
    IdxBuffer.resize(IdxBuffer.Size + new_idx_buffer_count);

    ImDrawCmd* cmd_write = CmdBuffer.Data + CmdBuffer.Size - new_cmd_buffer_count;
    _IdxWritePtr = IdxBuffer.Data + IdxBuffer.Size - new_idx_buffer_count;
    for (int i = 1; i < _ChannelsCount; i++)
    {
        ImDrawChannel& ch = _Channels[i];
        if (int sz = ch.CmdBuffer.Size) { memcpy(cmd_write, ch.CmdBuffer.Data, sz * sizeof(ImDrawCmd)); cmd_write += sz; }
        if (int sz = ch.IdxBuffer.Size) { memcpy(_IdxWritePtr, ch.IdxBuffer.Data, sz * sizeof(ImDrawIdx)); _IdxWritePtr += sz; }
    }
    UpdateClipRect(); // We call this instead of AddDrawCmd(), so that empty channels won't produce an extra draw call.
    _ChannelsCount = 1;
}

void ImDrawList::ChannelsSetCurrent(int idx)
{
    IM_ASSERT(idx < _ChannelsCount);
    if (_ChannelsCurrent == idx) return;
    memcpy(&_Channels.Data[_ChannelsCurrent].CmdBuffer, &CmdBuffer, sizeof(CmdBuffer)); // copy 12 BYTEs, four times
    memcpy(&_Channels.Data[_ChannelsCurrent].IdxBuffer, &IdxBuffer, sizeof(IdxBuffer));
    _ChannelsCurrent = idx;
    memcpy(&CmdBuffer, &_Channels.Data[_ChannelsCurrent].CmdBuffer, sizeof(CmdBuffer));
    memcpy(&IdxBuffer, &_Channels.Data[_ChannelsCurrent].IdxBuffer, sizeof(IdxBuffer));
    _IdxWritePtr = IdxBuffer.Data + IdxBuffer.Size;
}

// NB: this can be called with negative count for removing primitives (as long as the result does not underflow)
void ImDrawList::PrimReserve(int idx_count, int vtx_count)
{
    ImDrawCmd& draw_cmd = CmdBuffer.Data[CmdBuffer.Size-1];
    draw_cmd.ElemCount += idx_count;

    int vtx_buffer_old_size = VtxBuffer.Size;
    VtxBuffer.resize(vtx_buffer_old_size + vtx_count);
    _VtxWritePtr = VtxBuffer.Data + vtx_buffer_old_size;

    int idx_buffer_old_size = IdxBuffer.Size;
    IdxBuffer.resize(idx_buffer_old_size + idx_count);
    _IdxWritePtr = IdxBuffer.Data + idx_buffer_old_size;
}

// Fully unrolled with inline call to keep our debug builds decently fast.
void ImDrawList::PrimRect(const ImVec2& a, const ImVec2& c, ImU32 col)
{
    ImVec2 b(c.x, a.y), d(a.x, c.y), uv(_Data->TexUvWhitePixel);
    ImDrawIdx idx = (ImDrawIdx)_VtxCurrentIdx;
    _IdxWritePtr[0] = idx; _IdxWritePtr[1] = (ImDrawIdx)(idx+1); _IdxWritePtr[2] = (ImDrawIdx)(idx+2);
    _IdxWritePtr[3] = idx; _IdxWritePtr[4] = (ImDrawIdx)(idx+2); _IdxWritePtr[5] = (ImDrawIdx)(idx+3);
    _VtxWritePtr[0].pos = a; _VtxWritePtr[0].uv = uv; _VtxWritePtr[0].col = col;
    _VtxWritePtr[1].pos = b; _VtxWritePtr[1].uv = uv; _VtxWritePtr[1].col = col;
    _VtxWritePtr[2].pos = c; _VtxWritePtr[2].uv = uv; _VtxWritePtr[2].col = col;
    _VtxWritePtr[3].pos = d; _VtxWritePtr[3].uv = uv; _VtxWritePtr[3].col = col;
    _VtxWritePtr += 4;
    _VtxCurrentIdx += 4;
    _IdxWritePtr += 6;
}

void ImDrawList::PrimRectUV(const ImVec2& a, const ImVec2& c, const ImVec2& uv_a, const ImVec2& uv_c, ImU32 col)
{
    ImVec2 b(c.x, a.y), d(a.x, c.y), uv_b(uv_c.x, uv_a.y), uv_d(uv_a.x, uv_c.y);
    ImDrawIdx idx = (ImDrawIdx)_VtxCurrentIdx;
    _IdxWritePtr[0] = idx; _IdxWritePtr[1] = (ImDrawIdx)(idx+1); _IdxWritePtr[2] = (ImDrawIdx)(idx+2);
    _IdxWritePtr[3] = idx; _IdxWritePtr[4] = (ImDrawIdx)(idx+2); _IdxWritePtr[5] = (ImDrawIdx)(idx+3);
    _VtxWritePtr[0].pos = a; _VtxWritePtr[0].uv = uv_a; _VtxWritePtr[0].col = col;
    _VtxWritePtr[1].pos = b; _VtxWritePtr[1].uv = uv_b; _VtxWritePtr[1].col = col;
    _VtxWritePtr[2].pos = c; _VtxWritePtr[2].uv = uv_c; _VtxWritePtr[2].col = col;
    _VtxWritePtr[3].pos = d; _VtxWritePtr[3].uv = uv_d; _VtxWritePtr[3].col = col;
    _VtxWritePtr += 4;
    _VtxCurrentIdx += 4;
    _IdxWritePtr += 6;
}

void ImDrawList::PrimQuadUV(const ImVec2& a, const ImVec2& b, const ImVec2& c, const ImVec2& d, const ImVec2& uv_a, const ImVec2& uv_b, const ImVec2& uv_c, const ImVec2& uv_d, ImU32 col)
{
    ImDrawIdx idx = (ImDrawIdx)_VtxCurrentIdx;
    _IdxWritePtr[0] = idx; _IdxWritePtr[1] = (ImDrawIdx)(idx+1); _IdxWritePtr[2] = (ImDrawIdx)(idx+2);
    _IdxWritePtr[3] = idx; _IdxWritePtr[4] = (ImDrawIdx)(idx+2); _IdxWritePtr[5] = (ImDrawIdx)(idx+3);
    _VtxWritePtr[0].pos = a; _VtxWritePtr[0].uv = uv_a; _VtxWritePtr[0].col = col;
    _VtxWritePtr[1].pos = b; _VtxWritePtr[1].uv = uv_b; _VtxWritePtr[1].col = col;
    _VtxWritePtr[2].pos = c; _VtxWritePtr[2].uv = uv_c; _VtxWritePtr[2].col = col;
    _VtxWritePtr[3].pos = d; _VtxWritePtr[3].uv = uv_d; _VtxWritePtr[3].col = col;
    _VtxWritePtr += 4;
    _VtxCurrentIdx += 4;
    _IdxWritePtr += 6;
}

// TODO: Thickness anti-aliased lines cap are missing their AA fringe.
void ImDrawList::AddPolyline(const ImVec2* points, const int points_count, ImU32 col, bool closed, float thickness)
{
    if (points_count < 2)
        return;

    const ImVec2 uv = _Data->TexUvWhitePixel;

    int count = points_count;
    if (!closed)
        count = points_count-1;

    const bool thick_line = thickness > 1.0f;
    if (Flags & ImDrawListFlags_AntiAliasedLines)
    {
        // Anti-aliased stroke
        const float AA_SIZE = 1.0f;
        const ImU32 col_trans = col & ~IM_COL32_A_MASK;

        const int idx_count = thick_line ? count*18 : count*12;
        const int vtx_count = thick_line ? points_count*4 : points_count*3;
        PrimReserve(idx_count, vtx_count);

        // Temporary buffer
        ImVec2* temp_normals = (ImVec2*)alloca(points_count * (thick_line ? 5 : 3) * sizeof(ImVec2));
        ImVec2* temp_points = temp_normals + points_count;

        for (int i1 = 0; i1 < count; i1++)
        {
            const int i2 = (i1+1) == points_count ? 0 : i1+1;
            ImVec2 diff = points[i2] - points[i1];
            diff *= ImInvLength(diff, 1.0f);
            temp_normals[i1].x = diff.y;
            temp_normals[i1].y = -diff.x;
        }
        if (!closed)
            temp_normals[points_count-1] = temp_normals[points_count-2];

        if (!thick_line)
        {
            if (!closed)
            {
                temp_points[0] = points[0] + temp_normals[0] * AA_SIZE;
                temp_points[1] = points[0] - temp_normals[0] * AA_SIZE;
                temp_points[(points_count-1)*2+0] = points[points_count-1] + temp_normals[points_count-1] * AA_SIZE;
                temp_points[(points_count-1)*2+1] = points[points_count-1] - temp_normals[points_count-1] * AA_SIZE;
            }

            // FIXME-OPT: Merge the different loops, possibly remove the temporary buffer.
            unsigned int idx1 = _VtxCurrentIdx;
            for (int i1 = 0; i1 < count; i1++)
            {
                const int i2 = (i1+1) == points_count ? 0 : i1+1;
                unsigned int idx2 = (i1+1) == points_count ? _VtxCurrentIdx : idx1+3;

                // Average normals
                ImVec2 dm = (temp_normals[i1] + temp_normals[i2]) * 0.5f;
                float dmr2 = dm.x*dm.x + dm.y*dm.y;
                if (dmr2 > 0.000001f)
                {
                    float scale = 1.0f / dmr2;
                    if (scale > 100.0f) scale = 100.0f;
                    dm *= scale;
                }
                dm *= AA_SIZE;
                temp_points[i2*2+0] = points[i2] + dm;
                temp_points[i2*2+1] = points[i2] - dm;

                // Add indexes
                _IdxWritePtr[0] = (ImDrawIdx)(idx2+0); _IdxWritePtr[1] = (ImDrawIdx)(idx1+0); _IdxWritePtr[2] = (ImDrawIdx)(idx1+2);
                _IdxWritePtr[3] = (ImDrawIdx)(idx1+2); _IdxWritePtr[4] = (ImDrawIdx)(idx2+2); _IdxWritePtr[5] = (ImDrawIdx)(idx2+0);
                _IdxWritePtr[6] = (ImDrawIdx)(idx2+1); _IdxWritePtr[7] = (ImDrawIdx)(idx1+1); _IdxWritePtr[8] = (ImDrawIdx)(idx1+0);
                _IdxWritePtr[9] = (ImDrawIdx)(idx1+0); _IdxWritePtr[10]= (ImDrawIdx)(idx2+0); _IdxWritePtr[11]= (ImDrawIdx)(idx2+1);
                _IdxWritePtr += 12;

                idx1 = idx2;
            }

            // Add vertexes
            for (int i = 0; i < points_count; i++)
            {
                _VtxWritePtr[0].pos = points[i];          _VtxWritePtr[0].uv = uv; _VtxWritePtr[0].col = col;
                _VtxWritePtr[1].pos = temp_points[i*2+0]; _VtxWritePtr[1].uv = uv; _VtxWritePtr[1].col = col_trans;
                _VtxWritePtr[2].pos = temp_points[i*2+1]; _VtxWritePtr[2].uv = uv; _VtxWritePtr[2].col = col_trans;
                _VtxWritePtr += 3;
            }
        }
        else
        {
            const float half_inner_thickness = (thickness - AA_SIZE) * 0.5f;
            if (!closed)
            {
                temp_points[0] = points[0] + temp_normals[0] * (half_inner_thickness + AA_SIZE);
                temp_points[1] = points[0] + temp_normals[0] * (half_inner_thickness);
                temp_points[2] = points[0] - temp_normals[0] * (half_inner_thickness);
                temp_points[3] = points[0] - temp_normals[0] * (half_inner_thickness + AA_SIZE);
                temp_points[(points_count-1)*4+0] = points[points_count-1] + temp_normals[points_count-1] * (half_inner_thickness + AA_SIZE);
                temp_points[(points_count-1)*4+1] = points[points_count-1] + temp_normals[points_count-1] * (half_inner_thickness);
                temp_points[(points_count-1)*4+2] = points[points_count-1] - temp_normals[points_count-1] * (half_inner_thickness);
                temp_points[(points_count-1)*4+3] = points[points_count-1] - temp_normals[points_count-1] * (half_inner_thickness + AA_SIZE);
            }

            // FIXME-OPT: Merge the different loops, possibly remove the temporary buffer.
            unsigned int idx1 = _VtxCurrentIdx;
            for (int i1 = 0; i1 < count; i1++)
            {
                const int i2 = (i1+1) == points_count ? 0 : i1+1;
                unsigned int idx2 = (i1+1) == points_count ? _VtxCurrentIdx : idx1+4;

                // Average normals
                ImVec2 dm = (temp_normals[i1] + temp_normals[i2]) * 0.5f;
                float dmr2 = dm.x*dm.x + dm.y*dm.y;
                if (dmr2 > 0.000001f)
                {
                    float scale = 1.0f / dmr2;
                    if (scale > 100.0f) scale = 100.0f;
                    dm *= scale;
                }
                ImVec2 dm_out = dm * (half_inner_thickness + AA_SIZE);
                ImVec2 dm_in = dm * half_inner_thickness;
                temp_points[i2*4+0] = points[i2] + dm_out;
                temp_points[i2*4+1] = points[i2] + dm_in;
                temp_points[i2*4+2] = points[i2] - dm_in;
                temp_points[i2*4+3] = points[i2] - dm_out;

                // Add indexes
                _IdxWritePtr[0]  = (ImDrawIdx)(idx2+1); _IdxWritePtr[1]  = (ImDrawIdx)(idx1+1); _IdxWritePtr[2]  = (ImDrawIdx)(idx1+2);
                _IdxWritePtr[3]  = (ImDrawIdx)(idx1+2); _IdxWritePtr[4]  = (ImDrawIdx)(idx2+2); _IdxWritePtr[5]  = (ImDrawIdx)(idx2+1);
                _IdxWritePtr[6]  = (ImDrawIdx)(idx2+1); _IdxWritePtr[7]  = (ImDrawIdx)(idx1+1); _IdxWritePtr[8]  = (ImDrawIdx)(idx1+0);
                _IdxWritePtr[9]  = (ImDrawIdx)(idx1+0); _IdxWritePtr[10] = (ImDrawIdx)(idx2+0); _IdxWritePtr[11] = (ImDrawIdx)(idx2+1);
                _IdxWritePtr[12] = (ImDrawIdx)(idx2+2); _IdxWritePtr[13] = (ImDrawIdx)(idx1+2); _IdxWritePtr[14] = (ImDrawIdx)(idx1+3);
                _IdxWritePtr[15] = (ImDrawIdx)(idx1+3); _IdxWritePtr[16] = (ImDrawIdx)(idx2+3); _IdxWritePtr[17] = (ImDrawIdx)(idx2+2);
                _IdxWritePtr += 18;

                idx1 = idx2;
            }

            // Add vertexes
            for (int i = 0; i < points_count; i++)
            {
                _VtxWritePtr[0].pos = temp_points[i*4+0]; _VtxWritePtr[0].uv = uv; _VtxWritePtr[0].col = col_trans;
                _VtxWritePtr[1].pos = temp_points[i*4+1]; _VtxWritePtr[1].uv = uv; _VtxWritePtr[1].col = col;
                _VtxWritePtr[2].pos = temp_points[i*4+2]; _VtxWritePtr[2].uv = uv; _VtxWritePtr[2].col = col;
                _VtxWritePtr[3].pos = temp_points[i*4+3]; _VtxWritePtr[3].uv = uv; _VtxWritePtr[3].col = col_trans;
                _VtxWritePtr += 4;
            }
        }
        _VtxCurrentIdx += (ImDrawIdx)vtx_count;
    }
    else
    {
        // Non Anti-aliased Stroke
        const int idx_count = count*6;
        const int vtx_count = count*4;      // FIXME-OPT: Not sharing edges
        PrimReserve(idx_count, vtx_count);

        for (int i1 = 0; i1 < count; i1++)
        {
            const int i2 = (i1+1) == points_count ? 0 : i1+1;
            const ImVec2& p1 = points[i1];
            const ImVec2& p2 = points[i2];
            ImVec2 diff = p2 - p1;
            diff *= ImInvLength(diff, 1.0f);

            const float dx = diff.x * (thickness * 0.5f);
            const float dy = diff.y * (thickness * 0.5f);
            _VtxWritePtr[0].pos.x = p1.x + dy; _VtxWritePtr[0].pos.y = p1.y - dx; _VtxWritePtr[0].uv = uv; _VtxWritePtr[0].col = col;
            _VtxWritePtr[1].pos.x = p2.x + dy; _VtxWritePtr[1].pos.y = p2.y - dx; _VtxWritePtr[1].uv = uv; _VtxWritePtr[1].col = col;
            _VtxWritePtr[2].pos.x = p2.x - dy; _VtxWritePtr[2].pos.y = p2.y + dx; _VtxWritePtr[2].uv = uv; _VtxWritePtr[2].col = col;
            _VtxWritePtr[3].pos.x = p1.x - dy; _VtxWritePtr[3].pos.y = p1.y + dx; _VtxWritePtr[3].uv = uv; _VtxWritePtr[3].col = col;
            _VtxWritePtr += 4;

            _IdxWritePtr[0] = (ImDrawIdx)(_VtxCurrentIdx); _IdxWritePtr[1] = (ImDrawIdx)(_VtxCurrentIdx+1); _IdxWritePtr[2] = (ImDrawIdx)(_VtxCurrentIdx+2);
            _IdxWritePtr[3] = (ImDrawIdx)(_VtxCurrentIdx); _IdxWritePtr[4] = (ImDrawIdx)(_VtxCurrentIdx+2); _IdxWritePtr[5] = (ImDrawIdx)(_VtxCurrentIdx+3);
            _IdxWritePtr += 6;
            _VtxCurrentIdx += 4;
        }
    }
}

void ImDrawList::AddConvexPolyFilled(const ImVec2* points, const int points_count, ImU32 col)
{
    const ImVec2 uv = _Data->TexUvWhitePixel;

    if (Flags & ImDrawListFlags_AntiAliasedFill)
    {
        // Anti-aliased Fill
        const float AA_SIZE = 1.0f;
        const ImU32 col_trans = col & ~IM_COL32_A_MASK;
        const int idx_count = (points_count-2)*3 + points_count*6;
        const int vtx_count = (points_count*2);
        PrimReserve(idx_count, vtx_count);

        // Add indexes for fill
        unsigned int vtx_inner_idx = _VtxCurrentIdx;
        unsigned int vtx_outer_idx = _VtxCurrentIdx+1;
        for (int i = 2; i < points_count; i++)
        {
            _IdxWritePtr[0] = (ImDrawIdx)(vtx_inner_idx); _IdxWritePtr[1] = (ImDrawIdx)(vtx_inner_idx+((i-1)<<1)); _IdxWritePtr[2] = (ImDrawIdx)(vtx_inner_idx+(i<<1));
            _IdxWritePtr += 3;
        }

        // Compute normals
        ImVec2* temp_normals = (ImVec2*)alloca(points_count * sizeof(ImVec2));
        for (int i0 = points_count-1, i1 = 0; i1 < points_count; i0 = i1++)
        {
            const ImVec2& p0 = points[i0];
            const ImVec2& p1 = points[i1];
            ImVec2 diff = p1 - p0;
            diff *= ImInvLength(diff, 1.0f);
            temp_normals[i0].x = diff.y;
            temp_normals[i0].y = -diff.x;
        }

        for (int i0 = points_count-1, i1 = 0; i1 < points_count; i0 = i1++)
        {
            // Average normals
            const ImVec2& n0 = temp_normals[i0];
            const ImVec2& n1 = temp_normals[i1];
            ImVec2 dm = (n0 + n1) * 0.5f;
            float dmr2 = dm.x*dm.x + dm.y*dm.y;
            if (dmr2 > 0.000001f)
            {
                float scale = 1.0f / dmr2;
                if (scale > 100.0f) scale = 100.0f;
                dm *= scale;
            }
            dm *= AA_SIZE * 0.5f;

            // Add vertices
            _VtxWritePtr[0].pos = (points[i1] - dm); _VtxWritePtr[0].uv = uv; _VtxWritePtr[0].col = col;        // Inner
            _VtxWritePtr[1].pos = (points[i1] + dm); _VtxWritePtr[1].uv = uv; _VtxWritePtr[1].col = col_trans;  // Outer
            _VtxWritePtr += 2;

            // Add indexes for fringes
            _IdxWritePtr[0] = (ImDrawIdx)(vtx_inner_idx+(i1<<1)); _IdxWritePtr[1] = (ImDrawIdx)(vtx_inner_idx+(i0<<1)); _IdxWritePtr[2] = (ImDrawIdx)(vtx_outer_idx+(i0<<1));
            _IdxWritePtr[3] = (ImDrawIdx)(vtx_outer_idx+(i0<<1)); _IdxWritePtr[4] = (ImDrawIdx)(vtx_outer_idx+(i1<<1)); _IdxWritePtr[5] = (ImDrawIdx)(vtx_inner_idx+(i1<<1));
            _IdxWritePtr += 6;
        }
        _VtxCurrentIdx += (ImDrawIdx)vtx_count;
    }
    else
    {
        // Non Anti-aliased Fill
        const int idx_count = (points_count-2)*3;
        const int vtx_count = points_count;
        PrimReserve(idx_count, vtx_count);
        for (int i = 0; i < vtx_count; i++)
        {
            _VtxWritePtr[0].pos = points[i]; _VtxWritePtr[0].uv = uv; _VtxWritePtr[0].col = col;
            _VtxWritePtr++;
        }
        for (int i = 2; i < points_count; i++)
        {
            _IdxWritePtr[0] = (ImDrawIdx)(_VtxCurrentIdx); _IdxWritePtr[1] = (ImDrawIdx)(_VtxCurrentIdx+i-1); _IdxWritePtr[2] = (ImDrawIdx)(_VtxCurrentIdx+i);
            _IdxWritePtr += 3;
        }
        _VtxCurrentIdx += (ImDrawIdx)vtx_count;
    }
}

void ImDrawList::PathArcToFast(const ImVec2& centre, float radius, int a_min_of_12, int a_max_of_12)
{
    if (radius == 0.0f || a_min_of_12 > a_max_of_12)
    {
        _Path.push_back(centre);
        return;
    }
    _Path.reserve(_Path.Size + (a_max_of_12 - a_min_of_12 + 1));
    for (int a = a_min_of_12; a <= a_max_of_12; a++)
    {
        const ImVec2& c = _Data->CircleVtx12[a % IM_ARRAYSIZE(_Data->CircleVtx12)];
        _Path.push_back(ImVec2(centre.x + c.x * radius, centre.y + c.y * radius));
    }
}

void ImDrawList::PathArcTo(const ImVec2& centre, float radius, float a_min, float a_max, int num_segments)
{
    if (radius == 0.0f)
    {
        _Path.push_back(centre);
        return;
    }
    _Path.reserve(_Path.Size + (num_segments + 1));
    for (int i = 0; i <= num_segments; i++)
    {
        const float a = a_min + ((float)i / (float)num_segments) * (a_max - a_min);
        _Path.push_back(ImVec2(centre.x + cosf(a) * radius, centre.y + sinf(a) * radius));
    }
}

static void PathBezierToCasteljau(ImVector<ImVec2>* path, float x1, float y1, float x2, float y2, float x3, float y3, float x4, float y4, float tess_tol, int level)
{
    float dx = x4 - x1;
    float dy = y4 - y1;
    float d2 = ((x2 - x4) * dy - (y2 - y4) * dx);
    float d3 = ((x3 - x4) * dy - (y3 - y4) * dx);
    d2 = (d2 >= 0) ? d2 : -d2;
    d3 = (d3 >= 0) ? d3 : -d3;
    if ((d2+d3) * (d2+d3) < tess_tol * (dx*dx + dy*dy))
    {
        path->push_back(ImVec2(x4, y4));
    }
    else if (level < 10)
    {
        float x12 = (x1+x2)*0.5f,       y12 = (y1+y2)*0.5f;
        float x23 = (x2+x3)*0.5f,       y23 = (y2+y3)*0.5f;
        float x34 = (x3+x4)*0.5f,       y34 = (y3+y4)*0.5f;
        float x123 = (x12+x23)*0.5f,    y123 = (y12+y23)*0.5f;
        float x234 = (x23+x34)*0.5f,    y234 = (y23+y34)*0.5f;
        float x1234 = (x123+x234)*0.5f, y1234 = (y123+y234)*0.5f;

        PathBezierToCasteljau(path, x1,y1,        x12,y12,    x123,y123,  x1234,y1234, tess_tol, level+1);
        PathBezierToCasteljau(path, x1234,y1234,  x234,y234,  x34,y34,    x4,y4,       tess_tol, level+1);
    }
}

void ImDrawList::PathBezierCurveTo(const ImVec2& p2, const ImVec2& p3, const ImVec2& p4, int num_segments)
{
    ImVec2 p1 = _Path.back();
    if (num_segments == 0)
    {
        // Auto-tessellated
        PathBezierToCasteljau(&_Path, p1.x, p1.y, p2.x, p2.y, p3.x, p3.y, p4.x, p4.y, _Data->CurveTessellationTol, 0);
    }
    else
    {
        float t_step = 1.0f / (float)num_segments;
        for (int i_step = 1; i_step <= num_segments; i_step++)
        {
            float t = t_step * i_step;
            float u = 1.0f - t;
            float w1 = u*u*u;
            float w2 = 3*u*u*t;
            float w3 = 3*u*t*t;
            float w4 = t*t*t;
            _Path.push_back(ImVec2(w1*p1.x + w2*p2.x + w3*p3.x + w4*p4.x, w1*p1.y + w2*p2.y + w3*p3.y + w4*p4.y));
        }
    }
}

void ImDrawList::PathRect(const ImVec2& a, const ImVec2& b, float rounding, int rounding_corners)
{
    rounding = ImMin(rounding, fabsf(b.x - a.x) * ( ((rounding_corners & ImDrawCornerFlags_Top)  == ImDrawCornerFlags_Top)  || ((rounding_corners & ImDrawCornerFlags_Bot)   == ImDrawCornerFlags_Bot)   ? 0.5f : 1.0f ) - 1.0f);
    rounding = ImMin(rounding, fabsf(b.y - a.y) * ( ((rounding_corners & ImDrawCornerFlags_Left) == ImDrawCornerFlags_Left) || ((rounding_corners & ImDrawCornerFlags_Right) == ImDrawCornerFlags_Right) ? 0.5f : 1.0f ) - 1.0f);

    if (rounding <= 0.0f || rounding_corners == 0)
    {
        PathLineTo(a);
        PathLineTo(ImVec2(b.x, a.y));
        PathLineTo(b);
        PathLineTo(ImVec2(a.x, b.y));
    }
    else
    {
        const float rounding_tl = (rounding_corners & ImDrawCornerFlags_TopLeft) ? rounding : 0.0f;
        const float rounding_tr = (rounding_corners & ImDrawCornerFlags_TopRight) ? rounding : 0.0f;
        const float rounding_br = (rounding_corners & ImDrawCornerFlags_BotRight) ? rounding : 0.0f;
        const float rounding_bl = (rounding_corners & ImDrawCornerFlags_BotLeft) ? rounding : 0.0f;
        PathArcToFast(ImVec2(a.x + rounding_tl, a.y + rounding_tl), rounding_tl, 6, 9);
        PathArcToFast(ImVec2(b.x - rounding_tr, a.y + rounding_tr), rounding_tr, 9, 12);
        PathArcToFast(ImVec2(b.x - rounding_br, b.y - rounding_br), rounding_br, 0, 3);
        PathArcToFast(ImVec2(a.x + rounding_bl, b.y - rounding_bl), rounding_bl, 3, 6);
    }
}

void ImDrawList::AddLine(const ImVec2& a, const ImVec2& b, ImU32 col, float thickness)
{
    if ((col & IM_COL32_A_MASK) == 0)
        return;
    PathLineTo(a + ImVec2(0.5f,0.5f));
    PathLineTo(b + ImVec2(0.5f,0.5f));
    PathStroke(col, false, thickness);
}

// a: upper-left, b: lower-right. we don't render 1 px sized rectangles properly.
void ImDrawList::AddRect(const ImVec2& a, const ImVec2& b, ImU32 col, float rounding, int rounding_corners_flags, float thickness)
{
    if ((col & IM_COL32_A_MASK) == 0)
        return;
    PathRect(a + ImVec2(0.5f,0.5f), b - ImVec2(0.5f,0.5f), rounding, rounding_corners_flags);
    PathStroke(col, true, thickness);
}

void ImDrawList::AddRectFilled(const ImVec2& a, const ImVec2& b, ImU32 col, float rounding, int rounding_corners_flags)
{
    if ((col & IM_COL32_A_MASK) == 0)
        return;
    if (rounding > 0.0f)
    {
        PathRect(a, b, rounding, rounding_corners_flags);
        PathFillConvex(col);
    }
    else
    {
        PrimReserve(6, 4);
        PrimRect(a, b, col);
    }
}

void ImDrawList::AddRectFilledMultiColor(const ImVec2& a, const ImVec2& c, ImU32 col_upr_left, ImU32 col_upr_right, ImU32 col_bot_right, ImU32 col_bot_left)
{
    if (((col_upr_left | col_upr_right | col_bot_right | col_bot_left) & IM_COL32_A_MASK) == 0)
        return;

    const ImVec2 uv = _Data->TexUvWhitePixel;
    PrimReserve(6, 4);
    PrimWriteIdx((ImDrawIdx)(_VtxCurrentIdx)); PrimWriteIdx((ImDrawIdx)(_VtxCurrentIdx+1)); PrimWriteIdx((ImDrawIdx)(_VtxCurrentIdx+2));
    PrimWriteIdx((ImDrawIdx)(_VtxCurrentIdx)); PrimWriteIdx((ImDrawIdx)(_VtxCurrentIdx+2)); PrimWriteIdx((ImDrawIdx)(_VtxCurrentIdx+3));
    PrimWriteVtx(a, uv, col_upr_left);
    PrimWriteVtx(ImVec2(c.x, a.y), uv, col_upr_right);
    PrimWriteVtx(c, uv, col_bot_right);
    PrimWriteVtx(ImVec2(a.x, c.y), uv, col_bot_left);
}

void ImDrawList::AddQuad(const ImVec2& a, const ImVec2& b, const ImVec2& c, const ImVec2& d, ImU32 col, float thickness)
{
    if ((col & IM_COL32_A_MASK) == 0)
        return;

    PathLineTo(a);
    PathLineTo(b);
    PathLineTo(c);
    PathLineTo(d);
    PathStroke(col, true, thickness);
}

void ImDrawList::AddQuadFilled(const ImVec2& a, const ImVec2& b, const ImVec2& c, const ImVec2& d, ImU32 col)
{
    if ((col & IM_COL32_A_MASK) == 0)
        return;

    PathLineTo(a);
    PathLineTo(b);
    PathLineTo(c);
    PathLineTo(d);
    PathFillConvex(col);
}

void ImDrawList::AddTriangle(const ImVec2& a, const ImVec2& b, const ImVec2& c, ImU32 col, float thickness)
{
    if ((col & IM_COL32_A_MASK) == 0)
        return;

    PathLineTo(a);
    PathLineTo(b);
    PathLineTo(c);
    PathStroke(col, true, thickness);
}

void ImDrawList::AddTriangleFilled(const ImVec2& a, const ImVec2& b, const ImVec2& c, ImU32 col)
{
    if ((col & IM_COL32_A_MASK) == 0)
        return;

    PathLineTo(a);
    PathLineTo(b);
    PathLineTo(c);
    PathFillConvex(col);
}

void ImDrawList::AddCircle(const ImVec2& centre, float radius, ImU32 col, int num_segments, float thickness)
{
    if ((col & IM_COL32_A_MASK) == 0)
        return;

    const float a_max = IM_PI*2.0f * ((float)num_segments - 1.0f) / (float)num_segments;
    PathArcTo(centre, radius-0.5f, 0.0f, a_max, num_segments);
    PathStroke(col, true, thickness);
}

void ImDrawList::AddCircleFilled(const ImVec2& centre, float radius, ImU32 col, int num_segments)
{
    if ((col & IM_COL32_A_MASK) == 0)
        return;

    const float a_max = IM_PI*2.0f * ((float)num_segments - 1.0f) / (float)num_segments;
    PathArcTo(centre, radius, 0.0f, a_max, num_segments);
    PathFillConvex(col);
}

void ImDrawList::AddBezierCurve(const ImVec2& pos0, const ImVec2& cp0, const ImVec2& cp1, const ImVec2& pos1, ImU32 col, float thickness, int num_segments)
{
    if ((col & IM_COL32_A_MASK) == 0)
        return;

    PathLineTo(pos0);
    PathBezierCurveTo(cp0, cp1, pos1, num_segments);
    PathStroke(col, false, thickness);
}

void ImDrawList::AddText(const ImFont* font, float font_size, const ImVec2& pos, ImU32 col, const char* text_begin, const char* text_end, float wrap_width, const ImVec4* cpu_fine_clip_rect)
{
    if ((col & IM_COL32_A_MASK) == 0)
        return;

    if (text_end == NULL)
        text_end = text_begin + strlen(text_begin);
    if (text_begin == text_end)
        return;

    // Pull default font/size from the shared ImDrawListSharedData instance
    if (font == NULL)
        font = _Data->Font;
    if (font_size == 0.0f)
        font_size = _Data->FontSize;

    IM_ASSERT(font->ContainerAtlas->TexID == _TextureIdStack.back());  // Use high-level ImGui::PushFont() or low-level ImDrawList::PushTextureId() to change font.

    ImVec4 clip_rect = _ClipRectStack.back();
    if (cpu_fine_clip_rect)
    {
        clip_rect.x = ImMax(clip_rect.x, cpu_fine_clip_rect->x);
        clip_rect.y = ImMax(clip_rect.y, cpu_fine_clip_rect->y);
        clip_rect.z = ImMin(clip_rect.z, cpu_fine_clip_rect->z);
        clip_rect.w = ImMin(clip_rect.w, cpu_fine_clip_rect->w);
    }
    font->RenderText(this, font_size, pos, col, clip_rect, text_begin, text_end, wrap_width, cpu_fine_clip_rect != NULL);
}

void ImDrawList::AddText(const ImVec2& pos, ImU32 col, const char* text_begin, const char* text_end)
{
    AddText(NULL, 0.0f, pos, col, text_begin, text_end);
}

void ImDrawList::AddImage(ImTextureID user_texture_id, const ImVec2& a, const ImVec2& b, const ImVec2& uv_a, const ImVec2& uv_b, ImU32 col)
{
    if ((col & IM_COL32_A_MASK) == 0)
        return;

    const bool push_texture_id = _TextureIdStack.empty() || user_texture_id != _TextureIdStack.back();
    if (push_texture_id)
        PushTextureID(user_texture_id);

    PrimReserve(6, 4);
    PrimRectUV(a, b, uv_a, uv_b, col);

    if (push_texture_id)
        PopTextureID();
}

void ImDrawList::AddImageQuad(ImTextureID user_texture_id, const ImVec2& a, const ImVec2& b, const ImVec2& c, const ImVec2& d, const ImVec2& uv_a, const ImVec2& uv_b, const ImVec2& uv_c, const ImVec2& uv_d, ImU32 col)
{
    if ((col & IM_COL32_A_MASK) == 0)
        return;

    const bool push_texture_id = _TextureIdStack.empty() || user_texture_id != _TextureIdStack.back();
    if (push_texture_id)
        PushTextureID(user_texture_id);

    PrimReserve(6, 4);
    PrimQuadUV(a, b, c, d, uv_a, uv_b, uv_c, uv_d, col);

    if (push_texture_id)
        PopTextureID();
}

void ImDrawList::AddImageRounded(ImTextureID user_texture_id, const ImVec2& a, const ImVec2& b, const ImVec2& uv_a, const ImVec2& uv_b, ImU32 col, float rounding, int rounding_corners)
{
    if ((col & IM_COL32_A_MASK) == 0)
        return;

    if (rounding <= 0.0f || (rounding_corners & ImDrawCornerFlags_All) == 0)
    {
        AddImage(user_texture_id, a, b, uv_a, uv_b, col);
        return;
    }

    const bool push_texture_id = _TextureIdStack.empty() || user_texture_id != _TextureIdStack.back();
    if (push_texture_id)
        PushTextureID(user_texture_id);

    int vert_start_idx = VtxBuffer.Size;
    PathRect(a, b, rounding, rounding_corners);
    PathFillConvex(col);
    int vert_end_idx = VtxBuffer.Size;
    ImGui::ShadeVertsLinearUV(VtxBuffer.Data + vert_start_idx, VtxBuffer.Data + vert_end_idx, a, b, uv_a, uv_b, true);

    if (push_texture_id)
        PopTextureID();
}

//-----------------------------------------------------------------------------
// ImDrawData
//-----------------------------------------------------------------------------

// For backward compatibility: convert all buffers from indexed to de-indexed, in case you cannot render indexed. Note: this is slow and most likely a waste of resources. Always prefer indexed rendering!
void ImDrawData::DeIndexAllBuffers()
{
    ImVector<ImDrawVert> new_vtx_buffer;
    TotalVtxCount = TotalIdxCount = 0;
    for (int i = 0; i < CmdListsCount; i++)
    {
        ImDrawList* cmd_list = CmdLists[i];
        if (cmd_list->IdxBuffer.empty())
            continue;
        new_vtx_buffer.resize(cmd_list->IdxBuffer.Size);
        for (int j = 0; j < cmd_list->IdxBuffer.Size; j++)
            new_vtx_buffer[j] = cmd_list->VtxBuffer[cmd_list->IdxBuffer[j]];
        cmd_list->VtxBuffer.swap(new_vtx_buffer);
        cmd_list->IdxBuffer.resize(0);
        TotalVtxCount += cmd_list->VtxBuffer.Size;
    }
}

// Helper to scale the ClipRect field of each ImDrawCmd. Use if your final output buffer is at a different scale than ImGui expects, or if there is a difference between your window resolution and framebuffer resolution.
void ImDrawData::ScaleClipRects(const ImVec2& scale)
{
    for (int i = 0; i < CmdListsCount; i++)
    {
        ImDrawList* cmd_list = CmdLists[i];
        for (int cmd_i = 0; cmd_i < cmd_list->CmdBuffer.Size; cmd_i++)
        {
            ImDrawCmd* cmd = &cmd_list->CmdBuffer[cmd_i];
            cmd->ClipRect = ImVec4(cmd->ClipRect.x * scale.x, cmd->ClipRect.y * scale.y, cmd->ClipRect.z * scale.x, cmd->ClipRect.w * scale.y);
        }
    }
}

//-----------------------------------------------------------------------------
// Shade functions
//-----------------------------------------------------------------------------

// Generic linear color gradient, write to RGB fields, leave A untouched.
void ImGui::ShadeVertsLinearColorGradientKeepAlpha(ImDrawVert* vert_start, ImDrawVert* vert_end, ImVec2 gradient_p0, ImVec2 gradient_p1, ImU32 col0, ImU32 col1)
{
    ImVec2 gradient_extent = gradient_p1 - gradient_p0;
    float gradient_inv_length2 = 1.0f / ImLengthSqr(gradient_extent);
    for (ImDrawVert* vert = vert_start; vert < vert_end; vert++)
    {
        float d = ImDot(vert->pos - gradient_p0, gradient_extent);
        float t = ImClamp(d * gradient_inv_length2, 0.0f, 1.0f);
        int r = ImLerp((int)(col0 >> IM_COL32_R_SHIFT) & 0xFF, (int)(col1 >> IM_COL32_R_SHIFT) & 0xFF, t);
        int g = ImLerp((int)(col0 >> IM_COL32_G_SHIFT) & 0xFF, (int)(col1 >> IM_COL32_G_SHIFT) & 0xFF, t);
        int b = ImLerp((int)(col0 >> IM_COL32_B_SHIFT) & 0xFF, (int)(col1 >> IM_COL32_B_SHIFT) & 0xFF, t);
        vert->col = (r << IM_COL32_R_SHIFT) | (g << IM_COL32_G_SHIFT) | (b << IM_COL32_B_SHIFT) | (vert->col & IM_COL32_A_MASK);
    }
}

// Scan and shade backward from the end of given vertices. Assume vertices are text only (= vert_start..vert_end going left to right) so we can break as soon as we are out the gradient bounds.
void ImGui::ShadeVertsLinearAlphaGradientForLeftToRightText(ImDrawVert* vert_start, ImDrawVert* vert_end, float gradient_p0_x, float gradient_p1_x)
{
    float gradient_extent_x = gradient_p1_x - gradient_p0_x;
    float gradient_inv_length2 = 1.0f / (gradient_extent_x * gradient_extent_x);
    int full_alpha_count = 0;
    for (ImDrawVert* vert = vert_end - 1; vert >= vert_start; vert--)
    {
        float d = (vert->pos.x - gradient_p0_x) * (gradient_extent_x);
        float alpha_mul = 1.0f - ImClamp(d * gradient_inv_length2, 0.0f, 1.0f);
        if (alpha_mul >= 1.0f && ++full_alpha_count > 2)
            return; // Early out
        int a = (int)(((vert->col >> IM_COL32_A_SHIFT) & 0xFF) * alpha_mul);
        vert->col = (vert->col & ~IM_COL32_A_MASK) | (a << IM_COL32_A_SHIFT);
    }
}

// Distribute UV over (a, b) rectangle
void ImGui::ShadeVertsLinearUV(ImDrawVert* vert_start, ImDrawVert* vert_end, const ImVec2& a, const ImVec2& b, const ImVec2& uv_a, const ImVec2& uv_b, bool clamp)
{
    const ImVec2 size = b - a;
    const ImVec2 uv_size = uv_b - uv_a;
    const ImVec2 scale = ImVec2(
        size.x != 0.0f ? (uv_size.x / size.x) : 0.0f,
        size.y != 0.0f ? (uv_size.y / size.y) : 0.0f);

    if (clamp)
    {
        const ImVec2 min = ImMin(uv_a, uv_b);
        const ImVec2 max = ImMax(uv_a, uv_b);

        for (ImDrawVert* vertex = vert_start; vertex < vert_end; ++vertex)
            vertex->uv = ImClamp(uv_a + ImMul(ImVec2(vertex->pos.x, vertex->pos.y) - a, scale), min, max);
    }
    else
    {
        for (ImDrawVert* vertex = vert_start; vertex < vert_end; ++vertex)
            vertex->uv = uv_a + ImMul(ImVec2(vertex->pos.x, vertex->pos.y) - a, scale);
    }
}

//-----------------------------------------------------------------------------
// ImFontConfig
//-----------------------------------------------------------------------------

ImFontConfig::ImFontConfig()
{
    FontData = NULL;
    FontDataSize = 0;
    FontDataOwnedByAtlas = true;
    FontNo = 0;
    SizePixels = 0.0f;
    OversampleH = 3;
    OversampleV = 1;
    PixelSnapH = false;
    GlyphExtraSpacing = ImVec2(0.0f, 0.0f);
    GlyphOffset = ImVec2(0.0f, 0.0f);
    GlyphRanges = NULL;
    MergeMode = false;
    RasterizerFlags = 0x00;
    RasterizerMultiply = 1.0f;
    memset(Name, 0, sizeof(Name));
    DstFont = NULL;
}

//-----------------------------------------------------------------------------
// ImFontAtlas
//-----------------------------------------------------------------------------

// A work of art lies ahead! (. = white layer, X = black layer, others are blank)
// The white texels on the top left are the ones we'll use everywhere in ImGui to render filled shapes.
const int FONT_ATLAS_DEFAULT_TEX_DATA_W_HALF = 90;
const int FONT_ATLAS_DEFAULT_TEX_DATA_H      = 27;
const unsigned int FONT_ATLAS_DEFAULT_TEX_DATA_ID = 0x80000000;
static const char FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS[FONT_ATLAS_DEFAULT_TEX_DATA_W_HALF * FONT_ATLAS_DEFAULT_TEX_DATA_H + 1] =
{
    "..-         -XXXXXXX-    X    -           X           -XXXXXXX          -          XXXXXXX"
    "..-         -X.....X-   X.X   -          X.X          -X.....X          -          X.....X"
    "---         -XXX.XXX-  X...X  -         X...X         -X....X           -           X....X"
    "X           -  X.X  - X.....X -        X.....X        -X...X            -            X...X"
    "XX          -  X.X  -X.......X-       X.......X       -X..X.X           -           X.X..X"
    "X.X         -  X.X  -XXXX.XXXX-       XXXX.XXXX       -X.X X.X          -          X.X X.X"
    "X..X        -  X.X  -   X.X   -          X.X          -XX   X.X         -         X.X   XX"
    "X...X       -  X.X  -   X.X   -    XX    X.X    XX    -      X.X        -        X.X      "
    "X....X      -  X.X  -   X.X   -   X.X    X.X    X.X   -       X.X       -       X.X       "
    "X.....X     -  X.X  -   X.X   -  X..X    X.X    X..X  -        X.X      -      X.X        "
    "X......X    -  X.X  -   X.X   - X...XXXXXX.XXXXXX...X -         X.X   XX-XX   X.X         "
    "X.......X   -  X.X  -   X.X   -X.....................X-          X.X X.X-X.X X.X          "
    "X........X  -  X.X  -   X.X   - X...XXXXXX.XXXXXX...X -           X.X..X-X..X.X           "
    "X.........X -XXX.XXX-   X.X   -  X..X    X.X    X..X  -            X...X-X...X            "
    "X..........X-X.....X-   X.X   -   X.X    X.X    X.X   -           X....X-X....X           "
    "X......XXXXX-XXXXXXX-   X.X   -    XX    X.X    XX    -          X.....X-X.....X          "
    "X...X..X    ---------   X.X   -          X.X          -          XXXXXXX-XXXXXXX          "
    "X..X X..X   -       -XXXX.XXXX-       XXXX.XXXX       ------------------------------------"
    "X.X  X..X   -       -X.......X-       X.......X       -    XX           XX    -           "
    "XX    X..X  -       - X.....X -        X.....X        -   X.X           X.X   -           "
    "      X..X          -  X...X  -         X...X         -  X..X           X..X  -           "
    "       XX           -   X.X   -          X.X          - X...XXXXXXXXXXXXX...X -           "
    "------------        -    X    -           X           -X.....................X-           "
    "                    ----------------------------------- X...XXXXXXXXXXXXX...X -           "
    "                                                      -  X..X           X..X  -           "
    "                                                      -   X.X           X.X   -           "
    "                                                      -    XX           XX    -           "
};

static const ImVec2 FONT_ATLAS_DEFAULT_TEX_CURSOR_DATA[ImGuiMouseCursor_Count_][3] =
{
    // Pos ........ Size ......... Offset ......
    { ImVec2(0,3),  ImVec2(12,19), ImVec2( 0, 0) }, // ImGuiMouseCursor_Arrow
    { ImVec2(13,0), ImVec2(7,16),  ImVec2( 4, 8) }, // ImGuiMouseCursor_TextInput
    { ImVec2(31,0), ImVec2(23,23), ImVec2(11,11) }, // ImGuiMouseCursor_Move
    { ImVec2(21,0), ImVec2( 9,23), ImVec2( 5,11) }, // ImGuiMouseCursor_ResizeNS
    { ImVec2(55,18),ImVec2(23, 9), ImVec2(11, 5) }, // ImGuiMouseCursor_ResizeEW
    { ImVec2(73,0), ImVec2(17,17), ImVec2( 9, 9) }, // ImGuiMouseCursor_ResizeNESW
    { ImVec2(55,0), ImVec2(17,17), ImVec2( 9, 9) }, // ImGuiMouseCursor_ResizeNWSE
};


ImFontAtlas::ImFontAtlas()
{
    TexID = NULL;
    TexDesiredWidth = 0;
    TexGlyphPadding = 1;
    TexPixelsAlpha8 = NULL;
    TexPixelsRGBA32 = NULL;
    TexWidth = TexHeight = 0;
    TexUvWhitePixel = ImVec2(0, 0);
    for (int n = 0; n < IM_ARRAYSIZE(CustomRectIds); n++)
        CustomRectIds[n] = -1;
}

ImFontAtlas::~ImFontAtlas()
{
    Clear();
}

void    ImFontAtlas::ClearInputData()
{
    for (int i = 0; i < ConfigData.Size; i++)
        if (ConfigData[i].FontData && ConfigData[i].FontDataOwnedByAtlas)
        {
            //ImGui::MemFree(ConfigData[i].FontData);
            ConfigData[i].FontData = NULL;
        }

    // When clearing this we lose access to  the font name and other information used to build the font.
    for (int i = 0; i < Fonts.Size; i++)
        if (Fonts[i]->ConfigData >= ConfigData.Data && Fonts[i]->ConfigData < ConfigData.Data + ConfigData.Size)
        {
            Fonts[i]->ConfigData = NULL;
            Fonts[i]->ConfigDataCount = 0;
        }
    ConfigData.clear();
    CustomRects.clear();
    for (int n = 0; n < IM_ARRAYSIZE(CustomRectIds); n++)
        CustomRectIds[n] = -1;
}

void    ImFontAtlas::ClearTexData()
{
    if (TexPixelsAlpha8)
        ImGui::MemFree(TexPixelsAlpha8);
    if (TexPixelsRGBA32)
        ImGui::MemFree(TexPixelsRGBA32);
    TexPixelsAlpha8 = NULL;
    TexPixelsRGBA32 = NULL;
}

void    ImFontAtlas::ClearFonts()
{
    for (int i = 0; i < Fonts.Size; i++)
        IM_DELETE(Fonts[i]);
    Fonts.clear();
}

void    ImFontAtlas::Clear()
{
    ClearInputData();
    ClearTexData();
    ClearFonts();
}

void    ImFontAtlas::GetTexDataAsAlpha8(unsigned char** out_pixels, int* out_width, int* out_height, int* out_BYTEs_per_pixel)
{
    // Build atlas on demand
    if (TexPixelsAlpha8 == NULL)
    {
        if (ConfigData.empty())
            AddFontDefault();
        Build();
    }

    *out_pixels = TexPixelsAlpha8;
    if (out_width) *out_width = TexWidth;
    if (out_height) *out_height = TexHeight;
    if (out_BYTEs_per_pixel) *out_BYTEs_per_pixel = 1;
}

void    ImFontAtlas::GetTexDataAsRGBA32(unsigned char** out_pixels, int* out_width, int* out_height, int* out_BYTEs_per_pixel)
{
    // Convert to RGBA32 format on demand
    // Although it is likely to be the most commonly used format, our font rendering is 1 channel / 8 bpp
    if (!TexPixelsRGBA32)
    {
        unsigned char* pixels = NULL;
        GetTexDataAsAlpha8(&pixels, NULL, NULL);
        if (pixels)
        {
            TexPixelsRGBA32 = (unsigned int*)ImGui::MemAlloc((size_t)(TexWidth * TexHeight * 4));
            const unsigned char* src = pixels;
            unsigned int* dst = TexPixelsRGBA32;
            for (int n = TexWidth * TexHeight; n > 0; n--)
                *dst++ = IM_COL32(255, 255, 255, (unsigned int)(*src++));
        }
    }

    *out_pixels = (unsigned char*)TexPixelsRGBA32;
    if (out_width) *out_width = TexWidth;
    if (out_height) *out_height = TexHeight;
    if (out_BYTEs_per_pixel) *out_BYTEs_per_pixel = 4;
}

ImFont* ImFontAtlas::AddFont(const ImFontConfig* font_cfg)
{
    IM_ASSERT(font_cfg->FontData != NULL && font_cfg->FontDataSize > 0);
    IM_ASSERT(font_cfg->SizePixels > 0.0f);

    // Create new font
    if (!font_cfg->MergeMode)
        Fonts.push_back(IM_NEW(ImFont));
    else
        IM_ASSERT(!Fonts.empty()); // When using MergeMode make sure that a font has already been added before. You can use ImGui::GetIO().Fonts->AddFontDefault() to add the default imgui font.

    ConfigData.push_back(*font_cfg);
    ImFontConfig& new_font_cfg = ConfigData.back();
    if (!new_font_cfg.DstFont)
        new_font_cfg.DstFont = Fonts.back();
    if (!new_font_cfg.FontDataOwnedByAtlas)
    {
        new_font_cfg.FontData = ImGui::MemAlloc(new_font_cfg.FontDataSize);
        new_font_cfg.FontDataOwnedByAtlas = true;
        memcpy(new_font_cfg.FontData, font_cfg->FontData, (size_t)new_font_cfg.FontDataSize);
    }

    // Invalidate texture
    ClearTexData();
    return new_font_cfg.DstFont;
}

// Default font TTF is compressed with stb_compress then base85 encoded (see extra_fonts/binary_to_compressed_c.cpp for encoder)
static unsigned int stb_decompress_length(unsigned char *input);
static unsigned int stb_decompress(unsigned char *output, unsigned char *i, unsigned int length);
static const char*  GetDefaultCompressedFontDataTTFBase85();
static unsigned int Decode85Byte(char c)                                    { return c >= '\\' ? c-36 : c-35; }
static void         Decode85(const unsigned char* src, unsigned char* dst)
{
    while (*src)
    {
        unsigned int tmp = Decode85Byte(src[0]) + 85*(Decode85Byte(src[1]) + 85*(Decode85Byte(src[2]) + 85*(Decode85Byte(src[3]) + 85*Decode85Byte(src[4]))));
        dst[0] = ((tmp >> 0) & 0xFF); dst[1] = ((tmp >> 8) & 0xFF); dst[2] = ((tmp >> 16) & 0xFF); dst[3] = ((tmp >> 24) & 0xFF);   // We can't assume little-endianness.
        src += 5;
        dst += 4;
    }
}


static const unsigned int verdana_compressed_size = 141828;
static const unsigned int verdana_compressed_data[141828 / 4] =
{
	0x0000bc57, 0x00000000, 0x18df0200, 0x00000400, 0x00010025, 0x82160000, 0x00043e04, 0x49534460, 0x3c176547, 0xc7020011, 0x1700009c, 0x4544477c,
	0x03260046, 0xc60200bc, 0x282582b0, 0x4f50471e, 0x0e370753, 0x200f823c, 0x280f82d0, 0x55534738, 0xe824e442, 0x202f8226, 0x3c0f8208, 0x53544c94,
	0xe494df48, 0x1100006d, 0x03000024, 0x2f534fbb, 0x7b537232, 0x0100001c, 0x271f82e8, 0x4d445660, 0x7cf17458, 0x21081f82, 0x0000e014, 0x6d63e005,
	0x197d7061, 0x00004d4e, 0x00008c8e, 0x76637607, 0xa24c2074, 0x00000241, 0x3382bc9b, 0x70669838, 0xcea46d67, 0x0000516d, 0x00000496, 0x6167ba02,
	0x17007073, 0x7f820900, 0x00a02b08, 0x67100000, 0x1966796c, 0x009ad935, 0x00c4a400, 0x688eeb01, 0x0a786d64, 0x00ecc839, 0x00c01a00, 0x68cc7300,
	0xd9646165, 0xdc82595c, 0x826c0121, 0x6836212f, 0x0f271082, 0x00a70b27, 0x82a40100, 0x6824280f, 0xee78746d, 0x824386f4, 0x00483f5b, 0x6bdc0e00,
	0x756e7265, 0x00537ebf, 0x00549002, 0x6c960c00, 0x0f61636f, 0x00158735, 0x0f829d00, 0x6d700729, 0x06707861, 0x82dd0237, 0x82c8203f, 0x6e202b3f,
	0xce656d61, 0x00aab906, 0x73829c02, 0x708f093c, 0xb674736f, 0x00379301, 0x007ca602, 0x70232000, 0x08706572, 0x0040ef70, 0x8f829800, 0x00fc0223,
	0x2e358201, 0x411f0505, 0x5fff09d5, 0x00f53c0f, 0x8300081b, 0x7eaa2300, 0x07832944, 0xc491c82b, 0xfd86fbc0, 0x08930b93, 0x820f8268, 0x830582e7,
	0x23378202, 0x52fe0b08, 0x2c209382, 0x71221f82, 0x4984930b, 0x03861983, 0x83b70321, 0x36058211, 0x00070078, 0x0005006b, 0x00100002, 0x0056002f,
	0x010a0200, 0x820300c8, 0x0402241d, 0x82900111, 0x05082819, 0x0033059a, 0x85250100, 0xa0033907, 0xa7027800, 0x0b020008, 0x05030406, 0x04020404,
	0xff0600a1, 0x5b200040, 0x10205a82, 0x00250382, 0x2020534d, 0x2f108200, 0x1e06fdff, 0xca0059fe, 0xae010b08, 0x9f010020, 0x04231b83, 0x82d1055d,
	0x200e8207, 0x24928608, 0x0000d002, 0x3f038202, 0x23012603, 0xa800ac03, 0xc3008c06, 0x9b001605, 0x95009c08, 0x7300d005, 0xa4002602, 0xb500a203,
	0x93200382, 0xa7201782, 0xd2241f82, 0x9300e902, 0x99200f82, 0xfd240782, 0xe2ffa203, 0x89241782, 0x16011605, 0xa1200782, 0xa7200382, 0x4d200382,
	0xbb200382, 0x00211785, 0x2007829a, 0x2403827a, 0x01a20371, 0x2037825a, 0x204382e6, 0x3a0382fe, 0x018c06f5, 0x005d040c, 0x000008a0, 0x007805b0,
	0x007c051a, 0x009605c8, 0x822a0673, 0x000f2807, 0x009904c8, 0x823406c8, 0x0003300f, 0x005e03c8, 0x00a30389, 0x008b052c, 0x827404cd, 0x82be2017,
	0x82fc2023, 0x004c2407, 0x85d30473, 0x90052107, 0x782a1382, 0xee048600, 0xdb050000, 0x5383b200, 0x00e9072b, 0x007b055c, 0x00ec0444, 0x20078206,
	0x207f827e, 0x200382ef, 0x20038246, 0x248382ab, 0xff1605ba, 0x2cbb82fc, 0x00ce0454, 0x00fc0468, 0x002b04b9, 0x26078269, 0x00c4046c, 0x82d0026a,
	0x00fc3237, 0x0010056c, 0x003202b9, 0xffc102af, 0x00bc04c2, 0x240b82c1, 0x00c807bb, 0x231783b9, 0x6a00db04, 0x27823784, 0x846a0321, 0x036e243f,
	0x823e0027, 0x82b1201b, 0x823d202b, 0x82562063, 0x823c2007, 0x043d2c03, 0x055d0034, 0x03ad0014, 0x827a01a2, 0x82bb2007, 0x84bb201b, 0x82fb83f7,
	0x820520f7, 0x850520f3, 0x837020d3, 0x209384bf, 0x8f9782ce, 0x20a38303, 0x8a7782c4, 0x24938203, 0xff3202a0, 0x200382eb, 0x200b82f5, 0x839b8805,
	0x82038a9f, 0x8cb12017, 0x00162a03, 0x005604bb, 0x0016059a, 0x06af419f, 0x5d04ac22, 0x162adb82, 0xf6048900, 0x0008b900, 0x03839f00, 0x00d0072b,
	0x021605aa, 0x0116051d, 0x28b7825a, 0x00e007f5, 0x004c060e, 0x201b8273, 0x200f82a1, 0x05d341d7, 0x820c0121, 0x056c2443, 0x82be0022, 0x05952307,
	0xe38300d1, 0xa9059024, 0x0f827100, 0x57828a20, 0x03829720, 0x2b827920, 0xa4076b22, 0xdb22d782, 0x0f825d00, 0x26037124, 0x13822301, 0x0382d220,
	0x16058624, 0x0782dcff, 0x3b82f320, 0x28053224, 0x0382a600, 0x0f82ae20, 0x2741b220, 0x26738407, 0x0778008f, 0x826a00da, 0x82992053, 0x0399307f,
	0x03edffac, 0x029600ac, 0x02edff26, 0x86a00026, 0x04ac2b4b, 0x043d00bc, 0x020600ec, 0xdf83ffe4, 0xa2030024, 0x0382ba00, 0x0005c226, 0x02054400,
	0xfb820382, 0x00e90223, 0x203782fd, 0x244382f6, 0x002c0cf6, 0x22678495, 0x88c8000f, 0x230b8207, 0x89005e03, 0x5d200382, 0x7e200382, 0x89200382,
	0x03878383, 0x00db0523, 0x270387b2, 0xbb003202, 0x36011605, 0xed209782, 0x18200782, 0x13240382, 0x21021605, 0x2d200782, 0x61200382, 0x56200382,
	0x9f200382, 0x32280382, 0x18007e04, 0x18004602, 0x86386782, 0x6e002b04, 0x7e007b05, 0x5d003404, 0x7a01a203, 0x0e003406, 0x6a00e504, 0xc384bb83,
	0xc800d826, 0xb900fc04, 0xdc26d782, 0x23018c06, 0x03835604, 0x04cf0025, 0x82cf0056, 0x86ab20ff, 0x828c2003, 0x823c2077, 0x8273203b, 0x836c202b,
	0x225b88a7, 0x82730096, 0x05692163, 0x1f830786, 0xff160523, 0x82fb83fc, 0x041a2423, 0x876800ce, 0x2a062107, 0x2e22fb82, 0x47826c00, 0x82050e21,
	0xc40423fb, 0x07876a00, 0x00740423, 0x20e382c8, 0x220784ab, 0x83bb005e, 0xab032107, 0xfc20f382, 0x10233382, 0x8605b900, 0x4c062107, 0xdb206f82,
	0x90243782, 0x6a03c800, 0x07851782, 0x8f879220, 0x00ee0427, 0x00270300, 0x2707873e, 0xb200db05, 0xb1001005, 0x0b410788, 0x07134106, 0x43880421,
	0x062105df, 0x069b438d, 0x6a00dd30, 0x6d001a04, 0x6a000b05, 0x0a00f803, 0xbf825206, 0x0429cf82, 0x042301ff, 0x099a005d, 0x082f824f, 0x8900f722,
	0xaf00e904, 0x0000d805, 0xd500e402, 0xd5007504, 0x95009c08, 0x0f009602, 0x9200d504, 0x8300d602, 0x0b820383, 0x0782b120, 0x07417020, 0x0e2b4108,
	0x870f0341, 0x0767410f, 0x03200790, 0x23050b41, 0x20000306, 0x1328d382, 0x2c005e03, 0xf2ff3202, 0x5f200782, 0xfc200782, 0x80240782, 0x01003202,
	0x89200782, 0x8e220782, 0x1f82a303, 0xc2ffc12a, 0xcd008b05, 0xc100bc04, 0x67410384, 0x41052005, 0x5741074f, 0x0e5f410f, 0x57411b20, 0x104f410f,
	0xb200db24, 0x5f410b05, 0x27078206, 0x5c00e907, 0x56008c06, 0x23075f42, 0xb9006702, 0x0727ff87, 0x070e00e0, 0x866800a4, 0x035d2463, 0x875a01a2,
	0x88078f2f, 0xff262e3f, 0xff1605ed, 0x001605d0, 0x00be0589, 0x078f42b1, 0x8a200782, 0x99240382, 0x6100b001, 0x2105ff42, 0x07821202, 0x6b820020,
	0x0206072e, 0xf6060000, 0x51040000, 0x0c070000, 0x07200b82, 0x43260782, 0x32020000, 0x0b46cbff, 0x00a02b08, 0x000f051a, 0x007b05c8, 0x0346067e,
	0x8b052806, 0x7c05cd00, 0x45061a00, 0x052306ff, 0x83720031, 0x211f83ab, 0x2b82d304, 0x76006124, 0x5782ee04, 0x2c05ef45, 0x00f70644, 0x008c06b3,
	0x005e036c, 0x3caf847e, 0x046c00fc, 0x056d001a, 0x02b90010, 0x05a00032, 0x04b1000d, 0x04b900f6, 0x033d00bc, 0x05eb45a9, 0x00fe0423, 0x201b8289,
	0x201382bb, 0x220382c1, 0x851e053d, 0x0604291f, 0xdb046800, 0x00056a00, 0x10220f82, 0x3b846900, 0x3000b82a, 0xb0009306, 0x71008206, 0x05203382,
	0x23831384, 0x13835782, 0x0625bf83, 0x04ffff57, 0x229b8288, 0x8273009b, 0x828620db, 0x8289208b, 0x037e2903, 0x082c00a3, 0x081200f2, 0x0623b782,
	0x83ffff8b, 0x83a383db, 0x080341cb, 0xc8007c22, 0xf7223b84, 0x4b830a00, 0x00c9072b, 0x00ed0420, 0x00010651, 0x830383c8, 0xe0052533, 0xbe061200,
	0x03200f82, 0x82062743, 0x82042007, 0x96052353, 0x0b417300, 0x8d062107, 0x7b24af82, 0x17064400, 0xb2288782, 0x3e088e00, 0x5c08c800, 0x44242f82,
	0x5d070000, 0x72201382, 0x9c240382, 0x46086100, 0xa6240782, 0xce042c00, 0xea28eb82, 0xc2047400, 0xc503b900, 0xf932ef82, 0xc4040900, 0x62066a00,
	0x32043400, 0x1f054100, 0x0383b900, 0x00bc0429, 0x00f704c1, 0x8292051d, 0x8219200f, 0x83fb8327, 0x82fc2007, 0x4346200b, 0x2382059f, 0xba063d24,
	0x07826f00, 0x28053c22, 0xd8281782, 0x02078e00, 0x1a07b900, 0x20243382, 0x5b060a00, 0x91201382, 0x60240382, 0xb6065300, 0xcc220782, 0x6b834300,
	0x00100523, 0x2a7b8413, 0x046a0060, 0x026e002b, 0x82af0032, 0x02052803, 0x07c2ffc1, 0x821d0050, 0x83b92003, 0x08a74123, 0x88227783, 0x3383c800,
	0x00000825, 0x826009cb, 0x261383cb, 0x04190156, 0x82ef0056, 0x82e62003, 0x86b32003, 0x82f32007, 0x00c52107, 0x0621008e, 0x05bb4474, 0x000d062b,
	0x004705b2, 0xfd0000b1, 0x24038244, 0xfc000017, 0x2007827c, 0x06df4509, 0x07850320, 0x82250121, 0x8a422007, 0x200f8203, 0x20238602, 0x83178b01,
	0x4536200b, 0x0f8d0f6b, 0x8de3ff21, 0x4500200f, 0x17a80893, 0x440eaf45, 0x292412bb, 0xfcffc404, 0xc82c1792, 0x6a00c404, 0x89005e03, 0xab003202,
	0xaf240786, 0x73000a06, 0x04301783, 0x030e0088, 0x071300c5, 0x062000c9, 0x05340062, 0x8706ab44, 0x03062107, 0x24066741, 0x040600ec, 0x057347bc,
	0x05230783, 0x8244007b, 0x053c2807, 0x048e00b2, 0x828e00d8, 0x05c82407, 0x87b90010, 0x08c74457, 0x17821382, 0x1605002b, 0xac039900, 0x7504edff,
	0x240b8300, 0x00960566, 0x33038373, 0xb900c807, 0x3400fc05, 0xc8005509, 0x5c00e907, 0x9700ae06, 0x343c7b82, 0x0000ee04, 0x29000008, 0x05002b04,
	0x4800d304, 0xf5008c06, 0xc8007c05, 0xbe005604, 0x100ed641, 0x40020e00, 0x9507ab42, 0xe5ff2107, 0x00211795, 0x084f446a, 0x96075744, 0x0fb34707,
	0x9f077f44, 0x08234a07, 0x880e7b43, 0x00fc3617, 0xfc00006c, 0x0016050b, 0x0007098a, 0xffab056e, 0x02ab05e9, 0x8703857e, 0xe9ff2d0b, 0x25000004,
	0x73003406, 0x1a007805, 0x2e220382, 0x0b849605, 0x2b048624, 0xa7496e00, 0x32023307, 0xe902a400, 0x0106c400, 0x1f05c800, 0x0000b900, 0x038271fd,
	0x8009af30, 0x52087300, 0xde076a00, 0x82067300, 0x6b827200, 0x4c06de26, 0xef047300, 0x07271382, 0x83051b00, 0x86071400, 0x82178407, 0x48072093,
	0x05210683, 0x2347836c, 0x250686fb, 0x2c2e6f82, 0x73083d00, 0x00075c00, 0x92035600, 0x0383ab00, 0x00210223, 0x2d0387b2, 0x4c011605, 0x5a01a203,
	0xc8004204, 0x8b822602, 0x062f0382, 0x05a40203, 0x01360219, 0x07000068, 0x8279006c, 0x0036387b, 0x01b70300, 0x301c1c01, 0x0e0b0e0e, 0x01010a01,
	0x0f010e0e, 0x880b0101, 0x3d118300, 0x320c0b0e, 0x2319100e, 0x740f0e15, 0x242d0e0a, 0x0d0d0d0e, 0x1d2c320e, 0x111c2e32, 0x0084011c, 0x21081082,
	0x0d1c0d0d, 0x0e01b40b, 0x100b11b4, 0x112a0d0d, 0x100a0b11, 0x01110a0f, 0x3201010e, 0x0e231032, 0x36821d0d, 0x3d830282, 0x82b40d21, 0x100b2100,
	0x69840083, 0x74827082, 0x01234984, 0x820d330e, 0x010e2285, 0x200e8310, 0x2504820b, 0x300b100e, 0x0982010e, 0x82272721, 0x010d2249, 0x830a821c,
	0x82012016, 0x8432845c, 0x2332250f, 0x74232332, 0x62820082, 0x1d1d1d23, 0x841984b4, 0xd70a2a04, 0x111c1132, 0x1101100e, 0x84a6820a, 0x29048212,
	0x32740d0e, 0x100e1011, 0x9f820d0e, 0x0d320d3c, 0x23100d19, 0x2d0d230d, 0x2d322db4, 0x0e0b0e01, 0x0e100d0b, 0x322a0e2a, 0x01822c11, 0x1d0b1d23,
	0x3beb820b, 0x130d1011, 0x1812260d, 0x0d011011, 0x110a0a01, 0x0a24010e, 0x01011912, 0x0d320119, 0x40834a83, 0x0e0d2322, 0x0f250184, 0x740b0f0b,
	0x200185b4, 0x21d0830a, 0x5585b42d, 0x55842982, 0x1d275383, 0x2e181d49, 0x820a1110, 0x0e33263f, 0x2e01100d, 0x82018310, 0x82ee830f, 0x822e20a4,
	0x0e323803, 0x0c16101c, 0x0e32b427, 0x0f1c2301, 0x240a0e74, 0x0f0d300e, 0x822c1e0d, 0x143308d4, 0x120d1174, 0x0b0bb40b, 0x0d0b0d0f, 0x130a0db4,
	0x1010010a, 0x100c0b01, 0x100bb410, 0x0a23100b, 0x74320d10, 0x0e0c0a74, 0x11110e01, 0x100e0e32, 0x83112301, 0x2412228b, 0x0842820f, 0x112c1030,
	0x222d1c13, 0x2d1f1111, 0x10010d0e, 0x010a240d, 0x12300d0d, 0x010b1010, 0x1010101d, 0x0a110f0d, 0x0d270f17, 0x110c3211, 0x0a0d0e0c, 0x45820b0d,
	0x01b4b42b, 0x0b0b0e0a, 0x0a10100a, 0x05a24101, 0x23065041, 0x2028102d, 0x88097341, 0x0d322109, 0x2a410195, 0x23058905, 0xb474b474, 0x30205084,
	0x11293a85, 0x1c01010f, 0x22012201, 0x200f820b, 0x2092830f, 0x26088224, 0x2e2e0301, 0x922c0101, 0x86124067, 0x8b100d21, 0x102d2101, 0x1d250187,
	0x280b1d0b, 0x21018720, 0x01850a11, 0x0b010d22, 0xbc83d584, 0x0132322a, 0x112c1132, 0x100e01b4, 0x0d24cb8c, 0x2e102e0d, 0x1d211184, 0x2206841d,
	0x820a0120, 0x0b082207, 0x21008200, 0x12840001, 0x000c002f, 0x00ff08f8, 0xff080008, 0x000900fe, 0x2005820a, 0x2205840a, 0x820b000b, 0x000c220b,
	0x2805820c, 0xff0d000d, 0x000e00fd, 0x2205820e, 0x820f000f, 0x84102005, 0x00112205, 0x280b8211, 0xff120012, 0x001300fc, 0x22058213, 0x82150014,
	0x84152005, 0x00162205, 0x280b8216, 0xff170017, 0x001800fb, 0x22058218, 0x821a0019, 0x001a2205, 0x2005821b, 0x2805841b, 0xff1c001c, 0x001d00fa,
	0x2205821d, 0x821e001e, 0x001f2205, 0x20058220, 0x28058420, 0xff210021, 0x002200f9, 0x22058222, 0x82230023, 0x00242205, 0x22058225, 0x82260025,
	0x82262005, 0x00f82a05, 0xff270027, 0x002800f8, 0x22058228, 0x82290029, 0x002a2205, 0x2005822b, 0x2a05822b, 0x002c00f7, 0x00f7ff2c, 0x822d002d,
	0x002e2205, 0x2205822e, 0x8230002f, 0x00302605, 0x00f6ff31, 0x22058431, 0x82320032, 0x0033220b, 0x22058233, 0x82340034, 0x00352605, 0x00f5ff36,
	0x22058436, 0x82370037, 0x0038220b, 0x22058238, 0x82390039, 0x003a2805, 0x00f4ff3b, 0x823c003b, 0x003c2205, 0x2005823d, 0x2205843d, 0x823e003e,
	0x003f280b, 0x00f3ff3f, 0x82410040, 0x84412005, 0x00422205, 0x220b8242, 0x82430043, 0x00442805, 0x00f2ff44, 0x82460045, 0x00462205, 0x20058247,
	0x22058447, 0x82480048, 0x0049280b, 0x00f1ff49, 0x824a004a, 0x004b2205, 0x2205824c, 0x824d004c, 0x844d2005, 0x004e2805, 0x00f0ff4e, 0x824f004f,
	0x00502205, 0x22058251, 0x82520051, 0x82522005, 0x00ef2a05, 0xff530053, 0x005400ef, 0x22058254, 0x82550055, 0x00562205, 0x26058257, 0xff580057,
	0x845800ee, 0x00592205, 0x220b8259, 0x825a005a, 0x005b2205, 0x2605825c, 0xff5d005c, 0x845d00ec, 0x005e2205, 0x220b825e, 0x825f005f, 0x00602205,
	0x26058260, 0xff620061, 0x846200eb, 0x00632205, 0x220b8263, 0x82640064, 0x00652205, 0x28058265, 0xff670066, 0x006700ea, 0x20058268, 0x22058468,
	0x82690069, 0x006a220b, 0x2805826a, 0xff6b006b, 0x006c00e9, 0x2005826d, 0x2205846d, 0x826e006e, 0x006f220b, 0x2805826f, 0xff700070, 0x007100e8,
	0x20058272, 0x22058472, 0x82730073, 0x0074220b, 0x28058274, 0xff750075, 0x007600e7, 0x22058276, 0x82780077, 0x84782005, 0x00792205, 0x280b8279,
	0xff7a007a, 0x007b00e6, 0x2205827b, 0x827d007c, 0x847d2005, 0x007e2205, 0x280b827e, 0xff7f007f, 0x008000e5, 0x22058280, 0x82820081, 0x00822205,
	0x20058283, 0x28058483, 0xff840084, 0x008500e4, 0x22058285, 0x82860086, 0x00872205, 0x20058288, 0x28058488, 0xff890089, 0x008a00e3, 0x2205828a,
	0x828b008b, 0x008c2205, 0x2205828d, 0x828e008d, 0x828e2005, 0x00e22a05, 0xff8f008f, 0x009000e2, 0x22058290, 0x82910091, 0x00922205, 0x20058293,
	0x2a058293, 0x009400e1, 0x00e1ff94, 0x82950095, 0x00962205, 0x22058296, 0x82980097, 0x00982605, 0x00e0ff99, 0x22058499, 0x829b009a, 0x849b200b,
	0x009c2205, 0x260b829c, 0xff9e009d, 0x849e00df, 0x009f2205, 0x200b82a0, 0x220584a0, 0x82a100a1, 0x00a2280b, 0x00deffa3, 0x82a400a3, 0x84a42005,
	0x00a52205, 0x200b82a6, 0x280584a6, 0xffa700a7, 0x00a800dd, 0x200582a9, 0x220584a9, 0x82ab00aa, 0x84ab200b, 0x00ac2805, 0x00dcffac, 0x82ae00ad,
	0x00ae2205, 0x220582af, 0x82b000af, 0x84b02005, 0x00b12805, 0x00dbffb1, 0x82b200b2, 0x00b32205, 0x220582b4, 0x82b500b4, 0x00b52205, 0x200582b6,
	0x2a0582b6, 0x00b700da, 0x00daffb7, 0x82b900b8, 0x00b92205, 0x220582ba, 0x82bb00ba, 0x82bb2005, 0x00d92a05, 0xffbc00bc, 0x00bd00d9, 0x220582bd,
	0x82bf00be, 0x00bf2205, 0x260582c0, 0xffc100c0, 0x84c100d8, 0x00c22205, 0x220b82c2, 0x82c400c3, 0x00c42205, 0x200582c5, 0x2a0582c5, 0x00c600d7,
	0x00d7ffc6, 0x82c700c7, 0x00c82205, 0x220582c8, 0x82ca00c9, 0x00ca2805, 0x00d6ffcb, 0x82cc00cb, 0x84cc2005, 0x00cd2205, 0x220b82cd, 0x82cf00ce,
	0x00cf2605, 0x00d5ffd0, 0x220584d0, 0x82d100d1, 0x00d2220b, 0x220582d2, 0x82d300d3, 0x00d42305, 0x0382ffd5, 0xd6220584, 0x0b82d700, 0x0584d720,
	0xd800d822, 0xd9280b82, 0xd3ffda00, 0xdb00da00, 0xdb220582, 0x0582dc00, 0x0584dc20, 0xdd00dd22, 0xde280b82, 0xd2ffde00, 0xe000df00, 0xe0200582,
	0xe1220584, 0x0b82e200, 0x0584e220, 0xe300e328, 0xe400d1ff, 0x0582e500, 0xe600e522, 0xe6220582, 0x0582e700, 0x0584e720, 0xe800e828, 0xe900d0ff,
	0x0582e900, 0xeb00ea22, 0xeb200582, 0xec220584, 0x0b82ec00, 0xed00ed28, 0xee00cfff, 0x0582ee00, 0xf000ef22, 0xf0220582, 0x0582f100, 0xf200f122,
	0xf2200582, 0xce2a0582, 0xf300f300, 0xf400ceff, 0x0582f400, 0xf600f522, 0xf6220582, 0x0582f700, 0x0582f720, 0xf800cd2a, 0xcdfff800, 0xf900f900,
	0xfa220582, 0x0582fb00, 0xfc00fb28, 0xfc00ccff, 0x0582fd00, 0xfe00fd22, 0xfe200582, 0xff220584, 0x0b82ff00, 0x1f00003a, 0xbc030000, 0x00090e09,
	0x05050303, 0x070b0707, 0x07040403, 0x03050307, 0x07200582, 0x11830086, 0x0a06072a, 0x08080708, 0x08080607, 0x06292782, 0x07090809, 0x07070709,
	0x22078208, 0x82040707, 0x85062021, 0x06032700, 0x06030306, 0x0d830903, 0x04060428, 0x06070606, 0x01820506, 0x3f822982, 0x85080921, 0x20058425,
	0x89008203, 0x0507290e, 0x05060707, 0x09090607, 0x07253b82, 0x0709090a, 0x203a8207, 0x23048206, 0x07050507, 0x05201382, 0x06218d84, 0x21498206,
	0x7d820a09, 0x02040423, 0x231d8302, 0x04040603, 0x03231582, 0x820e0402, 0x82072061, 0x0505212d, 0x08244482, 0x06030808, 0x03220089, 0x19820607,
	0x82060821, 0x20538206, 0x23228405, 0x05060806, 0x0682d082, 0x0820b482, 0x03820682, 0x06201f83, 0x0621c082, 0x240c8204, 0x07060906, 0x84018204,
	0x250f8305, 0x05070507, 0xd2850906, 0xd8820920, 0x20820b20, 0x0b050325, 0x82030503, 0x84418502, 0x844b8560, 0x82052005, 0x82038519, 0x03062136,
	0x57845585, 0x32855582, 0x52820820, 0x1a830720, 0x0621f582, 0x20da8204, 0x21fc8207, 0xab820206, 0x092dc782, 0x06060602, 0x06090808, 0x03090809,
	0x275d8208, 0x07050807, 0x07080908, 0x06250282, 0x09070707, 0x20c38209, 0x22b28205, 0x82050506, 0x202c82c6, 0x25078206, 0x09050605, 0x0c820307,
	0x82070721, 0x05072563, 0x0a0a0505, 0x07222c82, 0x41830708, 0x50820920, 0x45833982, 0x22821082, 0x08214582, 0x20558209, 0x25318207, 0x07060604,
	0x00820605, 0x03820720, 0x4c820620, 0x0521ac82, 0x821d8209, 0x241e8586, 0x09030303, 0x22688409, 0x820b0905, 0x225d8276, 0x82000505, 0x20578200,
	0x20068206, 0x8a1b8300, 0x8fe58703, 0x41072007, 0x0588058d, 0x05030529, 0x05050703, 0x82070904, 0x82052075, 0x8305201d, 0x82038207, 0x22928390,
	0x82050407, 0x07092855, 0x0608090b, 0x82050906, 0x83758421, 0x8b034071, 0x95060921, 0x87fe8d01, 0x000623fc, 0x2b410a07, 0x21cf8205, 0x16820606,
	0x03030429, 0x00000608, 0x8209090b, 0x4206200c, 0x07200630, 0x06312782, 0x0404080a, 0x06020202, 0x03020504, 0x08020607, 0x33f68207, 0x000a0f0a,
	0x05040404, 0x070b0708, 0x07050503, 0x04050408, 0x20052a43, 0x28008307, 0x08080505, 0x070a0608, 0x22058207, 0x82080806, 0x09062220, 0x20018207,
	0x82118208, 0x07072231, 0x82218205, 0x05072c76, 0x07040707, 0x07030307, 0x82070b03, 0x06042200, 0x207d8204, 0x21998207, 0x2b830605, 0x09070622,
	0x51840682, 0x03200483, 0x5f840082, 0x05200485, 0x2c05bb43, 0x060a0a0a, 0x090a0806, 0x0808080a, 0x823e8206, 0x275d8231, 0x0406070a, 0x08070808,
	0x10824c82, 0x0a0b0926, 0x05050a07, 0x2282e382, 0x0506042a, 0x07060605, 0x0f050304, 0x06202e82, 0xbb430d82, 0x05062117, 0x07205184, 0x0520c283,
	0x08206783, 0x0624b182, 0x05080508, 0xd9425d82, 0x21208405, 0x01820306, 0x82070521, 0x07092500, 0x04080408, 0x04225682, 0x7d830407, 0x09226084,
	0x37820709, 0x82090521, 0x090c296a, 0x06040706, 0x0406030b, 0x0720eb83, 0x89424a83, 0x852c8305, 0x0abb4303, 0x06070723, 0x83558503, 0x82072057,
	0x2222853a, 0x850b0708, 0x0a0a261a, 0x0b050709, 0x82018307, 0x0706222a, 0x22a48207, 0x8206020a, 0x090726dd, 0x09090906, 0x203d8203, 0x22658206,
	0x82090707, 0x054b4102, 0x05090922, 0x1a838e83, 0x03200882, 0x06205582, 0x2f821084, 0x09211383, 0x06bb4306, 0x820b0b21, 0x8302822f, 0x0dbb4320,
	0x4d820920, 0x09281d82, 0x070a0807, 0x05060707, 0x05207782, 0x04826884, 0x05050723, 0x256b8206, 0x070a0906, 0x4a820608, 0x05070728, 0x03030606,
	0x14830903, 0x0a212b82, 0x4321820c, 0x072309bb, 0x82000708, 0x0ebb4300, 0x9105df41, 0x0eba4305, 0x03050724, 0x65820305, 0x080a0522, 0x8205b442,
	0x8222858c, 0x2017827b, 0x247b8306, 0x070a0707, 0x2420830c, 0x0806050a, 0x95bb4307, 0x94090721, 0x09134201, 0x83074a42, 0x000723e6, 0x1a410b07,
	0x08052105, 0x062e0783, 0x04030407, 0x00000708, 0x080a0a0c, 0x69430806, 0x32228305, 0x0b060800, 0x03040409, 0x05060303, 0x08030305, 0x82090206,
	0x0b003125, 0x04000b11, 0x09050404, 0x03080c07, 0x09070505, 0x2e0fbb43, 0x06090909, 0x0908080a, 0x09060709, 0x82050508, 0x82082051, 0x8208209f,
	0x0b082183, 0x05230482, 0x85090505, 0x04072577, 0x04030707, 0x2106bb43, 0x0d820605, 0x06211882, 0x82528207, 0x0807213d, 0x2007bb43, 0x12bb4306,
	0x03821383, 0x0b0b0b26, 0x0b090707, 0x6d820182, 0x32840720, 0x09060626, 0x0406070b, 0x3f830f82, 0x49820920, 0x070b0c23, 0x82c0830b, 0x23718212,
	0x07070505, 0x0521f182, 0x0f774711, 0x46092e42, 0xa58505f0, 0x09090725, 0x83060606, 0x07092167, 0x0621ca83, 0x20768209, 0x823b8304, 0x24c684d3,
	0x06030603, 0x21108505, 0x01820508, 0x64820620, 0x08242084, 0x06060806, 0x2e05b742, 0x07070905, 0x070a0d06, 0x0c060408, 0x82040704, 0x07082202,
	0x434a8409, 0x0922079e, 0x01820807, 0x8208bb43, 0x82072040, 0x83128286, 0x43558566, 0x4c8208bb, 0x07080327, 0x07090b0b, 0x82fa8305, 0x03072407,
	0x82080707, 0x020b21a4, 0xf2824f82, 0x090a0626, 0x08080309, 0x3a823182, 0x82090821, 0x8208206c, 0x08072718, 0x07050909, 0x2d830607, 0x08820720,
	0xbf840320, 0x10820720, 0x0320e582, 0x6b820c82, 0x08090628, 0x0d050505, 0x3d82090c, 0x06200282, 0x07206782, 0x43820782, 0x45820920, 0x07840720,
	0x090c0b26, 0x0b09070a, 0x05245283, 0x06090708, 0x24083941, 0x09070506, 0x25118207, 0x0709080a, 0x16820a07, 0xc4820520, 0x0a040323, 0x2268840b,
	0x470d0b05, 0x0622059d, 0x00820006, 0x06822983, 0xa6430020, 0x0db4420e, 0x268e0d89, 0x2405bb43, 0x0b050607, 0x84238509, 0x417c82df, 0x0d820589,
	0x07060527, 0x080b0808, 0x2420830d, 0x0907060b, 0x83758408, 0x8b034071, 0x2015b943, 0x85c88609, 0x890820da, 0x070022fb, 0x0698410c, 0x07830920,
	0x2208bb43, 0x830b0b0d, 0x080a2549, 0x0709080a, 0x00330a82, 0x0a0c0708, 0x03030505, 0x06050703, 0x07080303, 0x82070a02, 0x120c34f6, 0x0404000c,
	0x080a0605, 0x0503090d, 0x04090805, 0x83050405, 0x24038548, 0x09090505, 0x25618309, 0x07080909, 0x20820909, 0x090a0722, 0x0d825383, 0x430d0821,
	0x0a2105bb, 0x2a008208, 0x04080806, 0x04030808, 0x820b0307, 0x0508260d, 0x07080507, 0x29a5820b, 0x0a080508, 0x08090808, 0x9e840a09, 0x06080823,
	0x82008208, 0x82032085, 0x4b028706, 0x07290555, 0x080c0c0c, 0x0a0c0908, 0x05f74a0c, 0xe7826782, 0x080b0a24, 0x0a820507, 0x0a283f83, 0x0d0a0808,
	0x060c080d, 0x092ec082, 0x0407070a, 0x08050508, 0x03040808, 0x4a841206, 0x00820520, 0x0a0a0a23, 0x05ea4209, 0x08221284, 0xeb820708, 0x07434283,
	0x820a2005, 0x20678306, 0x23988209, 0x09060907, 0x7682b785, 0x9f840920, 0x07030725, 0x82060704, 0x0a0822ae, 0x24218208, 0x07070805, 0x207e8205,
	0x201c8208, 0x828c8507, 0x830720c0, 0x0a0e260d, 0x07040907, 0x06bb430d, 0x4a850820, 0x00820820, 0x03853c83, 0x210cbb43, 0x55850307, 0x07205784,
	0x11835385, 0x830b0d21, 0x0c0827c7, 0x05080a0b, 0x01830b0d, 0xb1820720, 0x82090821, 0x030c21a4, 0x0a244f84, 0x0b090b06, 0x08210a84, 0x22ee8209,
	0x8208090a, 0x248c8202, 0x050a0b08, 0x208e8207, 0x820b8203, 0x82e684c6, 0x08062307, 0x2e840b07, 0x82080b21, 0x050826a2, 0x0d0d0505, 0x22e0820a,
	0x82080808, 0x070d22b8, 0x21758209, 0x4282090a, 0x08070929, 0x0909080b, 0x82090e0d, 0x830c2006, 0x0806231e, 0x03820b08, 0x82070721, 0x0808250c,
	0x0b070706, 0x0b223182, 0x2983080c, 0x06271382, 0x03030708, 0x820b0b04, 0x0708246f, 0x420e0c06, 0x00200785, 0x0a240082, 0x00080908, 0x08200082,
	0x052500b5, 0x09030503, 0x22548207, 0x4407080a, 0x0721089b, 0x827e8209, 0x82072003, 0x83062053, 0x090c2904, 0x080a0c0e, 0x07060c07, 0x6c820582,
	0x21900240, 0x0195080a, 0x83091342, 0x07bc4309, 0x08000824, 0x0084090e, 0x7c420620, 0x05072905, 0x08090403, 0x0c0e0000, 0x0924e682, 0x0b080b07,
	0x0d344f82, 0x0900080b, 0x050b0d08, 0x03030305, 0x03060508, 0x02080903, 0x00261382, 0x0d140d00, 0x00820500, 0x0d080a2c, 0x06060309, 0x07050909,
	0x7f410605, 0x22118309, 0x820d0709, 0x825d8271, 0x0806241c, 0x83090b07, 0x8209209f, 0x820d2000, 0x06062303, 0x2e860b06, 0xbb430520, 0x2044820c,
	0x056f440b, 0x42090b21, 0x5589052e, 0xbb430820, 0x0d082814, 0x08080d0d, 0x830a0c09, 0x2b2c8257, 0x08090b09, 0x0b0b0707, 0x09050708, 0x092bc682,
	0x090b0808, 0x0d0e0a09, 0x83060d08, 0x080b25c0, 0x06080509, 0x08266682, 0x14060305, 0x1f820809, 0x2216bb43, 0x4d090709, 0x5d8205e2, 0x07070b23,
	0x22678307, 0x82050809, 0x82348316, 0x84068208, 0x0808213f, 0x820fbb43, 0x09062223, 0x841c8306, 0x0b0a2144, 0x08212282, 0x2a058307, 0x0a080b0f,
	0x040e0705, 0x87050508, 0x41e08541, 0xbb4309a7, 0x04062207, 0x43758208, 0x55840abb, 0x0d207486, 0x0427e582, 0x0b0c0809, 0x4306080a, 0x092205bb,
	0xa8820308, 0x0d20a482, 0x08200782, 0x0623f282, 0x840c0a0b, 0x8209203d, 0x820920f1, 0x820a202f, 0x09092863, 0x050b0b09, 0x84070809, 0x0806212d,
	0x08200683, 0x02830d82, 0x260abb43, 0x06050509, 0x820b0d0f, 0x82092046, 0x080a221d, 0x2309820d, 0x090b0a08, 0x07834285, 0x0a0e0d26, 0x0d09080c,
	0xb341bc83, 0x82098205, 0x2105822b, 0xbb430807, 0x430f820a, 0x0c2005bb, 0x07232a84, 0x430f0d06, 0x09200ebb, 0x4212bb43, 0x0d890db4, 0x250fe143,
	0x03050305, 0x5482080a, 0xe1440a20, 0x09092205, 0x061f4108, 0x0a080a22, 0x07209a84, 0x0d21b882, 0x22ca820a, 0x820d0809, 0x07092198, 0x03406d83,
	0x15b9438f, 0xca850a20, 0x00880920, 0x08240f85, 0x0f080008, 0x07211385, 0x2c07830a, 0x03060907, 0x00080905, 0x0d0e0f00, 0x3bf6820b, 0x090b090b,
	0x0b0d080a, 0x080a0009, 0x06060b0e, 0x08030303, 0x03030706, 0x0c02080a, 0x00352582, 0x000e150e, 0x06060505, 0x0a0f090b, 0x09060604, 0x0507050b,
	0x20648806, 0x2e188209, 0x0e080b0b, 0x0b0a0a0a, 0x0a0b0809, 0x820a0605, 0x820b2005, 0x090a2403, 0x820f0a0a, 0x82062004, 0x09092e21, 0x09070908,
	0x09090508, 0x03080503, 0x2c3d830d, 0x09060806, 0x08090b08, 0x09060908, 0x243d820b, 0x0a0b0a09, 0x20008408, 0x82058307, 0x89032085, 0x08092164,
	0x03820b82, 0x0e0e0e26, 0x0e0b0909, 0x0b230182, 0x8309090b, 0x24408232, 0x08090d0b, 0x210f8206, 0x1b820a0b, 0x0f278682, 0x060e090e, 0x82040406,
	0x05092196, 0x09289f82, 0x04050909, 0x090a1506, 0x05201f82, 0x0b210082, 0x8a6f830b, 0x8208205d, 0x820a20eb, 0x82092042, 0x8209204c, 0x08082135,
	0x0b296783, 0x080a0509, 0x070a070a, 0x82088409, 0x820b20ab, 0x08082686, 0x08040803, 0x234c8306, 0x060a090b, 0xc0830182, 0x2d820f84, 0x82080821,
	0x2ee98287, 0x09090b07, 0x080c1008, 0x0f08050a, 0x82050805, 0x204a8602, 0x4a428308, 0x428305f8, 0x8208bb43, 0x8559826a, 0x82578455, 0x830d8355,
	0x0b0f2d03, 0x0a040809, 0x0b0d0e08, 0x0b0f0609, 0x0f820183, 0x0a090922, 0x0e20a482, 0x0a29c583, 0x0c070c0b, 0x0a030c0b, 0x2a2d820a, 0x0a0a050a,
	0x0b090a0b, 0x8209080a, 0x0b0b2322, 0x8e820905, 0x0b820320, 0x09090629, 0x09080803, 0x82090708, 0x20a68210, 0x82138203, 0x0a082788, 0x0605050a,
	0x33840f10, 0xa5820a20, 0x090f0924, 0x43830b0b, 0x0a234282, 0x820b0909, 0x0e0d274d, 0x0a0a0d0b, 0x3d840a0e, 0x820b0821, 0x09082141, 0x09201a82,
	0x082f4c82, 0x080a090b, 0x0b090c0b, 0x080c0808, 0x82070908, 0x050324c4, 0x84090d0d, 0x100e2169, 0x2205e143, 0x82000808, 0x820b2000, 0x2106824b,
	0x008d0900, 0x821ccc42, 0x07cd4371, 0x05030529, 0x08080b03, 0x830b0e07, 0x090b2131, 0xc2460082, 0x847b8205, 0x0806220d, 0x27a48309, 0x0a0c0e10,
	0x08070e09, 0x6d832682, 0x218f0340, 0x0195090b, 0x0a090a25, 0x870a0b09, 0x08c24401, 0x10090023, 0x2100840a, 0x06830b07, 0x0609082b, 0x090b0503,
	0x0f110000, 0x2647830e, 0x0a0c0a0c, 0x820f090b, 0x2e058211, 0x0406060c, 0x06090404, 0x0b040407, 0x820d0209, 0x0f003525, 0x05000f17, 0x0c070605,
	0x040b100a, 0x0c0a0707, 0x07050705, 0x04844f84, 0x0c07072e, 0x0f080c0c, 0x0b0b0a0a, 0x0b0c0909, 0x08261a82, 0x090c0b0d, 0x8b830a0c, 0x92820f20,
	0x21820720, 0x8e820c82, 0x09050937, 0x09050309, 0x0a090f03, 0x08060909, 0x0d090906, 0x0a090909, 0x82808207, 0x0c0b2281, 0x05d5410b, 0x06830820,
	0x00820320, 0x60840920, 0x0a230d83, 0x820a0a08, 0x0f092703, 0x0a0a0f0f, 0x01820f0c, 0x820c0c21, 0x2832825a, 0x0c08080a, 0x06080a0e, 0x20c6820c,
	0x821b820b, 0x0f102402, 0x82070f0a, 0x0c0c27c0, 0x0a050909, 0x62820707, 0x07040523, 0x08bb4317, 0x0b23af82, 0x89030b0b, 0x030821c2, 0x07205b83,
	0xcc827e85, 0x83080821, 0x820c2067, 0x0b08213c, 0x09220182, 0x5941050a, 0x82092006, 0x03082500, 0x07080408, 0x43053841, 0x0f8309bb, 0x0c226084,
	0x4c82090d, 0x0a0b072e, 0x0d110809, 0x08050b08, 0x05090510, 0x0a210282, 0x844a8409, 0x090c21e1, 0x0b230183, 0x43090b09, 0x072607bb, 0x09090a05,
	0x55850308, 0x440a0c21, 0xe4410511, 0x0f082306, 0x8a82090d, 0x0e0f0927, 0x0f070a0c, 0x2501830d, 0x0a040909, 0xa4820b0a, 0xc5840f20, 0x070d0b25,
	0x820d0b0d, 0x090b2a0a, 0x0a050b0a, 0x0a0b0d0a, 0x2a0a820c, 0x0d0a0909, 0x0909050c, 0x82030908, 0x09072176, 0x09260684, 0x080a0a08, 0x2e820909,
	0x090a0923, 0x2c88820d, 0x05050a0b, 0x0c111107, 0x0a0b0a0a, 0x29a5820a, 0x0b090f09, 0x0d0b0a0b, 0xd3840c0b, 0x0b0a0d2b, 0x0c100f0b, 0x100b0a0e,
	0x2145850a, 0x0782080d, 0x0a243c82, 0x07080909, 0x46824282, 0x0c0a0e25, 0x820d0809, 0x05bb4316, 0x840e0e21, 0x0f0722e6, 0x0bbb4312, 0x0c0a0c24,
	0x0082000a, 0x028c6582, 0xa7444a84, 0x43078907, 0x092b0de1, 0x05030509, 0x09090b03, 0x410c0f07, 0x8485058c, 0x37052341, 0x0a0a090c, 0x0a08070a,
	0x0b0f0a0a, 0x0a0d0f12, 0x09080f09, 0x00080a0c, 0x21920040, 0x01950a0c, 0x8507fa41, 0x23fc881d, 0x0b110a00, 0x08210084, 0x0cbb430c, 0x0f101222,
	0x09262982, 0x0a0d0a0d, 0xf182090c, 0x0a0c0033, 0x07070d10, 0x0a040404, 0x04040807, 0x0e030a0b, 0x33fd820a, 0x00101810, 0x07060606, 0x0c110a0d,
	0x0a070704, 0x0607060d, 0x240cbb43, 0x090d0d0d, 0x2a608210, 0x0c090a0c, 0x0b07070c, 0x820c0d09, 0x0a0b2453, 0x830b0c0a, 0x07072178, 0x0a2e3a82,
	0x0a080a0a, 0x0a0a060a, 0x05090605, 0x00820a0f, 0x07090623, 0x07bb430a, 0x3d820d20, 0x0d0c0a22, 0x28849e84, 0x05222782, 0xe2410505, 0x4609200a,
	0x10260554, 0x0a0a1010, 0x0182100d, 0x820d0d21, 0x0d0c2a11, 0x09090a0b, 0x090a0f0d, 0x830f8206, 0x2449823f, 0x0a10110d, 0x82c68310, 0x060b2296,
	0x28b1820a, 0x04060a0a, 0x0a0b1807, 0x050a590b, 0x0c22af82, 0x5d8a0c0c, 0x0a03092a, 0x07090b09, 0x090b0a0c, 0x0d235d82, 0x83090909, 0x0a0c2167,
	0x0b23a082, 0x82080b08, 0x213b833e, 0x9f840a0c, 0x82050921, 0x252b8201, 0x0a0d0a0c, 0x6082060b, 0x27820920, 0x0b200f84, 0x09204482, 0x0a208782,
	0x0d321182, 0x13090a0a, 0x060c0b0e, 0x0a051109, 0x060a0606, 0x4a850a0b, 0x00820a20, 0x2109bd41, 0x01860507, 0x090b0625, 0x83050909, 0x840d2018,
	0x87438357, 0x0d112d26, 0x0b05090b, 0x0d0f100a, 0x0d11070a, 0x0b250183, 0x0a0a0409, 0x21a4820b, 0x4e820310, 0x0e0c0b29, 0x0e0c0e09, 0x820b0b05,
	0x070c2464, 0x820d0b0b, 0x20cc829b, 0x2209820a, 0x820b070d, 0x0a05364a, 0x0a07090a, 0x0909050a, 0x0a08090a, 0x090a080a, 0x0a050d0d, 0x2969820a,
	0x0a0b090d, 0x12070707, 0x3d820d12, 0x09290282, 0x0a110a0c, 0x0c0b0c0c, 0x2001820d, 0x06c3430a, 0x0d100f27, 0x110b0b0e, 0x05c4410b, 0x0a090d22,
	0x0b205282, 0x54820c82, 0x0d830920, 0x0a0e0d26, 0x0d09090c, 0x08281182, 0x05050909, 0x0a0f0f06, 0x10216984, 0x82078213, 0x090922d7, 0x23008200,
	0x0b0d0a0d, 0x00200682, 0x820cb843, 0x086c46c6, 0x83097646, 0x25268e09, 0x0705070a, 0xbe820c05, 0x420d1021, 0x0b2305e6, 0x82090a09, 0x823d8209,
	0x820a20ed, 0x09072100, 0x1022f082, 0x2082130c, 0x08100a22, 0x75846c82, 0x03407183, 0x0a0d218b, 0x0c210195, 0x21c6820a, 0x01860d0b, 0x82059244,
	0x0a0022e2, 0x05984112, 0x820c0821, 0x090a2c07, 0x0605070a, 0x00000a0c, 0x83101113, 0x0b0e2d47, 0x0a0d0b0e, 0x000b0d11, 0x0e110a0c, 0x2606bb43,
	0x0c040409, 0x820f030a, 0x11003525, 0x0600111a, 0x0e080706, 0x050c120b, 0x0e0b0808, 0x08060806, 0x35088067, 0x0e08080b, 0x11090e0e, 0x0d0c0c0c,
	0x0d0d0a0b, 0x090c0808, 0x57820d0e, 0x8d820c20, 0x82110c21, 0x82082004, 0x0b0b2221, 0x288e820a, 0x0b0b060a, 0x050a0605, 0x2a0d8211, 0x0709070b,
	0x0a0e0a0b, 0x820b090a, 0x213d8252, 0xbb430d0b, 0x0a092107, 0x05200082, 0x0b200082, 0x0a210782, 0x226a840a, 0x820b0b09, 0x110b2940, 0x0b0b1111,
	0x110d110e, 0x11827382, 0x0c0e0c2d, 0x0e09090b, 0x07090a10, 0x820b0e0e, 0x2c03820c, 0x11120d0c, 0x0808110b, 0x0e0e0505, 0x8271820a, 0x0b0b27b1,
	0x1a080506, 0xfe820b0c, 0x08208c82, 0x8906bb43, 0x050a27c2, 0x090c090c, 0x6e830d08, 0x0e0e0b25, 0x83090909, 0x0b0d2167, 0x1883ca82, 0x59413e82,
	0x0b0a2407, 0x8205090a, 0x0d082201, 0x2201820b, 0x82070c0a, 0x05bb4301, 0x2b835c82, 0x0e0d0a26, 0x0b080a0b, 0x0b2b1f82, 0x0a0f1409, 0x1209060c,
	0x82060a06, 0x82418202, 0x059e4263, 0x40833c84, 0x05080b22, 0x06220186, 0x59820a0c, 0x0a211884, 0x8257830d, 0x83b08355, 0x0e112203, 0x27a1820a,
	0x0d10110a, 0x0e11080a, 0x0f820183, 0x0c0b0b22, 0x1121a482, 0x29c58204, 0x090f0d0c, 0x05100d0f, 0x2d820c0c, 0x0c080d24, 0x47820e0c, 0x0b0a0d2e,
	0x0f0c0a0a, 0x0b0a080e, 0x0b050b08, 0x0b229483, 0x14820a05, 0x0b0a092d, 0x0e0a0b09, 0x0a0b050e, 0x820b0e0b, 0x080c296b, 0x13130808, 0x0d0a0c0e,
	0x0a2b4082, 0x0a110b0d, 0x0d0c0d0d, 0x820d0d0e, 0x0a0a311b, 0x0c0d0c0e, 0x100d1212, 0x0c120c0c, 0x080a0a0a, 0x08213a82, 0x203a820b, 0x2203820c,
	0x8308090b, 0x0f0a28ac, 0x0a0e0b0f, 0x820a0e09, 0x0909266a, 0x10060505, 0x827b8210, 0x14112371, 0x0085090b, 0x410bbb43, 0x09840977, 0x20158646,
	0x10d1430c, 0x08050824, 0x80820d05, 0xa9821120, 0xa6820c20, 0x82080445, 0x29ec82c3, 0x09080b0b, 0x110c0c0b, 0x2083140d, 0x82091121, 0xadbb43b8,
	0x430c0b21, 0x0d2108b9, 0x83dc830b, 0x000b2403, 0x840c130b, 0x0d092100, 0x092c0683, 0x0605070a, 0x00000b0d, 0x0e111214, 0x0f25f882, 0x0d0c0f0c,
	0x32f1820b, 0x120b0d00, 0x0508080f, 0x080b0505, 0x0d050509, 0x8210030b, 0x12003425, 0x0600121b, 0x0f080706, 0x050d130b, 0x0f0b0808, 0x43070807,
	0x0f310cbb, 0x120a0f0f, 0x0e0d0c0c, 0x0e0e0a0b, 0x0a0c0808, 0x2b0a820f, 0x0b0c0d0e, 0x0c120c0d, 0x08080c0b, 0x7a433a82, 0x0b062705, 0x0b06050b,
	0x0d821205, 0x07276282, 0x0b0f0b0b, 0x820b090b, 0x223d8252, 0x450e0d0b, 0x1e8307fb, 0x05208582, 0x200ae541, 0x820b820a, 0x12122103, 0x0f233b82,
	0x82120e12, 0x21ec8373, 0xe6820d0f, 0x0b110f28, 0x0f0f070a, 0xde820f0b, 0x0c0c0f27, 0x0b12130e, 0x82c68312, 0x070b2212, 0x25b1820b, 0x05070b0b,
	0xbb431b08, 0x0e0e2508, 0x0d0d0d0e, 0xbb435d8a, 0x840e2006, 0x0f0f246f, 0x830a0a0a, 0x0b0e2567, 0x0d090c08, 0x3e820182, 0x0e213b83, 0x2120840c,
	0x0182050a, 0x0b0d0829, 0x0b0e0b0d, 0x820d080d, 0x20648223, 0x250f8307, 0x090c090c, 0x24820e0a, 0x090b0922, 0x0a2a0582, 0x0d0b1015, 0x06130a07,
	0x0282060b, 0x850b0c21, 0x2163834a, 0x01870b0e, 0x230abb43, 0x050a0b0b, 0x0e205585, 0x0c225782, 0x53840b09, 0x12281183, 0x050b0b0f, 0x11120b0c,
	0x12219182, 0x8201830f, 0x0b0b220f, 0x21a4820d, 0x4f820412, 0x100e0c33, 0x100e100a, 0x0d0c0c05, 0x080e0c0b, 0x0d0f0c0c, 0x2b86820c, 0x0c0b0b0c,
	0x0b080e10, 0x050b090b, 0x08822582, 0x0920f284, 0x0b221083, 0x0c830f0f, 0x0e0b0f3c, 0x080c0d0a, 0x14140808, 0x0e0b0c0f, 0x0a0c0c0c, 0x0b120b0d,
	0x0d0c0e0e, 0x42820e0f, 0x820b0d21, 0x0d0e2814, 0x110e1313, 0x82130d0c, 0x820b200d, 0x090e2245, 0x835a820c, 0x0a0b330c, 0x0b0f0b09, 0x10100b0c,
	0x0a0a0e0c, 0x0b0b0b0f, 0xbb430a08, 0x230b8206, 0x1512080a, 0x20078442, 0x82008200, 0x820b20d6, 0x43002006, 0x40820fbb, 0x8b07a544, 0x26268e07,
	0x0805080b, 0x820b0e05, 0x830e2054, 0x840e2025, 0x05ee421e, 0x840b0e21, 0x0a082c0d, 0x120d0d0b, 0x0f12150d, 0x82120b0c, 0x0a0c2198, 0x03406d83,
	0x09fb418f, 0xcf45098d, 0x88098309, 0x0b0023fc, 0x00840d14, 0x0c0e093b, 0x090c0d0c, 0x0705070b, 0x00000c0e, 0x0f121315, 0x100b0e0b, 0x0e0c100c,
	0x24f1820b, 0x130c0e00, 0x06bb4310, 0x05050a27, 0x11030b0e, 0x35fa820b, 0x00131d13, 0x09070707, 0x0e140c10, 0x0c090905, 0x07090710, 0x00880c09,
	0x2005604a, 0x37608213, 0x0f0b0c0f, 0x0d09080e, 0x0f0e100b, 0x0d0d0f0b, 0x130d0e0c, 0x090d0c0d, 0x0c2e2182, 0x0a0c0b0c, 0x0c070b0c, 0x0b07060c,
	0x3c831206, 0x070a0829, 0x0b100b0c, 0x820c0a0b, 0x830d2052, 0x0e0f212d, 0x0a20b285, 0x06200683, 0x63880082, 0x3c820c20, 0x132b0384, 0x0c0c1313,
	0x130f1310, 0x82101010, 0x100e2b1d, 0x0a0a0c0d, 0x0a0c1210, 0xc6821007, 0x1b820e20, 0x0f0d0d30, 0x130c1314, 0x05050909, 0x0c0b1010, 0xb1820c07,
	0x070c0c26, 0x0d1d0905, 0x0c21fb82, 0x26008208, 0x0e0f0f0f, 0x89060e0e, 0x060b2a5d, 0x0a0d0a0d, 0x0c0c0f09, 0x2341820b, 0x0a0a0a10, 0x0f226783,
	0x1683080c, 0x820a0d21, 0x0b0d263e, 0x0c0f0b0d, 0x221f820f, 0x82060b0b, 0x0e092301, 0x0e820e0c, 0x82080d21, 0x820a2001, 0x83072064, 0x232d830f,
	0x0c100f0b, 0x0920ac82, 0x0a2d4b82, 0x0e0c1116, 0x06140b07, 0x0b07070b, 0x20418207, 0x204a820a, 0x2042830b, 0x203a820f, 0x2140820f, 0x3a650c0e,
	0x820d2009, 0x850620f4, 0x0c0f2155, 0x0d835585, 0x13220383, 0xa1820c10, 0x12130b27, 0x13090c0f, 0x25018310, 0x0c050b0c, 0xa4820e0c, 0x0c04132f,
	0x0e0d0c0c, 0x0e110a11, 0x0d0d0611, 0x230b820d, 0x100d0d08, 0x0e229b82, 0x19820d0b, 0x080f1123, 0x2d8e820c, 0x0b0c0c06, 0x060c0c09, 0x0b0c0b0b,
	0x10820c0a, 0x0f100b23, 0x82398206, 0x0d0b2b88, 0x0908080d, 0x0d101515, 0x40820e0c, 0x0c0e0b2b, 0x0e0e0c12, 0x0e100e0d, 0x2b42840f, 0x0e0e0d10,
	0x110f1414, 0x0d140d0d, 0x09233d82, 0x820f0b0c, 0x0c0b2241, 0x243e820d, 0x0b090a0c, 0x26678210, 0x0f0c1111, 0x82100a0b, 0x0a09255d, 0x0706060a,
	0x0b820f82, 0x13090b24, 0x40460c16, 0x82002006, 0x820f2000, 0x210682f1, 0x008d0c00, 0x890db442, 0x0fcf430d, 0x08060829, 0x0b0b0e06, 0x830f1209,
	0x0c0e2123, 0x0d221f83, 0x54820e0b, 0x0f0b0e23, 0x3000820c, 0x0d0c0b09, 0x160e120d, 0x0c0d1013, 0x100b0a13, 0x94bb430d, 0x9105fb41, 0x83c88405,
	0x880384cc, 0x0c0023fc, 0x00840d15, 0x0d0f0a22, 0x0a2b0082, 0x0706070c, 0x00000c0e, 0x83131417, 0x0d112543, 0x0c0f0d11, 0x0032f182, 0x11140c0f,
	0x05050808, 0x0a090c05, 0x0c0e0505, 0x25821203, 0x1e140035, 0x07070014, 0x0d100908, 0x09050f16, 0x07100d09, 0x84090709, 0x3d04844f, 0x10100909,
	0x0e140b10, 0x0d0f0e0e, 0x080f100c, 0x110b0e09, 0x100c100f, 0x0f0c0e0e, 0x9282140e, 0x21820920, 0x0c0d0d2e, 0x0c0c0a0c, 0x060d0c07, 0x13060c07,
	0x62820d82, 0x2f820820, 0x0b0c0c23, 0x2752820d, 0x0d0e0e0e, 0x0c0f100f, 0x0a200084, 0x06200583, 0x0d200082, 0x65840e84, 0x05820b20, 0x0c0d0b2b,
	0x0d141414, 0x1013100d, 0x82738214, 0x100f2f11, 0x0b0b0d0e, 0x0b0c1310, 0x0d101008, 0x1b820f10, 0x100e0e26, 0x140d1415, 0x8205bb43, 0x820d2071,
	0x0d0d2bb1, 0x1e090507, 0x0d0e0d0e, 0x0082080d, 0x0f233b82, 0x89060f0f, 0x060b27c2, 0x0b0e0a0e, 0x6e841009, 0x0b21cc82, 0x2267830b, 0x82080c10,
	0x0e0a2516, 0x070d0c0a, 0x0c27c682, 0x0d100d0f, 0x430c0d0c, 0x0f2105bb, 0x220e820d, 0x82090e0c, 0x0c0a2401, 0x83080c08, 0x0b0e220f, 0x828c820e,
	0x0d0a2245, 0x2d2a820a, 0x0c11170b, 0x160b070f, 0x07070c06, 0x4182070c, 0x0a0e0a22, 0x0d224083, 0x0184100c, 0xbb433283, 0x0c0e2109, 0x55855982,
	0x0e0c1023, 0x84758209, 0x20118353, 0x28528214, 0x130c0e06, 0x090c1013, 0x83fa8214, 0x0d05230f, 0xa4820e0d, 0x82041421, 0x0f0e31c5, 0x0f120b11,
	0x0e0e0612, 0x0f0e0d0e, 0x110e0e08, 0x0f209b82, 0x0c31aa82, 0x0810110e, 0x0d0a0c0c, 0x0c0c0d06, 0x060c0d09, 0x2314820c, 0x0a0d0c0a, 0x10338282,
	0x0d0c0d06, 0x0b100d10, 0x08080e0e, 0x10161609, 0x820f0c0e, 0x0f0b2640, 0x0f0c130d, 0x3152820f, 0x0c0f100f, 0x100c0c0e, 0x150e0f0e, 0x0e121015,
	0x0d82150e, 0x82090c21, 0x0d0a2111, 0x0e204e82, 0x0c243e82, 0x110c0a0b, 0x2206534b, 0x82110b0b, 0x0b09275d, 0x0706060a, 0x20821212, 0x090b0d25,
	0x450d1714, 0x0b21058d, 0x23008200, 0x0d0f0c11, 0x00210682, 0x42008d0d, 0x0d890db4, 0x89052a41, 0x06082805, 0x0c0f0608, 0x8213090b, 0x82ab82a9,
	0x820c2061, 0x0c0e279f, 0x0c0f0d0e, 0x53820c10, 0x0d0b092d, 0x0f130e0e, 0x0e111417, 0x820a140c, 0x837584b8, 0x8b034071, 0x8705fb41, 0x0c112105,
	0x84540187, 0x20058705, 0x2300870c, 0x0e170d00, 0x0a210084, 0x08068310, 0x080c0a2b, 0x0d0f0706, 0x15180000, 0x100d1014, 0x120e120c, 0x140c100e,
	0x0f000e10, 0x0912150d, 0x05050509, 0x050b090d, 0x040d0f05, 0x35258213, 0x15201500, 0x08070700, 0x170d110a, 0x0a0a060f, 0x0a08110d, 0x7f410a08,
	0x0a210809, 0x1111110a, 0x0e0e150b, 0x0c0d100f, 0x0a081010, 0x10120c0f, 0x0f110d11, 0x0e0f0d0e, 0x0e0d0e15, 0x8321820a, 0x0d0b2a2e, 0x0d0d070d,
	0x060c0706, 0x290e8314, 0x0d080b09, 0x0c0c110c, 0x52820d0b, 0x0f0e0e26, 0x0f11100d, 0x28825585, 0x06212782, 0x0a5d4306, 0x13830d20, 0x15280382,
	0x0d0d1515, 0x15111411, 0x2c827382, 0x32820f20, 0x110b0b27, 0x080b0d14, 0x33728411, 0x0e0e110e, 0x0d151611, 0x060a0a15, 0x0c111106, 0x0a0d080d,
	0x0823ab83, 0x43200a06, 0x3b8208bb, 0x2a0dbb43, 0x0b0e060c, 0x100a0b0e, 0x820c0d0d, 0x0b11235d, 0x67830b0b, 0x080d1025, 0x820f0b0e, 0x820d2001,
	0x0e0d2408, 0x820e100d, 0x23228220, 0x0c060c06, 0x10272b82, 0x0f0d110d, 0x4b090f09, 0xbb430539, 0x820c2007, 0x2eac8287, 0x0d0d110a, 0x0d12180b,
	0x170c080f, 0x82070d07, 0x0d0e2102, 0xb5824a85, 0x74740d20, 0x07bb4309, 0x0f070a26, 0x060c0c0c, 0xc7821883, 0x55835782, 0x2207c841, 0x820d1115,
	0x140d26a1, 0x0a0d1114, 0x84fa8215, 0x0d0d220f, 0x2fa4820f, 0x0d0d0415, 0x12100e0d, 0x1310130b, 0x0f0e0e06, 0x08270b82, 0x10120e0f, 0x8210110e,
	0x0e0d25b1, 0x0d081112, 0x06208e82, 0x0a28b682, 0x0c060d0d, 0x0b0c0d0c, 0xa6821083, 0xc1821382, 0x0c112b08, 0x08080e0f, 0x1117170a, 0x0e100d0f,
	0x100c0e0e, 0x100d140d, 0x120f0f10, 0x0d101110, 0x110d0d0f, 0x160f100e, 0x0e131016, 0x0d82160f, 0x820a0c21, 0x20418211, 0x821a830c, 0x0c0a3848,
	0x0d0e0c12, 0x110d1312, 0x0d120b0c, 0x0b0a0d0d, 0x0706060b, 0x830d1313, 0x150a2269, 0x0bbb4319, 0xf7821220, 0x8213bb43, 0x920e20a8, 0x0de14303,
	0x080d0d2e, 0x10060806, 0x140a0c0d, 0x0f0c0f11, 0x0d27a682, 0x0e0c0d0c, 0x820d0f0c, 0x82c782b7, 0x820a202d, 0x140f2994, 0x12151910, 0x0b150d0f,
	0xbb43b882, 0x056c5494, 0x12210587, 0x8501870d, 0x071942c8, 0x2308b244, 0x0f180d00, 0x0b310084, 0x0f0e0e10, 0x080d0b0e, 0x0d100806, 0x16190000,
	0x38438315, 0x0e120e12, 0x11150d11, 0x0e10000e, 0x09091216, 0x0d060606, 0x06060b0a, 0x06bb4310, 0x16211635, 0x09080800, 0x180e120a, 0x0a0a0610,
	0x0a08120e, 0x880e0a08, 0x0a0a2600, 0x0c121212, 0x2a608216, 0x110d0e11, 0x0f0a0a11, 0x8210130c, 0x0f0f2957, 0x160f100e, 0x0a0f0e0f, 0x0e2e2182,
	0x0b0e0d0e, 0x0e080d0e, 0x0d08060e, 0x0d821506, 0x0b090e24, 0xb9820e09, 0x0e0c0d22, 0x3d825282, 0x11100e23, 0x0ebb4310, 0x0f840e20, 0x0c2f6984,
	0x0c0e0e0e, 0x16160e0e, 0x120e0e15, 0x82161115, 0x0e0e2e73, 0x1012100e, 0x120c0c0e, 0x090c0d15, 0x20c68212, 0x321b8210, 0x18110f0f, 0x0a160e16,
	0x1206060a, 0x080e0d12, 0x820a0a0e, 0x06082428, 0x820f210a, 0x280d82fb, 0x11110a0a, 0x10101011, 0x28c18806, 0x0f060c0e, 0x0a0c0f0b, 0x05ee4211,
	0x0c0c122a, 0x1616160c, 0x0a0e110e, 0x27054d5d, 0x0f080e0e, 0x110d0f0d, 0x21821182, 0x0c060c29, 0x100a0c07, 0x430e100e, 0x0f2505bb, 0x0e090e0b,
	0x3c0f8309, 0x0c0f0c0f, 0x0e12110c, 0x0b0e0b0d, 0x0c0e0e11, 0x100e131a, 0x07180c08, 0x0d08080d, 0x23418208, 0x0e0b0f0b, 0x0e204082, 0x74524984,
	0x0a062106, 0x1f820185, 0x060c0d22, 0x57845585, 0x53850b20, 0x16201183, 0x07295282, 0x15150d0f, 0x160a0d11, 0x22018312, 0x82060d0e, 0x2fa482fc,
	0x0e0e0516, 0x13110f0e, 0x1411130c, 0x0f0f0f06, 0x0a230b82, 0x82130f0f, 0x8244829b, 0x12132119, 0x0b21fd82, 0x202d820e, 0x2108820d, 0x7e820d06,
	0x0e0d0b28, 0x120d0e0b, 0x8b820612, 0x110e122e, 0x0a0f0f0c, 0x18190a0a, 0x110e0f12, 0x0c2b4082, 0x0e150e10, 0x100f1111, 0x84111113, 0x0f122b42,
	0x17171011, 0x0f0f1411, 0x3d821017, 0x3a820a20, 0x820e0c21, 0x820f203a, 0x0c0e2e03, 0x0d130d0b, 0x14130d0e, 0x0c0d110e, 0x285d8212, 0x060b0c0a,
	0x14140806, 0x240b820e, 0x1a160a0c, 0x063f460e, 0x00820020, 0x110d1223, 0x2106820f, 0x008d0e00, 0x890d7046, 0x0fcf430d, 0x0a060a23, 0x22658206,
	0x4112150a, 0x1f83058c, 0x100d0f24, 0x7b82100d, 0x820d1121, 0x0c0a3153, 0x150f0f0e, 0x12161a10, 0x0b160e0f, 0x0c0f120d, 0x03406d83, 0x17bb438f,
	0x820e1021, 0x110f21c8, 0xfc880186, 0x190e0023, 0x22008410, 0x820f110b, 0x0e0b3500, 0x11080609, 0x1a00000e, 0x0e121617, 0x0f130e11, 0x0e110f13,
	0x0033f182, 0x13170e11, 0x06060a0a, 0x0c0a0e06, 0x0e110606, 0x820e1404, 0x231734fa, 0x08080017, 0x0f130b09, 0x0a061119, 0x08130f0a, 0x820a080a,
	0x26028647, 0x13130a0a, 0x82170d13, 0x0f123360, 0x0a11120d, 0x130d100a, 0x120e1211, 0x110e1010, 0x92821710, 0x21820a20, 0x0e0f0f2e, 0x0e0e0c0e,
	0x060f0e08, 0x16060e08, 0x62820d82, 0x0e0f0923, 0x20168213, 0x2752820f, 0x0f101010, 0x0e111211, 0x2008a743, 0x2085820e, 0x21268306, 0x67840e0e,
	0x05820c20, 0x0e0f0d2b, 0x0f161717, 0x1216130f, 0x82738217, 0x13112b11, 0x0d0d0f10, 0x0d0e1613, 0xc6821309, 0x132dde82, 0x19121010, 0x0b170f17,
	0x1306060b, 0x2d718213, 0x0e0a0a0f, 0x06080f0e, 0x0f10230b, 0x0d820f10, 0x120a0a28, 0x11111212, 0xc2890611, 0x10060d27, 0x0a0c100c, 0x2b7d8412,
	0x0c0c1313, 0x1717170c, 0x0a0e120f, 0x10211683, 0x823e820c, 0x120e30c6, 0x0e0f120f, 0x060d0e0f, 0x0b0d070d, 0x82110f11, 0x0a102120, 0x0c240182,
	0x090e090e, 0x2d830f83, 0x84120d21, 0x120b21d2, 0x1b2c2882, 0x08110e14, 0x0e07190d, 0x080e0808, 0x63824182, 0x40820f20, 0x120e0f22, 0x32830184,
	0x2106b943, 0x1f820a06, 0x55855982, 0x850e1221, 0x07c84155, 0x0e131728, 0x0e10070e, 0x91821616, 0x83131721, 0x0e0e2101, 0x1120bd82, 0x1721a482,
	0x29c58205, 0x0c141110, 0x06151114, 0xe2821010, 0x100a1124, 0x9b821310, 0x69821120, 0x14100e23, 0x2afd8213, 0x0f060f0c, 0x0f0b0e0e, 0x820e060e,
	0x0e0c2714, 0x0e0f0c0e, 0x13821313, 0x0f130f2f, 0x10100d12, 0x1a0a0a0a, 0x0e101319, 0x3b408211, 0x160f110d, 0x1011110e, 0x12111311, 0x0e100e11,
	0x1210130e, 0x12181810, 0x18101015, 0x0e260d82, 0x120e0e0b, 0x4e820f0c, 0x0e0f1028, 0x0b0c0e0f, 0x0682130e, 0x82141421, 0x130d2c47, 0x0b0f0e0e,
	0x06060c0d, 0x82151508, 0x0d0f2520, 0x0f1b170b, 0x200abb43, 0x20608213, 0x20008200, 0x20008d0f, 0x93658210, 0x052a4103, 0x0a290589, 0x11060a06,
	0x160b0d0e, 0x05e64212, 0x00820e20, 0x0f243784, 0x0e120e11, 0x0b285382, 0x10100f0d, 0x171b1116, 0x1721ca82, 0x43b8820c, 0xfb4194bb, 0x21058705,
	0x01870e13, 0x820f1121, 0x11102101, 0x08430186, 0x23058205, 0x101a0f00, 0x0c220084, 0x00821012, 0x090e0c35, 0x0f110806, 0x181b0000, 0x120f1317,
	0x1410140e, 0x820e1210, 0x120032f1, 0x0a14180f, 0x0606060a, 0x060c0a0f, 0x040f1106, 0x35258215, 0x18251800, 0x09080800, 0x1a0f140b, 0x0b0b0611,
	0x0b09140f, 0x7f410b09, 0x051c4e09, 0x1010182e, 0x0e0f1311, 0x0b0a1213, 0x12140d11, 0x11299182, 0x10120f10, 0x100f1018, 0x2f21820b, 0x0f0e0f0f,
	0x080e0f0d, 0x08060f0f, 0x0f17060e, 0x0a290082, 0x0e0f090d, 0x0d0e0e14, 0x2552820f, 0x0f111010, 0x3c431312, 0x0d0e2105, 0xbb43b382, 0x22658905,
	0x820f0f0d, 0x180f2240, 0x263b8218, 0x18131714, 0x82141414, 0x14112a11, 0x0d0d0f11, 0x0d0f1714, 0x820f8209, 0x140f3b0c, 0x1a131010, 0x0b180f18,
	0x1406060b, 0x090f0e14, 0x0f0b0b0f, 0x06090f0f, 0xbb43250b, 0x13132508, 0x12121213, 0x250dbb43, 0x0b0d100d, 0xa5820f13, 0x14140f2f, 0x180d0d0d,
	0x130f1818, 0x0d100a0f, 0x82018211, 0x0e10263e, 0x10130e10, 0x09bb4313, 0x120f1222, 0x11222082, 0x2382110a, 0x09206482, 0x10200f83, 0x0e274482,
	0x0f0f1413, 0x820c0f0c, 0x1c0d2d4b, 0x09120f15, 0x0f081a0d, 0x090f0909, 0x42051e46, 0x1320058a, 0x13203a82, 0x12214082, 0x07bb430f, 0x11080b26,
	0x060d0e0e, 0x13215585, 0x8355850f, 0x2d03830d, 0x0e0f1418, 0x170e1007, 0x0b0f1317, 0x01831418, 0x820e0f21, 0x821120bd, 0x05182fa4, 0x100f0f0f,
	0x150d1512, 0x10061612, 0x0b821110, 0x10110a29, 0x13101214, 0x82100e12, 0x14152319, 0x8e820f0a, 0x0e292d82, 0x060f0f0b, 0x0e0f0e0e, 0x2210830c,
	0x8214140e, 0x140f3d13, 0x110e130f, 0x0b0a0a10, 0x11141a1b, 0x1010120f, 0x0f120e10, 0x12120f17, 0x12141211, 0x112e4282, 0x10140f0f, 0x19191112,
	0x11101613, 0x3d821119, 0x0e0f0b28, 0x0f0f0d13, 0x1a820f0e, 0x0d0f0f2a, 0x0e140e0c, 0x15150f0f, 0x0d214782, 0x285d8214, 0x060d0d0b, 0x16160806,
	0x230b820f, 0x1c180b0e, 0x2106054d, 0x0082000d, 0x60821320, 0x283ebb43, 0x0b0e0e12, 0x0e111317, 0x82a68211, 0x06aa4683, 0x130e1223, 0x05bb430f,
	0x17111125, 0x82181c12, 0x0d1824ca, 0x8410140e, 0x40718375, 0xfb418b03, 0x21059105, 0x01820f12, 0x86121021, 0x08b24401, 0x1b0f0023, 0x08008411,
	0x10130c31, 0x0d101110, 0x0906090f, 0x00000f12, 0x1418191d, 0x150f130f, 0x13111511, 0x1014180f, 0x19101200, 0x060b0b15, 0x0b0f0606, 0x1206060d,
	0x8216040f, 0x1b003525, 0x0a001b29, 0x160c0b0a, 0x07141d11, 0x16110c0c, 0x0c0a0c0a, 0x04844f84, 0x0c0c2108, 0x0f161616, 0x1313121b, 0x15101115,
	0x130c0b14, 0x1514170f, 0x12131510, 0x1b121411, 0x0c131113, 0x112e2182, 0x0e111011, 0x110a1011, 0x10090711, 0x0d821a07, 0x0e0c112a, 0x1610110b,
	0x110e1010, 0x12275282, 0x14111312, 0x84101415, 0x830e2000, 0x82072005, 0x84112000, 0x2065840e, 0x8205820f, 0x1b1b2803, 0x1611111a, 0x821b151b,
	0x2f118273, 0x11131614, 0x1a160f0f, 0x160b0f10, 0x14161116, 0x12301b82, 0x1b1d1512, 0x0c0c1b11, 0x16160707, 0x110a1110, 0x112bb182, 0x0c070a11,
	0x12111229, 0x4e0b1111, 0x142305cc, 0x89071414, 0x070f28c2, 0x0e130e12, 0x8211150c, 0x16112c70, 0x0f0f0f16, 0x111b1b1b, 0x830b1115, 0x0e132116,
	0x12243e82, 0x15101210, 0x10381182, 0x070f1011, 0x0c0f080f, 0x11141114, 0x0c131015, 0x0e120c13, 0x0b110b11, 0x13200f83, 0x0f274482, 0x10111615,
	0x820d110e, 0x1f0f2f4b, 0x0a141118, 0x10091d0f, 0x0a100a0a, 0x1e831012, 0x83055745, 0x82152049, 0x11142340, 0x0185070b, 0x13090c23, 0x85598210,
	0x20578355, 0x83558212, 0x2003830d, 0x2952821b, 0x1b101208, 0x0c10151a, 0x0183161b, 0x82101121, 0x821320bd, 0x061b21a4, 0x2208c582, 0x0f181412,
	0x07191418, 0x11131312, 0x130b1413, 0x12141713, 0x12101415, 0x18131111, 0x11110b16, 0x8207110e, 0x110c25d9, 0x10100711, 0x10209c82, 0x10231082,
	0x82071616, 0x11162e8b, 0x12130f15, 0x1e0c0b0b, 0x1113161e, 0x2a408214, 0x1a11140f, 0x13141411, 0x82141714, 0x11132e42, 0x15131611, 0x151c1c13,
	0x1c131219, 0x223d8213, 0x4710110d, 0x10260797, 0x0d0e1111, 0x14821710, 0x82181821, 0x170f2147, 0x0d285d82, 0x07070e0f, 0x11191909, 0x0f250b82,
	0x11201b0d, 0x2000850f, 0x23008200, 0x12141016, 0x00210682, 0x20008d11, 0x08b04212, 0x2a41098d, 0x2f058905, 0x070b070b, 0x0d0f1014, 0x1013161a,
	0x11141013, 0x09831983, 0x1021b782, 0x328b8215, 0x110f0c11, 0x141a1313, 0x13171b20, 0x100e1b11, 0x830f1316, 0x8f03406d, 0xac821520, 0x16210389,
	0x21018710, 0x01821114, 0x86141221, 0x23f68801, 0x131e1100, 0x31080084, 0x1212150e, 0x110e1213, 0x140a070b, 0x20000011, 0x11161b1c, 0x13181115,
	0x11151318, 0x0012161b, 0x181d1115, 0x07070c0c, 0x0e0c1107, 0x11140707, 0x25821905, 0x2c1d0033, 0x0a0a001d, 0x12180d0b, 0x0d08151f, 0x0b18120d,
	0x055b5c0d, 0x00841220, 0x180d0d3d, 0x1d101818, 0x16141414, 0x16161112, 0x10140d0d, 0x11171618, 0x12141417, 0x821d1415, 0x820d208c, 0x12122f21,
	0x120f1211, 0x12120a11, 0x09110a09, 0x0082121c, 0x0b0f0c29, 0x11181112, 0x82120f11, 0x233d8252, 0x15171612, 0x2005d541, 0x2006830f, 0x84008209,
	0x2804855f, 0x12121210, 0x1d121210, 0x233b821d, 0x1d171d18, 0xca827382, 0x18152308, 0x10101215, 0x10121c18, 0x1218180b, 0x13131518, 0x17141418,
	0x1d121c1f, 0x08080d0d, 0x12111818, 0xb182120a, 0x0b121229, 0x142c0d08, 0x82121412, 0x0d0d280d, 0x15171717, 0x85091515, 0x27058358, 0x0f140910,
	0x160d0f14, 0x1220a583, 0x1028cc82, 0x1d1d1d10, 0x0d121612, 0x14211683, 0x263e820f, 0x11141114, 0x82161316, 0x101122c5, 0x82018209, 0x1216252b,
	0x0c141217, 0x0f280182, 0x0b120b12, 0x12151215, 0x10232d83, 0x82121817, 0x170e21e9, 0x222cae82, 0x0a151219, 0x12091f10, 0x0a120a0a, 0x0f204182,
	0x11204a82, 0xb44e4283, 0x21058305, 0x0186090d, 0x59821f82, 0x17201283, 0x55825785, 0x03835383, 0x12181d2d, 0x11140911, 0x12171c1d, 0x83181d0d,
	0x11122501, 0x15121208, 0x1d2fa482, 0x12121206, 0x10191614, 0x091a161a, 0x82141414, 0x140d290b, 0x13161814, 0x14111617, 0x19231982, 0x82120d18,
	0x20eb828e, 0x25088211, 0x13111109, 0x10830f11, 0x18181122, 0x123d1382, 0x10171218, 0x0d0d1414, 0x1820200d, 0x14161214, 0x16101414, 0x16121c12,
	0x18151416, 0x37428516, 0x15161418, 0x1b171e1e, 0x141e1414, 0x0e111211, 0x0f171112, 0x12111313, 0x123b5d82, 0x110e0f12, 0x12131118, 0x17131a19,
	0x11181011, 0x100e1211, 0x0a09090f, 0x82121b1b, 0x0e10250b, 0x1012221d, 0x00200085, 0x17230082, 0x82131612, 0x82002006, 0x21028bb1, 0x01951114,
	0x6d821220, 0x0d29038b, 0x16090d09, 0x1c0e1011, 0x212f8317, 0x1b831216, 0x15111428, 0x16121512, 0x50831711, 0x12100d31, 0x161c1414, 0x14181d22,
	0x110f1d12, 0x83101418, 0x8f03406d, 0x95121721, 0x21c88401, 0x01861613, 0x0023f888, 0x84152112, 0x160f2200, 0x2c008214, 0x090b120f, 0x0013160b,
	0x1d1e2200, 0x25498218, 0x14191419, 0xf1821217, 0x13160033, 0x0d0d191f, 0x12080808, 0x08080f0d, 0x1b051216, 0x34fa8212, 0x00203120, 0x0f0d0b0b,
	0x1722141a, 0x140f0f09, 0x0c0f0c1a, 0x8647820f, 0x0f210802, 0x1a1a1a0f, 0x16162011, 0x12141916, 0x0f0d1819, 0x181b1216, 0x16191319, 0x16171416,
	0x16141620, 0x2e21820f, 0x14131414, 0x0b131411, 0x0b091414, 0x821f0913, 0x0e142a0d, 0x13140d11, 0x1113131a, 0x82528214, 0x1814243d, 0x84131719,
	0x13112100, 0x09200082, 0x14200082, 0x67840e84, 0x05821120, 0x20280382, 0x14141f20, 0x20191f1a, 0x14357382, 0x1a171415, 0x11111417, 0x11131f1a,
	0x141a1a0d, 0x1515171a, 0x2d86821a, 0x20141f22, 0x09090f0f, 0x14131a1a, 0xb182140c, 0x0c141425, 0x82310f09, 0x1414228a, 0x2600820d, 0x17191919,
	0x89091717, 0x091227c2, 0x11161116, 0xa582190f, 0x82141321, 0x111128cc, 0x14202020, 0x830d1419, 0x82162016, 0x160c2d76, 0x19131613, 0x13141915,
	0x09121314, 0x0f280182, 0x14181418, 0x0e161319, 0x11280182, 0x0d140d14, 0x14171417, 0x12272d83, 0x13141a19, 0x82101410, 0x25112d4b, 0x0c17141c,
	0x130a2212, 0x0b130b0b, 0x11204182, 0x40824a82, 0x19131422, 0x19205b82, 0x18214082, 0x06b94314, 0x0b0f0924, 0x59821316, 0x57845585, 0x53835582,
	0x20200383, 0x0a295282, 0x1f1f1316, 0x200f1319, 0x2101831a, 0xbd821314, 0xa4821720, 0x1407202e, 0x18161414, 0x181c111c, 0x1616091d, 0x182a8382,
	0x1b16160d, 0x18191518, 0x19821613, 0x0d1a1c26, 0x14101414, 0x13262d82, 0x0914140f, 0x9c821313, 0x10821320, 0x1a1a1323, 0x3ccc8209, 0x1219141a,
	0x0d0d1616, 0x1a23240f, 0x16181416, 0x18121616, 0x18141f14, 0x1b181618, 0x2b428518, 0x1718161a, 0x1d192121, 0x17211616, 0x0f223d82, 0x97471314,
	0x82162005, 0x1114243e, 0x471b1310, 0x12210797, 0x285d821b, 0x0911120f, 0x1d1d0b09, 0x250b8214, 0x26200f12, 0x00851114, 0x00820020, 0x18131a23,
	0x21068215, 0x008d1400, 0x8f07ae42, 0x825f8207, 0x2905896f, 0x090d090d, 0x0f121318, 0x29831a1f, 0x83141821, 0x13162919, 0x14171317, 0x13191318,
	0x0f315382, 0x16161412, 0x2025181f, 0x2014161b, 0x161a1311, 0x406d8311, 0x19208f03, 0x0389ac82, 0x87131a21, 0x14172101, 0x1521c882, 0x88018618,
	0x140023f6, 0x00841724, 0x16191022, 0x2b080082, 0x090d1411, 0x0014180c, 0x1f212600, 0x1419141a, 0x161c161c, 0x1a201419, 0x15190016, 0x0e0e1c22,
	0x14090909, 0x0909110f, 0x1e061418, 0x00362582, 0x00213221, 0x0f0d0c0c, 0x1824151b, 0x150f0f09, 0x0c0f0c1b, 0x0088150f, 0x1b0f0f26, 0x21121b1b,
	0x192e6082, 0x191a1315, 0x12170f0d, 0x141a191c, 0x8b82171a, 0x82211721, 0x820f2092, 0x15152e21, 0x15111514, 0x15150c14, 0x09140b09, 0x2a0d8220,
	0x0d110e15, 0x141b1415, 0x82151114, 0x17172652, 0x1a191517, 0x05d54118, 0x06831120, 0x09218582, 0x840f8415, 0x82122069, 0x15122b05, 0x20212114,
	0x201b1515, 0x7382211a, 0x182f1182, 0x1215171b, 0x14201b12, 0x1b1b0d12, 0x82181b15, 0x17172b1b, 0x1520231a, 0x090f0f21, 0x5d821b09, 0x82150c21,
	0x15152bb1, 0x320f090c, 0x15171517, 0x00820d15, 0x1a1a1a26, 0x09181818, 0x1528c188, 0x11170913, 0x1a0f1117, 0x152c6e83, 0x12121b1b, 0x21212112,
	0x0d151a15, 0x17211683, 0x823e8211, 0x191421c6, 0x142a1182, 0x09121415, 0x0f120a12, 0x0e821519, 0x0e171422, 0x11280182, 0x0d140d14, 0x15181518,
	0x13232d83, 0x82151b1a, 0x1a1031d2, 0x26121515, 0x0c18141d, 0x140b2412, 0x0c140c0c, 0x63824182, 0x40821520, 0x1a141522, 0x1a204982, 0x19214082,
	0x09bb4315, 0x82141721, 0x20558559, 0x8257831a, 0x07c84155, 0x141b212d, 0x14170a14, 0x141a2020, 0x831b210f, 0x14142501, 0x18151509, 0x212fa482,
	0x15151507, 0x121d1917, 0x091e191d, 0x82171717, 0x170d230b, 0x9b821c17, 0x16141935, 0x1d171414, 0x15140d1b, 0x15091511, 0x150f1414, 0x82140915,
	0x8311207e, 0x1b132210, 0x2f13821b, 0x1a151b15, 0x0d171713, 0x24250f0d, 0x1914171b, 0x133b4082, 0x14201519, 0x18171919, 0x191a191c, 0x14141714,
	0x1819171b, 0x1e1a2222, 0x82221716, 0x1014210d, 0x1122bd82, 0x5a821515, 0x15141527, 0x14101215, 0x2152821c, 0x47821d1d, 0x821c1221, 0x1210275d,
	0x0b090911, 0x20821e1e, 0x10131526, 0x12152721, 0x00200085, 0x1b230082, 0x82161914, 0x82002006, 0x44028bb1, 0x078f07a1, 0x89052a41, 0x090d2905,
	0x1419090d, 0x1a201013, 0x20058c41, 0x28008214, 0x14181417, 0x14191518, 0x2e8b821a, 0x15120f15, 0x19201717, 0x171c2127, 0x82112114, 0x831220b8,
	0x8f03406d, 0xac821a20, 0x1b210389, 0x21018714, 0xc8821518, 0x86191621, 0x84db8201, 0x00152402, 0x84172515, 0x1a112100, 0x2b080683, 0x090d1411,
	0x0015190c, 0x20222700, 0x141a151b, 0x171d171d, 0x1b21151a, 0x15190016, 0x0f0f1d23, 0x15090909, 0x0909120f, 0x1f061519, 0x00362582, 0x00253825,
	0x110f0d0d, 0x1b28181e, 0x1811110a, 0x0d110d1e, 0x00881811, 0x11112108, 0x141e1e1e, 0x1a191925, 0x1d15171d, 0x1a11101c, 0x1d1c1f15, 0x191a1d16,
	0x25191b17, 0x11191719, 0x27082182, 0x17161818, 0x0d161713, 0x0d0a1717, 0x17240a16, 0x10171716, 0x16170f13, 0x1316161e, 0x1e171117, 0x171a1919,
	0x161b1d1c, 0x13200084, 0x0a200583, 0x17200082, 0x17200e84, 0x18210082, 0x2b6f8214, 0x25171814, 0x18182425, 0x251d241e, 0x11827382, 0x1a1e1b2f,
	0x1e141418, 0x0f141623, 0x1e181e1e, 0x391b821b, 0x281d1919, 0x11251824, 0x1e0a0a11, 0x0d17161e, 0x17111118, 0x0a0d1817, 0x8a823811, 0x10171722,
	0x1d260082, 0x1b1b1d1d, 0xc1880a1b, 0x0a151829, 0x13191319, 0x82171d11, 0x1e172f70, 0x1414141e, 0x18252525, 0x1910171d, 0x01821a13, 0x19393e82,
	0x1d161916, 0x16171d18, 0x0a151617, 0x11150b15, 0x171c171c, 0x101a161d, 0x2723821a, 0x0f170f17, 0x171b171b, 0x15234483, 0x82171e1d, 0x1d1233e9,
	0x2b141718, 0x0d1b1720, 0x160c2815, 0x0d160d0d, 0x4a841619, 0x17234082, 0x83171d16, 0x821c2001, 0x0a102142, 0x11230185, 0x82161a0d, 0x83558559,
	0x13192157, 0x57835385, 0x171e252d, 0x16190b16, 0x161d2324, 0x831e2511, 0x16172101, 0x1b20bd82, 0x2521a482, 0x3dc58208, 0x14201c19, 0x0a221c21,
	0x171a1919, 0x1a101c19, 0x181c1f19, 0x19161c1d, 0x20191717, 0x8e83101e, 0xd9820a20, 0x17171129, 0x1816160a, 0x82161316, 0x1623089f, 0x170a1e1e,
	0x171e1716, 0x191a151d, 0x29111010, 0x171a1e29, 0x1919191c, 0x24171c15, 0x1a1c1c17, 0x821c1f1b, 0x171a3d42, 0x1c191e17, 0x1d27261a, 0x261a1922,
	0x1617161a, 0x1e161711, 0x16181813, 0x16181a17, 0x1222e282, 0x52821f16, 0x1821203b, 0x1f14151d, 0x11171616, 0x0a0a1314, 0x1722220d, 0x15181616,
	0x182b2511, 0x20008514, 0x23008200, 0x181c161e, 0x00200682, 0x028bb182, 0x8f07ae42, 0x829e8207, 0x2c05896f, 0x0a100a10, 0x1115161c, 0x161a1e24,
	0x834a821a, 0x82192019, 0x37b78209, 0x17161d16, 0x15111817, 0x241a1a18, 0x1f252b1c, 0x1325171a, 0x14191e16, 0x03406d83, 0x821d208f, 0x210389ac,
	0x0187161e, 0x1b171b25, 0x87181c17, 0x23f68801, 0x1a2a1800, 0x31080084, 0x19191d13, 0x1713191a, 0x1c0d0a0f, 0x2c000018, 0x181e2426, 0x1921171d,
	0x171d1921, 0x00191e25, 0x2027181c, 0x0a0a1111, 0x1411180a, 0x181c0a0a, 0x25822207, 0x402a0036, 0x0f0f002a, 0x1b221311, 0x130b1f2d, 0x0f221b13,
	0x1b130f13, 0x13340088, 0x22222213, 0x1d1d2a17, 0x181b201d, 0x13122021, 0x1f23171d, 0x1d295382, 0x1d1f1a1d, 0x1d1a1d2a, 0x2e218213, 0x1a191b1b,
	0x0f191a16, 0x0e0c1b1a, 0x82290c19, 0x121a2a0d, 0x191b1116, 0x16191922, 0x8252821b, 0x1f1b243d, 0x84191f21, 0x83162000, 0x820c2005, 0x841b2000,
	0x2069840e, 0x2b058217, 0x2a1a1b17, 0x1b1b292a, 0x2a212a22, 0x11827382, 0x1e221f2f, 0x2217171b, 0x11171928, 0x221b2222, 0x3f1b821f, 0x2d211d1d,
	0x132a1b29, 0x220b0b13, 0x0f1a1922, 0x1a13131b, 0x0b0f1b1a, 0x1b1d4013, 0x121b1b1d, 0x23055447, 0x0c1f1f1f, 0x1b2dc188, 0x161d0c18, 0x2113161d,
	0x19191a1a, 0x28cc821a, 0x2a2a1717, 0x1a211b2a, 0x05644112, 0x1d2c3e82, 0x20191d19, 0x191b211b, 0x0c17191b, 0x13280182, 0x1b1f1b1f, 0x121d1921,
	0x16240182, 0x111a111a, 0x2d830f83, 0x22211823, 0x31e9821a, 0x1a1b2115, 0x1a253117, 0x2d170f1f, 0x0f0f190e, 0x41820f19, 0x40836382, 0x21191b23,
	0x2501831a, 0x1b201b20, 0x01850c12, 0x1d0e1323, 0x85598219, 0x82578455, 0x820d8355, 0x2a1a2e03, 0x0d191a22, 0x282a191d, 0x2a131921, 0x25018322,
	0x1b0b191a, 0xa4821e1b, 0x1b092a2f, 0x201d1b1b, 0x20251725, 0x1d1d0c26, 0x230b821e, 0x231d1d12, 0x20289b82, 0x1a1a1c19, 0x1222251d, 0x1b298e82,
	0x191a1b0c, 0x0c1a1b13, 0x08bf8219, 0x1a191547, 0x23191b15, 0x191b0c22, 0x211b221b, 0x121d1d18, 0x2e2f1312, 0x201a1d22, 0x181d1d1d, 0x1a291b1f,
	0x1f1d2020, 0x20212023, 0x1a1a1d19, 0x1e201d22, 0x27212c2b, 0x1e2b1d1d, 0x14191a19, 0x1622191a, 0x1a191b1b, 0x293e821d, 0x1915161a, 0x191b1923,
	0x47822525, 0x1923172d, 0x17141b19, 0x0e0c0c16, 0x821b2626, 0x1418250b, 0x171b312a, 0x00200085, 0x22230082, 0x821c2019, 0x82002006, 0x21028bb1,
	0x0195191d, 0x89052a41, 0x0c122905, 0x19200c12, 0x22291418, 0x20058c41, 0x3e8d821a, 0x191e191d, 0x19201b1e, 0x1b1b1921, 0x1b17131b, 0x1f291d1d,
	0x1d232a31, 0x19162a1a, 0x83171d22, 0x8f03406d, 0xac822120, 0x22210389, 0x25018719, 0x1b1f1b1f, 0x01871c20, 0x0384dc83, 0x2f1b0023, 0x2200841e,
	0x821d2115, 0x162b0800, 0x0f0c111a, 0x00001b20, 0x22292c32, 0x251a211b, 0x211d251d, 0x1c222a1a, 0x2c1b2000, 0x0b131325, 0x131b0b0b, 0x200b0b16,
	0x8227071b, 0x2e003525, 0x10002e46, 0x26151210, 0x0c21321d, 0x261d1515, 0x15111511, 0x02864782, 0x2615153d, 0x2e192626, 0x2320201f, 0x23241a1d,
	0x1a201512, 0x1c242227, 0x1c1f2024, 0x822d1f22, 0x8215208c, 0x1d1d2e21, 0x1d181d1c, 0x1d1d101b, 0x0c1b100c, 0x2a0d822d, 0x1218141d, 0x1b261b1d,
	0x821d181b, 0x1f1f2752, 0x24221d20, 0x00841c22, 0x821b1821, 0x820c2000, 0x841d2000, 0x2067840e, 0x82058219, 0x2e2e2803, 0x261d1d2d, 0x822e242e,
	0x1d260873, 0x26211d1e, 0x19191d21, 0x191c2c26, 0x1d262612, 0x1e1e2126, 0x241f1f26, 0x2e1d2d31, 0x0c0c1515, 0x1c1b2626, 0xb1821d11, 0x111d1d2b,
	0x1f46150c, 0x1d1d1f1d, 0x26008212, 0x22242424, 0x890c2222, 0x0c1a2cc2, 0x1820181f, 0x1c1c2415, 0x821d1c1b, 0x191928cc, 0x1d2e2e2e, 0x83121d24,
	0x18202116, 0x20083e82, 0x1c1f1c1f, 0x1d241e23, 0x1a1b1d1b, 0x1a0e1a0c, 0x221d2215, 0x201c241d, 0x1f142014, 0x1c121c18, 0x200f8312, 0x3a448220,
	0x1d26241a, 0x171d181c, 0x191d1d24, 0x221c2836, 0x0f321a11, 0x1c10101c, 0x831c1f10, 0x2240831e, 0x82241b1d, 0x1d24225b, 0x43018223, 0x122505b9,
	0x2010150c, 0x8559821b, 0x83578355, 0x830d8355, 0x262d2d03, 0x1f0e1b1c, 0x242c2e1c, 0x262d151c, 0x1c210183, 0x20bd821b, 0x21a48221, 0xc5820a2e,
	0x231f2108, 0x23291928, 0x201f0c2a, 0x23201d20, 0x27202012, 0x23241e22, 0x1c1c1f1c, 0x12262820, 0x1d181d1c, 0x23082d82, 0x1d1d151b, 0x1d1b1b0c,
	0x1d1c171b, 0x261b1d17, 0x1c1d0c25, 0x241d251d, 0x121f201a, 0x33331512, 0x231c2026, 0x1a2a4082, 0x1c2d1d22, 0x22202323, 0x42822327, 0x1c1c202d,
	0x21232026, 0x2a24302f, 0x8230201f, 0x161b260d, 0x18251b1d, 0x20c6821d, 0x3a3e8220, 0x1b17191d, 0x1c1e1b27, 0x251d2928, 0x1c27191a, 0x19161d1b,
	0x100c0c18, 0x821d2a2a, 0x161a2569, 0x191d362e, 0x00200085, 0x25230082, 0x821e231c, 0x82002006, 0x20028bb1, 0x93a8821f, 0x052a4103, 0x12320589,
	0x230c120c, 0x2d161a1b, 0x201b2025, 0x1c1d231b, 0x07821c1b, 0x211c2133, 0x241b231d, 0x1d1d1d1c, 0x201d1a15, 0x36222d20, 0x21ca822d, 0xb882182e,
	0x6d831920, 0x218f0340, 0x018b1c24, 0x871c2521, 0x1d222501, 0x1e231d22, 0xdc830187, 0x1d240383, 0x21341d00, 0x31080084, 0x1f1f2417, 0x1c181f20,
	0x23110c12, 0x3700001d, 0x1d252d30, 0x20281c24, 0x1d242028, 0x001f262d, 0x28311e23, 0x0c0c1515, 0x18151d0c, 0x1d230c0c, 0x25822b08, 0x4c320036,
	0x12120032, 0x20291714, 0x170d2436, 0x12292017, 0x20171217, 0x21080088, 0x29291717, 0x22321b29, 0x20272322, 0x1526271d, 0x2a1c2317, 0x271e2725,
	0x251f2223, 0x1f223122, 0x21821722, 0x1e20202e, 0x1e1f1a1f, 0x0f201f12, 0x310f1e11, 0x1f2a0d82, 0x20141a15, 0x1e1e291e, 0x5282201a, 0x20243d82,
	0x1e252725, 0x1a200084, 0x0f200583, 0x20200082, 0x69840e84, 0x05821b20, 0x1f201b2b, 0x20313232, 0x27322920, 0x82738232, 0x29242f11, 0x1b1b2023,
	0x1b1e3029, 0x20292914, 0x1b822429, 0x27222232, 0x32203135, 0x0d0d1717, 0x1f1e2929, 0x17172012, 0x1229f482, 0x224c170d, 0x20202220, 0x26008215,
	0x25272727, 0x880f2525, 0x1c202dc1, 0x221a220f, 0x1f27171a, 0x1f1e1e1f, 0x1b2bcc82, 0x3232321b, 0x151f2720, 0x82231a22, 0x201f2f01, 0x221e2212,
	0x2720271e, 0x1e201e20, 0x01820f1c, 0x20251729, 0x1e272025, 0x82231523, 0x141f2323, 0x0f83141f, 0x1c234483, 0x821f2927, 0x281930d2, 0x3a1b1f20,
	0x12251f2c, 0x1e10361c, 0x821e1212, 0x834a8341, 0x1e202340, 0x01831f27, 0x26202625, 0x850f1520, 0x11172301, 0x59821e23, 0x57835585, 0x851a2221,
	0x20118353, 0x29528231, 0x321e220f, 0x171e2730, 0x01832931, 0x0d1e1f25, 0x82242020, 0x0b3221a4, 0x2231c582, 0x2c1b2c26, 0x220f2d26, 0x22202322,
	0x22231526, 0x359b822a, 0x1f221e26, 0x292c221f, 0x1a1f1f15, 0x1f200f20, 0x1f20171e, 0xbf821e0f, 0x1f1e1928, 0x291e2019, 0x8b820f29, 0x20293b08,
	0x22231c28, 0x38171515, 0x1f232937, 0x22222226, 0x3120251c, 0x2326261f, 0x27262a25, 0x1f231e26, 0x2622291f, 0x27343424, 0x3423222e, 0x1e1f1e23,
	0x281e1f18, 0x1e20201a, 0x3e82231f, 0x191b1f24, 0x52822a1e, 0x202c2c32, 0x2a1b1d28, 0x18201e1e, 0x0f0f1a1b, 0x202e2e11, 0x1c240b82, 0x203b3218,
	0x20066147, 0x23008200, 0x21261e28, 0x00200682, 0x028bb182, 0x951e2221, 0x052a4101, 0x152e0589, 0x260f150f, 0x31181c1e, 0x231e2328, 0xd182261e,
	0x39821f20, 0x241e243c, 0x271e2620, 0x2020201e, 0x23201c17, 0x3a253123, 0x1f232a31, 0x291e1a32, 0x6d831b22, 0x208f0340, 0x89ac8227, 0x1e282103,
	0x25250187, 0x26202520, 0x21018721, 0x01861e1f, 0x38200023, 0x08008423, 0x22271931, 0x1a222322, 0x120f141f, 0x00002026, 0x2931343b, 0x2c1f2720,
	0x27222c22, 0x2229311f, 0x35202600, 0x0d16162c, 0x17200d0d, 0x260d0d1b, 0x822e0920, 0x36003625, 0x13003652, 0x2c191513, 0x0f273a22, 0x2c221919,
	0x19141914, 0x08008822, 0x2c191921, 0x361d2c2c, 0x2a262525, 0x292a1f22, 0x1e251917, 0x212b282e, 0x2125262b, 0x25352528, 0x82192521, 0x22223c21,
	0x221c2220, 0x22221320, 0x0f20130f, 0x22212235, 0x151c1722, 0x202c2022, 0x82221c20, 0x243d8252, 0x282b2822, 0x20008420, 0x2005831c, 0x2100820f,
	0x00832122, 0x1d206984, 0x1d2b0582, 0x36362122, 0x2c222235, 0x82362b36, 0x2bca8273, 0x22262c27, 0x342c1d1d, 0x2c151d21, 0x2734c682, 0x252c2323,
	0x353a2b25, 0x19193622, 0x2c2c0f0f, 0x22142120, 0x2228b182, 0x190f1422, 0x25222552, 0x17297582, 0x2b2b1717, 0x2828282b, 0x3cc1880f, 0x250f1e22,
	0x191c251c, 0x2021212a, 0x2c2c2221, 0x361d1d1d, 0x2a223636, 0x1c251722, 0x82018226, 0x2025393e, 0x232a2025, 0x2220222a, 0x1e0f1e20, 0x28191e10,
	0x2b222822, 0x26172621, 0x21232382, 0x83152115, 0x3a44830f, 0x222c2b1f, 0x1b221c21, 0x1d22222b, 0x27212f3f, 0x113a1e14, 0x21131321, 0x84202513,
	0x2140824a, 0xf84a2022, 0x22292505, 0x0f172229, 0x19200185, 0x59821f82, 0x57835585, 0x851c2521, 0x2d118353, 0x20212c35, 0x36202510, 0x19212b34,
	0x01832c35, 0x82202121, 0x822720bd, 0x0b362fa4, 0x25222222, 0x301d2f29, 0x250f3129, 0x0b822625, 0x25172708, 0x23282e25, 0x2421292b, 0x2f252121,
	0x2221172c, 0x220f221c, 0x22192021, 0x20200f22, 0x211b2023, 0x20221b22, 0x13822c2c, 0x222c223d, 0x25261f2b, 0x3c191717, 0x21252c3c, 0x25252529,
	0x3522281f, 0x25292921, 0x82292e28, 0x21262f42, 0x29252c21, 0x2a383826, 0x38262532, 0x45832026, 0x1c2b2029, 0x22202323, 0x82212226, 0x201b38e2,
	0x2123202d, 0x2b23302f, 0x202d1e1f, 0x1e192220, 0x130f0f1c, 0x82223131, 0x191f240b, 0x47223f36, 0x00200661, 0x2c230082, 0x82242921, 0x22002106,
	0x2521008d, 0x21019520, 0x018d2022, 0x170f1729, 0x1f20290f, 0x832b3519, 0x2229242f, 0x42212021, 0x222305ee, 0x822b2029, 0x2b7b828b, 0x35262622,
	0x2d353f28, 0x1c362125, 0x1d20b882, 0x03406d83, 0x212b218f, 0x2c21018b, 0x25018721, 0x22282228, 0x01872429, 0x0383dc83, 0x22002224, 0x0084263d,
	0x2a1b3208, 0x25262525, 0x0f15211c, 0x00232914, 0x35384000, 0x212b222c, 0x252f252f, 0x2c35222b, 0x23290025, 0x18182f39, 0x220e0e0e, 0x0f0f1d19,
	0x320a2229, 0x35fa8222, 0x003a583a, 0x1b171414, 0x2a3e252f, 0x251a1a10, 0x151a152f, 0x0088251a, 0x1a1a2108, 0x202f2f2f, 0x2928283a, 0x2d21252d,
	0x281a182c, 0x2e2b3120, 0x28282e23, 0x39282a24, 0x1a282428, 0x252e2182, 0x1e242325, 0x24142324, 0x22140f25, 0x0d82380f, 0x1e19242a, 0x2f222517,
	0x251e2222, 0x28275282, 0x2b252928, 0x84232a2e, 0x831e2000, 0x820f2005, 0x84252000, 0x2069840e, 0x2b05821f, 0x3a242520, 0x2525393a, 0x3a2e392f,
	0x11827382, 0x292f2a2b, 0x2f202025, 0x17202337, 0x82c6822f, 0x2f2008de, 0x3e2e2828, 0x1b3a2539, 0x2f10101b, 0x1524222f, 0x241a1a25, 0x10152524,
	0x2528581b, 0x18252528, 0x2e260082, 0x2a2a2e2e, 0xc1880f2a, 0x0f21253c, 0x1e281e28, 0x24232d1a, 0x2f242322, 0x1f1f1f2f, 0x253a3a3a, 0x2818242d,
	0x0182291e, 0x28383e82, 0x2d232823, 0x23252d26, 0x0f202325, 0x1b201120, 0x252b252b, 0x1928232e, 0x1e280182, 0x17241724, 0x252a252a, 0x213a4483,
	0x2324302e, 0x2e1d251e, 0x43202425, 0x152a2433, 0x23133e20, 0x15231515, 0x4a832328, 0x40822520, 0x2d232523, 0x25018324, 0x252c252c, 0x01850f18,
	0x28141a26, 0x0f202222, 0x57845585, 0x53835582, 0x392d0383, 0x1122242f, 0x37392328, 0x391a232e, 0x2501832f, 0x25102224, 0xa4822a25, 0x250c3a2f,
	0x2c282525, 0x2c331f32, 0x28280f35, 0x080b8229, 0x28281828, 0x2e262b31, 0x2427232c, 0x2f332824, 0x1e242418, 0x24250f25, 0x24251b22, 0x2522220f,
	0x24231d22, 0x3022251d, 0x8b820f2f, 0x2e252f3c, 0x18282921, 0x40411a18, 0x2c24282f, 0x21282828, 0x2438252b, 0x2b282c2c, 0x42822c31, 0x24292808,
	0x2c283024, 0x2d3d3c29, 0x3c292735, 0x23242329, 0x2e23241b, 0x2225251e, 0x23252824, 0x1d1f2425, 0x25223122, 0x82333323, 0x31202d47, 0x1b252323,
	0x0f0f1e20, 0x25353514, 0x21256982, 0x25443a1b, 0x2000851f, 0x23008200, 0x262c232f, 0x00200682, 0x028bb182, 0x95232821, 0x052a4101, 0x18320589,
	0x2c0f180f, 0x381b2123, 0x2822282e, 0x24252c22, 0x07822422, 0x29232927, 0x2e232c25, 0x31518223, 0x2925201b, 0x442b3829, 0x24283039, 0x2f231e3a,
	0x6d831f28, 0x208f0340, 0x89ac822e, 0x232f2103, 0x2a250187, 0x2c252a25, 0x83018726, 0x230384dc, 0x29412500, 0x31080084, 0x28282d1d, 0x241e2829,
	0x2c150f17, 0x45000025, 0x252f393c, 0x2833242e, 0x242e2833, 0x00272f39, 0x333d262d, 0x0f0f1a1a, 0x1f1a250f, 0x252c1010, 0x2582360a, 0x66430036,
	0x18180043, 0x2b371f1a, 0x1e123148, 0x18372b1e, 0x2b1e181e, 0x21080088, 0x37371e1e, 0x2e432537, 0x2a342f2e, 0x1d323427, 0x38252e1e, 0x35283532,
	0x31292e2f, 0x292e422e, 0x21821e2e, 0x282b2b3c, 0x282a232a, 0x122a2a18, 0x41122817, 0x2a2a292a, 0x2a1a231d, 0x28283728, 0x52822b23, 0x2a243d82,
	0x28313532, 0x23200084, 0x12200583, 0x2a200082, 0x2a20b584, 0x2b210082, 0x2b6f8224, 0x432a2b25, 0x2b2b4143, 0x43354337, 0x11827382, 0x2f37312f,
	0x3725252b, 0x1a252940, 0x372b3737, 0x3c1b8231, 0x48352e2e, 0x1f432b42, 0x3712121f, 0x18292837, 0x2a1e1e2b, 0x12182b2a, 0x2a2e661f, 0x2975822e,
	0x351d1d1d, 0x31313535, 0xc1881231, 0x12262b3c, 0x232e232e, 0x2929341e, 0x372a2928, 0x24242437, 0x2b434343, 0x2e1d2a34, 0x01822f23, 0x2e243e82,
	0x34282e28, 0x28311182, 0x1225282a, 0x1f251425, 0x2a322a32, 0x1d2f2935, 0x2723822f, 0x1a291a29, 0x2a312a31, 0x263a4483, 0x292a3735, 0x35212a22,
	0x4e252a2b, 0x1831293a, 0x28164825, 0x18281818, 0x4a84282e, 0x2a234082, 0x832a3428, 0x21428301, 0x0185121d, 0x2e171e23, 0x85598228, 0x21578355,
	0x5385232e, 0x422d5783, 0x14282937, 0x4043282e, 0x421e2935, 0x21018337, 0xbd822829, 0xa4823020, 0x820e4321, 0x2e2e08c5, 0x3b243a32, 0x2e123d32,
	0x2e2a2f2e, 0x2e2e1d32, 0x352b3238, 0x292d2832, 0x373a2e29, 0x222a291d, 0x2a2a122a, 0x2a2a1f28, 0x2b282812, 0x10832228, 0x37372824, 0xeb822a12,
	0x26352a3b, 0x1d1d2e2f, 0x374a4b1e, 0x2e32292e, 0x32262e2e, 0x3229412a, 0x38312e32, 0x08428232, 0x29292f39, 0x30332e37, 0x3e344645, 0x2f452f2e,
	0x20282928, 0x2335282a, 0x2a282b2b, 0x2b292b2f, 0x2821242a, 0x292b2838, 0x352b3b3b, 0x28382526, 0x25202a28, 0x17121223, 0x822a3d3d, 0x20262569,
	0x242b4f43, 0x00200085, 0x36230082, 0x822c3329, 0x2b002106, 0x2e21008d, 0x21019528, 0x018d282a, 0x1d121d29, 0x26283312, 0x83354120, 0x2b32222f,
	0x3e8d8229, 0x2930282e, 0x28332a30, 0x2a2a2935, 0x2b251f2b, 0x32412f2f, 0x2e38424e, 0x28234329, 0x83242e37, 0x8f03406d, 0x8b293521, 0x29362101,
	0x31250187, 0x332a312a, 0x8301872c, 0x240383dc, 0x4c2b002a, 0x0800842f, 0x2e342231, 0x232e2f2e, 0x18121a29, 0x00002b32, 0x37424650, 0x3b29352b,
	0x352e3b2e, 0x2d37422a, 0x472b3300, 0x121e1e3b, 0x1e2b1212, 0x32121224, 0x823e0c2b, 0x4b003625, 0x1a004b72, 0x3d221e1a, 0x14375130, 0x3d302222,
	0x221b221b, 0x08008830, 0x3d222221, 0x4b293d3d, 0x3a343333, 0x383a2b2f, 0x2a34221f, 0x2d3b383f, 0x2e33343b, 0x334a3337, 0x8222332e, 0x30303c21,
	0x2f272f2d, 0x2f2f1a2d, 0x152c1a15, 0x2f2e2f49, 0x1e27202f, 0x2c3d2c2f, 0x8230272c, 0x243d8252, 0x373b382f, 0x2000842d, 0x20058327, 0x21008215,
	0x00832e2f, 0x3021ba83, 0x2b6f8229, 0x4b2f3029, 0x3030494b, 0x4b3b4a3d, 0x11827382, 0x353d372f, 0x3d292930, 0x1e292e48, 0x3d303d3d, 0x3f1b8237,
	0x503b3333, 0x224b304a, 0x3d141422, 0x1b2e2c3d, 0x2f222230, 0x141b302f, 0x2f337222, 0x1f2f2f33, 0x3b260082, 0x37373b3b, 0xc1881537, 0x152a302d,
	0x27332733, 0x2e2e3a22, 0x822f2d2c, 0x29292bcc, 0x304b4b4b, 0x331f2f3a, 0x01823427, 0x24083e82, 0x2d332d33, 0x2f3a313a, 0x2a2d2f2d, 0x2a162a15,
	0x382f3822, 0x342e3b2f, 0x33203420, 0x2e1e2e27, 0x372f371e, 0x3a44832f, 0x2f3d3b2a, 0x252f262e, 0x292f303b, 0x372e4157, 0x18512a1b, 0x2d1b1b2d,
	0x842d331b, 0x2340824a, 0x2f3a2d2f, 0x42830183, 0x85151f21, 0x1a222601, 0x2a2c2c34, 0x83558515, 0x83558357, 0x2d038353, 0x2c2e3d4a, 0x4a2d3317,
	0x222e3b48, 0x01833d4a, 0x142c2e25, 0x82363030, 0x104b21a4, 0x2e08c582, 0x28413833, 0x15443942, 0x2f353333, 0x341f3833, 0x31383f33, 0x322d383b,
	0x41332e2e, 0x2f2e1f3d, 0x2f152f26, 0x2f222c2f, 0x2c2c152f, 0x83262c30, 0x2c230810, 0x2f153d3e, 0x2f3d2f2e, 0x33352a3b, 0x54221f1f, 0x2e343d53,
	0x33333338, 0x492f382a, 0x3438382e, 0x82383f37, 0x34420842, 0x333d2e2e, 0x4e4d3539, 0x3533453b, 0x2e2d354e, 0x2d2f232d, 0x3030273c, 0x30342f2c,
	0x282f302e, 0x2c3f2c25, 0x43422d30, 0x292b3c30, 0x2f2d2d3f, 0x15272923, 0x45451a15, 0x302c2c2f, 0x584b232a, 0x00852930, 0x00820020, 0x392e3d23,
	0x20068231, 0x8bb18200, 0x2d332102, 0x2f210195, 0x08018d2d, 0x1f151f32, 0x2a2d3915, 0x343c4923, 0x382c342c, 0x2e2c2e30, 0x352c332c, 0x392f352d,
	0x2f2e3b2d, 0x2a22302f, 0x49343430, 0x3f4a5738, 0x274b2e34, 0x29333d2d, 0x03406d83, 0x2e3b218f, 0x3d21018b, 0x2501872e, 0x2f372f37, 0x01873139,
	0x0383dc83, 0x30002f24, 0x00843555, 0x3a263108, 0x33343333, 0x151e2e27, 0x0030381b, 0x4a4e5900, 0x2e3b303d, 0x34423442, 0x3d4a2f3b, 0x303a0033,
	0x2121424f, 0x30141414, 0x14142822, 0x460d3038, 0x00352582, 0x00537e53, 0x26211d1d, 0x3c593544, 0x35262616, 0x1e261e44, 0x844f8426, 0x26210804,
	0x44444426, 0x3939532d, 0x3034403a, 0x26223e40, 0x3e462e3a, 0x3a413241, 0x393d3339, 0x39333952, 0x2e218226, 0x34323535, 0x1d31342b, 0x1d183534,
	0x82511831, 0x23342a0d, 0x3135212b, 0x2c313144, 0x82528235, 0x3e34243d, 0x84323d41, 0x312b2100, 0x18200082, 0x35200082, 0x65840e84, 0x05822d20,
	0x33352d2b, 0x35515353, 0x41524435, 0x82738253, 0x3c320811, 0x2d353b44, 0x324f442d, 0x4444212d, 0x363c4435, 0x39394436, 0x35515941, 0x16262653,
	0x31444416, 0x26351e33, 0x35343426, 0x7e26161e, 0x34393439, 0x00822234, 0x41414126, 0x183d3d3d, 0x2f2cc289, 0x392b3918, 0x3340262c, 0x34323133,
	0x2d2bcc82, 0x5353532d, 0x22344035, 0x823a2b39, 0x083e8201, 0x39323943, 0x40364032, 0x31343134, 0x192e182e, 0x353e262e, 0x3241353e, 0x233a233a,
	0x21332b39, 0x353d2133, 0x2c39353d, 0x412f2c39, 0x2b323444, 0x35422934, 0x48612d34, 0x2e1e3d33, 0x1d321b59, 0x391d321d, 0x824a8432, 0x31342340,
	0x01833440, 0x22214283, 0x23018518, 0x313a1d26, 0x55855982, 0x55835783, 0x03825383, 0x4452342e, 0x39193133, 0x414f5232, 0x44522632, 0x33250183,
	0x35351631, 0x21a4823c, 0xc5821253, 0x3e395608, 0x3f492d48, 0x3939184b, 0x3e39343a, 0x46393a22, 0x3e41363e, 0x33333832, 0x22444839, 0x352b3433,
	0x31333418, 0x18343526, 0x31353131, 0x2a34322a, 0x44443134, 0x34323418, 0x2f423444, 0x2222393a, 0x445c5d26, 0x393e333a, 0x3e2f3939, 0x3e335134,
	0x463d3a3e, 0x0842823e, 0x33333a42, 0x3b3f3944, 0x4c415756, 0x3b563a39, 0x27313332, 0x2c423134, 0x34313535, 0x3532353a, 0x31292c34, 0x32363146,
	0x42354a49, 0x32462d2f, 0x2d273531, 0x1d18182b, 0x31354c4c, 0x272f3531, 0x2d356153, 0x00200085, 0x43230082, 0x82373f32, 0x82002006, 0x21028bb1,
	0x01953239, 0x8d313421, 0x18223d01, 0x313f1822, 0x4251272f, 0x313a313a, 0x3133353e, 0x31393133, 0x353b323b, 0x3241313f, 0x26315182, 0x3a3a352e,
	0x52613e51, 0x53333a45, 0x3944322b, 0x406d832d, 0x41218f03, 0x21018b32, 0x01873243, 0x3d353d25, 0x87373f35, 0x83dc8301, 0x00342403, 0x843b5e35,
	0x2a310800, 0x3a393940, 0x21332b39, 0x353e1e18, 0x56630000, 0x41354452, 0x49394933, 0x52344139, 0x40003844, 0x25495836, 0x16161625, 0x162c2635,
	0x0f353e16, 0x3625824d, 0x5c8c5c00, 0x24202000, 0x633a4b2a, 0x2a2a1943, 0x2a214b3a, 0x883a2a21, 0x2a210800, 0x4b4b4b2a, 0x3f3f5c32, 0x353a4740,
	0x2a274547, 0x454e3340, 0x40483748, 0x3f43393f, 0x3f393f5b, 0x3c21822a, 0x39373a3a, 0x20373930, 0x20183a39, 0x3a591836, 0x27393938, 0x363a2430,
	0x3036364b, 0x2752823a, 0x3a403f3f, 0x37434845, 0x30200084, 0x18200583, 0x3a210082, 0x84008338, 0x82322069, 0x3a322b05, 0x5a5c5c39, 0x5b4b3a3a,
	0x73825c48, 0x3b3a2608, 0x414b433a, 0x4b32323a, 0x24323858, 0x4b3a4b4b, 0x4b3b3b43, 0x62483f3f, 0x2a5c3a5a, 0x4b19192a, 0x2139364b, 0x2bb1823a,
	0x19213a3a, 0x3a3f8c2a, 0x273a3a3f, 0x48260082, 0x43434848, 0xc1881843, 0x18343a2d, 0x303f303f, 0x3938472a, 0x82393836, 0x32322bcc, 0x3a5c5c5c,
	0x3f273947, 0x01824030, 0x213a393c, 0x373f373f, 0x3a473c47, 0x33373a37, 0x331b3318, 0x453a452a, 0x4038483a, 0x23824027, 0x39243927, 0x433a4324,
	0x3744833a, 0x394b4834, 0x2e3a2f38, 0x32393a49, 0x4338506b, 0x1e633321, 0x38212138, 0x4a834182, 0x3a234083, 0x83394737, 0x21428301, 0x01851827,
	0x40202a26, 0x18333636, 0x57835585, 0x85303f21, 0x2d578353, 0x36394b5b, 0x5b373f1c, 0x2a384858, 0x01834b5b, 0x19363925, 0x82423a3a, 0x135c21a4,
	0x5608c582, 0x3250453f, 0x18544551, 0x3a413f3f, 0x4027453f, 0x3c454e3f, 0x3e374548, 0x503f3939, 0x3939274b, 0x3a183a2f, 0x3a2a3639, 0x36361839,
	0x382e363b, 0x363a2f3a, 0x3a184b4c, 0x3a4b3a38, 0x3f403449, 0x672a2727, 0x39404b65, 0x3f3f3f45, 0x5a3a4534, 0x40454539, 0x82454e44, 0x40390842,
	0x3f4b3939, 0x605f4246, 0x413f5548, 0x3937415f, 0x37392b37, 0x3b3b3049, 0x3b403936, 0x31393b38, 0x364d362e, 0x5251383b, 0x3235493b, 0x3a37374d,
	0x1830322b, 0x54542018, 0x2569823a, 0x6c5c2b34, 0x0085323b, 0x00820020, 0x46384a23, 0x2006823d, 0x8bb18200, 0x09b04202, 0x2a41098d, 0x08058905,
	0x27182732, 0x34374518, 0x40495a2b, 0x45364036, 0x3936393b, 0x42363f36, 0x453a4238, 0x3a384837, 0x332a3a3a, 0x5940403a, 0x4d5b6b45, 0x305c3940,
	0x323f4b37, 0x03406d83, 0x3848218f, 0x4a21018b, 0x25018738, 0x3a433a43, 0x01873d46, 0x0384dc83, 0x683a0023, 0x08008441, 0x3f472e32, 0x303f403f,
	0x21182439, 0x00003b45, 0x4b5a606d, 0x5139483a, 0x483f513f, 0x3e4b5b39, 0x613b4700, 0x18292951, 0x2a3a1818, 0x45191931, 0x3a55103b, 0x6435fa82,
	0x23006498, 0x522e2723, 0x1b496c40, 0x52402d2d, 0x2d242d24, 0x08008840, 0x522d2d21, 0x64375252, 0x4d464544, 0x4b4e393f, 0x38452d2a, 0x3c4f4b54,
	0x3e44464f, 0x45634449, 0x822d453e, 0x40270821, 0x343e3c40, 0x3e233c3e, 0x3b221b3f, 0x3d3f611b, 0x342b3e3e, 0x523b3f27, 0x3f353b3b, 0x44523f2d,
	0x4b3f4644, 0x843c494f, 0x83342000, 0x821b2005, 0x3d3f2100, 0x3f200083, 0x40210082, 0x2b6f8236, 0x643e4037, 0x40406264, 0x644f6352, 0x11827382,
	0x4752492f, 0x52373740, 0x27373d60, 0x52405252, 0x321b8249, 0x6b4f4444, 0x2e644062, 0x521b1b2e, 0x243e3b52, 0x822d2d40, 0x1b2429f4, 0x3f44982e,
	0x2a3f3f44, 0x4f260082, 0x49494f4f, 0xc1881b49, 0x1b38403c, 0x35453444, 0x3e3d4e2d, 0x523e3d3b, 0x36363652, 0x40646464, 0x442a3e4e, 0x01824634,
	0x403e4608, 0x443c4424, 0x4e414d3c, 0x3c3f3c3f, 0x1e381b38, 0x3f4b2e38, 0x3d4f3f4b, 0x2b462b46, 0x273e3444, 0x3f49273e, 0x35453f49, 0x4f393545,
	0x333d3e52, 0x404f323f, 0x5774373e, 0x3824493d, 0x233c206c, 0x44233c23, 0x834a833c, 0x3c3f2340, 0x01833e4e, 0x2a214283, 0x2601851b, 0x3b45222d,
	0x851b383b, 0x83578355, 0x83538355, 0x52632d03, 0x441e3b3e, 0x4f60633c, 0x52632d3d, 0x3e210183, 0x20bd823b, 0x21a48248, 0xc5821564, 0x4b445608,
	0x4b583657, 0x45441b5b, 0x4b453f46, 0x5445452a, 0x4b4f414b, 0x3e3e433c, 0x2a525745, 0x3f333e3e, 0x3b3e3f1b, 0x1b3e3f2e, 0x3b403b3b, 0x333f3d32,
	0x51523b3f, 0x3f3d3f1b, 0x394f3f51, 0x2a2a4446, 0x526e702d, 0x444b3e45, 0x4b394545, 0x4b3e613f, 0x5449454b, 0x0842824b, 0x3e3e4639, 0x474c4552,
	0x5c4e6967, 0x47674644, 0x2f3b3d3c, 0x34503c3e, 0x3e3b4040, 0x403d4046, 0x3b32353e, 0x3d403b54, 0x4f405958, 0x3c543739, 0x372f3f3c, 0x221b1b34,
	0x823f5b5b, 0x2f392569, 0x36407564, 0x00200085, 0x51230082, 0x82424c3d, 0x82002006, 0x21028bb1, 0x01953c44, 0x89052a41, 0x1b2a3205, 0x3c4b1b2a,
	0x50612f39, 0x3b453b45, 0x3b3e404b, 0x3c07823e, 0x3f473d47, 0x3d4f3c4b, 0x2e403f3f, 0x46464038, 0x63754b61, 0x643e4554, 0x45523c34, 0x406d8336,
	0x4f218f03, 0x21018b3d, 0x01873d51, 0x493f4925, 0x87424c3f, 0x84dc8301, 0x40002303, 0x00844771, 0x4e323108, 0x44464444, 0x1b273e34, 0x00404b24,
	0x62687700, 0x3e4f4051, 0x45584558, 0x52633e4f, 0x414d0044, 0x2d2d586a, 0x401b1b1b, 0x1b1b352d, 0x5d12404b, 0xfc832582, 0x01000222, 0x00230683,
	0x83030014, 0x1a012609, 0x06010000, 0x82148600, 0x02022507, 0x00020000, 0xe608008d, 0x03000001, 0x07060504, 0x0b0a0908, 0x0f0e0d0c, 0x13121110,
	0x17161514, 0x1b1a1918, 0x1f1e1d1c, 0x23222120, 0x27262524, 0x2b2a2928, 0x2f2e2d2c, 0x33323130, 0x37363534, 0x3b3a3938, 0x3f3e3d3c, 0x43424140,
	0x47464544, 0x4b4a4948, 0x4f4e4d4c, 0x53525150, 0x57565554, 0x5b5a5958, 0x5f5e5d5c, 0x62006160, 0x66656463, 0x6a696867, 0x6e6d6c6b, 0x7271706f,
	0x76757473, 0x7a797877, 0x7e7d7c7b, 0x8281807f, 0x86858483, 0x8a898887, 0x8e8d8c8b, 0x9291908f, 0x96959493, 0x9a999897, 0x9e9d9c00, 0xa2a1a09f,
	0xa6a5a4a3, 0xaaa9a8a7, 0xadac03ab, 0xb1b0afae, 0xb5b4b3b2, 0xb9b8b7b6, 0xbdbcbbba, 0xc1c0bfbe, 0xc5c4c300, 0xc9c8c7c6, 0xcdcccbca, 0x00d0cfce,
	0xd4d3d2d1, 0x00d7d6d5, 0xdcdbdad9, 0x00dfdedd, 0x825c0604, 0xcad008f4, 0x06008000, 0x7e004a00, 0x8f017f01, 0xa1019201, 0xff01b001, 0x59021b02,
	0xc902c702, 0x0103dd02, 0x09030303, 0x33032303, 0x7e034703, 0x8c038a03, 0xce03a103, 0x4f040d04, 0x79045f04, 0x87047d04, 0x97049304, 0xa3049d04,
	0xb304a904, 0xd904bf04, 0x1d05e904, 0x80056405, 0x851e3f0e, 0xcb1e9e1e, 0xf91ef11e, 0x22201520, 0x30202620, 0x3a203420, 0x3e203c20, 0x75204420,
	0x7f207820, 0xb820b520, 0x0521f020, 0x16211321, 0x22212021, 0x2e212621, 0x02225e21, 0x0f220622, 0x15221222, 0x1e221a22, 0x48222b22, 0x65226122,
	0x02250025, 0x10250c25, 0x18251425, 0xab25a125, 0xcf25ca25, 0x6a26e625, 0x732c6d2c, 0x8ca71fa7, 0xe6ff02fb, 0xfffffdff, 0x2022d382, 0xcb84a000,
	0xaf01a026, 0x1802fa01, 0xc620cb82, 0xd822cb82, 0xcb8c0003, 0xcb828420, 0xa3038e2c, 0x0e040104, 0x78045104, 0xcb827c04, 0x96049032, 0xa2049a04,
	0xae04a804, 0xd804b804, 0x1a05e804, 0x8020cb86, 0xa028cb82, 0xf21ecc1e, 0x17201220, 0x2f24cb82, 0x39203220, 0x7422cb86, 0xcb827720, 0xcb92a020,
	0xcb865b20, 0xcb821120, 0xcb861920, 0x64226022, 0xaa20cb8e, 0x7128cb8a, 0x88a71ba7, 0xe5ff01fb, 0xff21cb83, 0x08cd82e3, 0x14fffa20, 0x9900a600,
	0x71018aff, 0x00003100, 0x00000ffe, 0x78004cff, 0x28ff41ff, 0x4b005e00, 0x1382a0fc, 0x21068565, 0x1b82d8fd, 0x19ff1b30, 0x000010ff, 0xf5fdf7fd,
	0xf0fef1fd, 0x0b82e7fd, 0xb9fdc732, 0x3ffd84fe, 0x77f424fd, 0x04e50be3, 0x80e4bde3, 0x02825982, 0x8285e021, 0x002e0804, 0xf9e084e0, 0x77e056e1,
	0xc9e1cae1, 0x0000b7e0, 0xb3e2fee2, 0x2be038e0, 0x5de223e1, 0x79df6adf, 0x3ce068e0, 0xa2de96de, 0x00008bde, 0x0382a6de, 0x71de7424, 0x07825fde,
	0x7ede3025, 0x83de7dde, 0xde6e3e0d, 0xdb9edb6b, 0xdbeeda96, 0xdd5ddb73, 0xd737d71a, 0x5c8d5c34, 0x00be0525, 0x00b80300, 0x20658201, 0x8a0382c8,
	0x78022402, 0x82020000, 0x2a128a03, 0x00740200, 0x027e0200, 0x82fa02a4, 0x83c38235, 0x2603211b, 0x03850583, 0x85220321, 0x2b058d07, 0x2a031c03,
	0x00003003, 0x46034403, 0x3c20198e, 0x0d8b0f8d, 0x004c0324, 0x03820300, 0x03211383, 0x9f058348, 0x3c898603, 0x00a30003, 0x03850084, 0x0096007c,
	0x008600e6, 0x008b008e, 0x00a9009d, 0x001000a4, 0x0be8828a, 0x9300833e, 0xf100f000, 0x97008d00, 0x01018800, 0xef00dc00, 0xaa009e00, 0xf200f300,
	0xa200f400, 0xc800ac00, 0xad00c600, 0x63006200, 0x64009000, 0x6500ca00, 0xc900c700, 0xcb00ce00, 0xcd00cc00, 0x6600e700, 0xcf00d100, 0xae00d000,
	0xee006700, 0xd4009100, 0xd300d200, 0xe9006800, 0x8900eb00, 0x69006a00, 0x6d006b00, 0x6e006c00, 0x6f00a000, 0x70007100, 0x73007200, 0x74007500,
	0x77007600, 0x7800e800, 0x79007a00, 0x7d007b00, 0xb7007c00, 0x7f00a100, 0x80007e00, 0xea008100, 0xb900ec00, 0x45014401, 0x03010201, 0x05010401,
	0xfc00fb00, 0x47014601, 0x49014801, 0xfe00fd00, 0x07010601, 0xff000801, 0x4b014a01, 0x4d014c01, 0x4f014e01, 0x0a010901, 0x0c010b01, 0x51015001,
	0xf700f600, 0x53015201, 0x55015401, 0x57015601, 0x59015801, 0x5b015a01, 0x5d015c01, 0x5f015e01, 0x61016001, 0xd500f800, 0x39013801, 0x63016201,
	0x65016401, 0x0d016601, 0x67010e01, 0x0f016801, 0x11011001, 0xe0001201, 0x1301e100, 0x69011401, 0x15016a01, 0x3a011601, 0x6c016b01, 0x6e016d01,
	0x70016f01, 0x18011701, 0xb000af00, 0x1a011901, 0x72017101, 0x1c011b01, 0x1e011d01, 0x74017301, 0xfa00f900, 0xe300e200, 0x20011f01, 0x22012101,
	0x76017501, 0x78017701, 0x7a017901, 0x7c017b01, 0x24012301, 0x26012501, 0x7e017d01, 0x80017f01, 0x82018101, 0x2701ba00, 0x29012801, 0xe4002a01,
	0x8301e500, 0xdf00d600, 0xda00d900, 0xde00db00, 0xdd00d700, 0x9e019d01, 0x8a019f01, 0xa101a001, 0xa401a201, 0xa601a501, 0xa801a701, 0xa9012b01,
	0xab01aa01, 0x2c01ac01, 0xae01ad01, 0xb001af01, 0xb201b101, 0xb401b301, 0xb601b501, 0xb801b701, 0xb9012d01, 0xbb01ba01, 0xbd01bc01, 0xbf01be01,
	0xc101c001, 0x2e01c201, 0xc401c301, 0x30012f01, 0xc601c501, 0xc801c701, 0xca01c901, 0xcc01cb01, 0xce01cd01, 0xcf013a02, 0x3101d001, 0xd1013201,
	0xd2013301, 0xd401d301, 0xd601d501, 0xd801d701, 0xda01d901, 0xdc01db01, 0xde01dd01, 0xe001df01, 0xe201e101, 0xe401e301, 0x8f03e501, 0x29022802,
	0x2b022a02, 0x2d022c02, 0x2f022e02, 0x31023002, 0x33023202, 0x34029003, 0x36023502, 0x8b023702, 0x9b028c02, 0x9d029c02, 0x9a039e02, 0x9c039b03,
	0x91019d03, 0x74039201, 0x76037503, 0x78037703, 0xa5027903, 0xb200b100, 0x34013802, 0xb600b500, 0x9301c300, 0xb400b300, 0xa602c400, 0xc1008200,
	0xb4038700, 0x3b01c500, 0xa7023c01, 0xa902a802, 0xf500aa02, 0xab029501, 0x3701ac02, 0xae02ad02, 0x7a03af02, 0xb002bc00, 0xb202b102, 0xb402b302,
	0x86038503, 0x88038703, 0xed009900, 0xa500c200, 0xb5028f00, 0xae029600, 0x15400000, 0x36375455, 0x2d2e2f32, 0x1f25262c, 0x11121314, 0x04050c0d,
	0xb0202c02, 0x23452503, 0x68612345, 0x6845208a, 0x44238a20, 0x2c2d4460, 0x4558524b, 0x21211b44, 0x202c2d59, 0x442d1682, 0x6001b020, 0x46b04520,
	0x8a186876, 0x26208345, 0xb02b12b0, 0x83452502, 0xb06a2403, 0x82608b40, 0x44232808, 0x2d212121, 0x8913b02c, 0xffb82319, 0x1a8a8cc0, 0xb069203d,
	0x00b06140, 0x2cb1208b, 0xb88c8ac0, 0x60620010, 0x23640c2b, 0x585c6164, 0x826103b0, 0x00b1216b, 0x68218c82, 0x820d8254, 0x270a825a, 0xb0206860,
	0x44232504, 0x1b200484, 0xa286a982, 0x45220982, 0x05826068, 0x82442321, 0x82179435, 0x43092888, 0xc0218758, 0x8212b01b, 0xb0452507, 0x47b02b11,
	0x47294982, 0x031be47a, 0x6918458a, 0x270e8320, 0x20878a8a, 0x5851a0b0, 0x21211d8b, 0x232382b0, 0x18595959, 0x080c0641, 0x46234624, 0x468a8a60,
	0x8a462023, 0xb8618a60, 0x236280ff, 0x8a231020, 0x8a4b4bb1, 0x20604570, 0x585000b0, 0x178201b0, 0x1b8bba30, 0x598c46b0, 0x686010b0, 0x2c2d3a01,
	0x9d824520, 0x58524626, 0x11211b3f, 0x2122aa82, 0xef820c21, 0x40b88b2b, 0x2c2d6200, 0x5180b021, 0x2c0f8558, 0x1b620020, 0x2f4000b2, 0x02b0592b,
	0x20198360, 0x211987c0, 0x19835515, 0x19878020, 0x60223e88, 0xe2822123, 0x58431325, 0x82021b03, 0x534b2a58, 0x5a514b23, 0x8a452058, 0x06b74160,
	0x38201186, 0x0805c541, 0x0002b121, 0x0123b142, 0x40b15188, 0x5a538801, 0x0010b958, 0x54882000, 0x0102b258, 0x42604302, 0x8224b159, 0xb958251b,
	0x40000020, 0x02201584, 0x14831583, 0x20202283, 0x00240c83, 0x524b014b, 0x08202f82, 0x1b252f84, 0x000040b9, 0x202a8480, 0x84108404, 0xb863230f,
	0x13840001, 0x13822485, 0x63000124, 0x138502b8, 0x27871020, 0x13820220, 0x13850420, 0x13844020, 0x00825920, 0x0223cc82, 0x8b585443, 0x08b982b5,
	0x5921212b, 0xb900002d, 0xc0ff5400, 0x29b21e40, 0xb2103632, 0xb240b220, 0xb270b250, 0xb2a0b280, 0xb2d0b2b0, 0xc00ab2e0, 0x02b2f0b2, 0x082282b8,
	0x17b57032, 0x441f3618, 0x1f560f01, 0x554f0256, 0x6f02555f, 0x549f0154, 0x510254af, 0x52041753, 0x53041653, 0x4a041552, 0x46045249, 0x47043749,
	0x48043249, 0x49380382, 0x3c043935, 0x3d04323f, 0x3e043d3f, 0x4304213f, 0x42041d3f, 0x4104523f, 0x40200382, 0x29080382, 0x0432353f, 0x04643332,
	0x04343533, 0x04543435, 0x041e3534, 0x34e034d0, 0xb80334f0, 0xb4b3eeff, 0xb8364825, 0xb4b3e0ff, 0x07822310, 0x0d40ee2e, 0x360f09b4, 0x04481ab4,
	0xb386b376, 0xf0229682, 0x2184b3b3, 0x40fab208, 0x2409b3ff, 0x4814b336, 0x13888904, 0x706c7004, 0x9c0f0278, 0x40029edf, 0x3619169d, 0x1b169c40,
	0x17974036, 0x96403619, 0x86361b17, 0x0f1f1385, 0x0f850f84, 0x0f8f0f8e, 0x1f841f90, 0x2f8f1f8e, 0x8085808e, 0x90918f88, 0x90879085, 0x82400f88,
	0x0f361009, 0x02721f72, 0x0c097140, 0x016d0f36, 0x2001c820, 0xc63f01c7, 0x2002c6ef, 0x02c540c5, 0x00016200, 0x02621062, 0x61a06140, 0x015b0f02,
	0x0411142d, 0x0425142c, 0x0439142b, 0x0413142a, 0x04151429, 0x041e141f, 0x04432021, 0x043c1420, 0x04451ac9, 0x04471b1a, 0x043c1a1b, 0x0432141a,
	0x20278215, 0x24ae8213, 0x041a1412, 0x3b038211, 0x40011470, 0x36434114, 0x1f2a0e0f, 0x0d010600, 0x0c1f4bc3, 0x0a1f4bc2, 0x091f4bc0, 0x57080382,
	0x1f4bbc05, 0x1f4bbd04, 0x1f4bb903, 0x1f4bba02, 0x1f4bb601, 0x1f4bb700, 0x1f2ac2c3, 0x1f2abfc0, 0xbc5640bd, 0xb9ba1f21, 0xb6b71f21, 0xc3c21f21,
	0xc0bf0dc4, 0xbdbc0dc1, 0xbab90cbe, 0xb7b60cbb, 0xbc100cb8, 0x4002bc80, 0x02b980b9, 0xb63fb60f, 0xb67fb64f, 0x2fb60f04, 0x6f200a82, 0x27080a82,
	0xb6cfb6bf, 0x0a08b6ff, 0x0c043709, 0x0405020d, 0x02020302, 0x50020001, 0x01b80105, 0x12b001ff, 0x544b004b, 0x0113b042, 0x53390782, 0x3209b142,
	0x64b04b2b, 0x8d854252, 0x96b01d8d, 0xb058524b, 0xb8591d80, 0x2a238208, 0xb001b058, 0xb0598e01, 0x86534b08, 0x05f05c0a, 0x73747323, 0x0df85c73,
	0xb02c0d85, 0x06b04503, 0xb0616845, 0x73442306, 0x0e200c83, 0x0e270c83, 0x0eb04423, 0x830fb045, 0x230f2a0b, 0xb0012b44, 0xb0684514, 0x90098214,
	0x87732044, 0x732b2100, 0x54830182, 0x28846885, 0x93750021, 0x088b8373, 0x732b7431, 0x062b2b74, 0x0514061e, 0x04d105f0, 0x035d047c, 0x001000dd,
	0xffe7ff00, 0xfe78fee1, 0x0359fe64, 0x001f0094, 0x00960000, 0x00b900aa, 0x82ce00c6, 0x2202850b, 0x84c200bc, 0x00762608, 0x00c000b2, 0x870b84cb,
	0x00812a04, 0x00a60094, 0x00da00cc, 0x271287ef, 0x9e009800, 0xb000ab00, 0x08830f88, 0x15849020, 0xa900a42a, 0xb300ae00, 0xc300ba00, 0x88221482,
	0x15829100, 0xac00a522, 0x02870b82, 0x87006f2c, 0x9b008f00, 0xd300a000, 0x14861d01, 0x1402c323, 0x36818501, 0x020c00e9, 0x017301d1, 0x001a008e,
	0x0044002c, 0x0073005c, 0x8286007e, 0x01c82297, 0x2013824c, 0x2013823d, 0x24158250, 0x00780072, 0x22158292, 0x86c800b9, 0x2a068b43, 0x0056003d,
	0x006a005d, 0x82b1006e, 0x84c120e9, 0x002a261a, 0x0054003d, 0x83158264, 0x2d128413, 0x7a007100, 0xa1008900, 0xbb00a700, 0x0b826f00, 0xaf828720,
	0x1a859a20, 0x8128058c, 0x21022102, 0xe5007400, 0xca244d82, 0xc6029501, 0xa730d182, 0x14068500, 0x00000a00, 0x1f00d105, 0x5d040000, 0x00390583,
	0x00e1ff00, 0xff64fe00, 0x030000f5, 0x02f40262, 0x009102a2, 0x006a02af, 0x214f824c, 0x0185001f, 0x00647a0c, 0x0121018d, 0x037c02dd, 0x03720359,
	0x042304c6, 0x04c80493, 0x051005f2, 0x0557052c, 0x063a06d9, 0x089207de, 0x09ad0820, 0x0a89094e, 0x0bfb0a63, 0x0b5d0b21, 0x0cd10ba2, 0x0d800c17,
	0x0ee30d65, 0x0f370fbd, 0x102910c9, 0x1131118d, 0x120112b9, 0x13f5125e, 0x1401143f, 0x154d15ad, 0x17a516ef, 0x18331858, 0x19161980, 0x1af81972,
	0x1bfc1a79, 0x1b751b3f, 0x1ce21ba0, 0x1c301c1a, 0x1e521d50, 0x1fa01e11, 0x20ef1f55, 0x225b2179, 0x237f221a, 0x23a92312, 0x251925f4, 0x277b26d2,
	0x28fa2741, 0x296f2979, 0x2ba62af4, 0x2c9c2b02, 0x2c892c2b, 0x2d2a2dcb, 0x2ead2d45, 0x2e262e0c, 0x2f8d2fda, 0x2fb32fa0, 0x2fe52fcc, 0x300930f7,
	0x3036301b, 0x315b3048, 0x31333121, 0x31573145, 0x3180316d, 0x32f63193, 0x326d325b, 0x3291327f, 0x32b932a3, 0x32dd32cb, 0x330133ef, 0x33533318,
	0x3431348d, 0x35a335c0, 0x36fb35c3, 0x387837be, 0x3876381e, 0x39bd3897, 0x3ac43928, 0x3b2c3ba0, 0x3cba3b6c, 0x3d743c09, 0x3d883d09, 0x3e553efa,
	0x3f053fa8, 0x40bb3f7a, 0x42974174, 0x42c44259, 0x430f43eb, 0x44cb434c, 0x448e4450, 0x452f45df, 0x456c4559, 0x4692457f, 0x47134738, 0x4743472d,
	0x47c14782, 0x480d48e6, 0x488e4849, 0x48bf48a5, 0x499a49dd, 0x4af149c5, 0x4b604bae, 0x4bcd4bb5, 0x4d324cf3, 0x4d194d06, 0x4d3f4d2c, 0x4d664d53,
	0x4d8c4d79, 0x4db94da6, 0x4ddf4dcc, 0x4e054ef2, 0x4e2b4e18, 0x4ea14e71, 0x4f004fe8, 0x4f5a4f46, 0x50d74fa3, 0x5044500f, 0x51e55075, 0x515d514a,
	0x5182516f, 0x52bc5194, 0x53055371, 0x532a5318, 0x547d54d1, 0x55ce549a, 0x55545502, 0x56f355d2, 0x56435617, 0x56bf56b3, 0x57e456d1, 0x59ff58f4,
	0x59245912, 0x5a495937, 0x5a205a09, 0x5a4b5a38, 0x5c005b5d, 0x5c155c02, 0x5de25cda, 0x5e425e87, 0x5e675e55, 0x5f9f5e7a, 0x5f715f09, 0x602e60d2,
	0x60536041, 0x60786066, 0x609f608c, 0x60c560b2, 0x60eb60d8, 0x611061fe, 0x624d628f, 0x63fe6260, 0x635a6347, 0x6381636e, 0x63a76394, 0x64cc63ba,
	0x65c3641d, 0x66006660, 0x676067bc, 0x683968e7, 0x69f968d5, 0x6a616915, 0x6aae6a81, 0x6b846bc7, 0x6ce66ba7, 0x6d2a6d9f, 0x6d6c6d52, 0x6ebe6d93,
	0x6e296e17, 0x6e4c6e3a, 0x6e736e61, 0x6e9a6e88, 0x6ebd6eab, 0x6ee36ed1, 0x6f066ff4, 0x6f2d6f1b, 0x71167042, 0x711b7109, 0x72f87135, 0x734c73b8,
	0x743f74dd, 0x75047595, 0x76e57570, 0x7782766b, 0x772b7714, 0x78cc7741, 0x78c97851, 0x79f578df, 0x7a867ac0, 0x7aa97a98, 0x7acc7abb, 0x7b8d7be8,
	0x7bb37b9f, 0x7c957cff, 0x7cb87ca7, 0x7cdb7cca, 0x7dfe7ced, 0x7e967ed3, 0x7eba7ea8, 0x7fdd7ecc, 0x8121803a, 0x81868170, 0x81af8198, 0x81db81c4,
	0x82ff81ed, 0x82238211, 0x825c8240, 0x828a8273, 0x83c882b2, 0x83b8834c, 0x840184d4, 0x845a842e, 0x84b3847f, 0x850785cc, 0x8552851d, 0x85bd8586,
	0x863886fc, 0x86f08674, 0x870087f8, 0x874a8742, 0x875a8752, 0x876a8762, 0x87bb87b3, 0x880788c3, 0x8897880f, 0x8931899f, 0x89418939, 0x8a078a49,
	0x8bdd8abe, 0x8b168b01, 0x8b488b31, 0x8c798b60, 0x8dfc8c73, 0x8f468e9b, 0x8f218f19, 0x904b90ec, 0x91f690ee, 0x92d091c8, 0x930e9375, 0x943294b9,
	0x95e695f6, 0x960a96ee, 0x9630961f, 0x975b9642, 0x971a9702, 0x97aa97a2, 0x97d197b2, 0x99ac98d9, 0x9a0a9a7c, 0x9bc19a1f, 0x9b559b4d, 0x9cf99bf1,
	0x9cef9c49, 0x9ecd9df7, 0x9f209f7b, 0xa1aca0f1, 0xa131a129, 0xa141a139, 0xa1d1a1c9, 0xa2e1a1d9, 0xa2f4a257, 0xa49ba3fc, 0xa58da418, 0xa69ea513,
	0xa7dea654, 0xa844a873, 0xa9f7a8ef, 0xaa87aab8, 0xab66abd9, 0xac27ac6e, 0xae77addd, 0xafdfae3c, 0xb043b07c, 0xb1d7b0cf, 0xb15fb157, 0xb224b2d6,
	0xb2f1b22c, 0xb49eb3f9, 0xb5cdb444, 0xb6f5b561, 0xb73fb7bb, 0xb999b8c3, 0xba53b93d, 0xba44ba33, 0xbac0bab8, 0xbad0bac8, 0xbcbabbd8, 0xbd52bd92,
	0xbef6bd6c, 0xbfffbe8f, 0xc087bf71, 0xc105c185, 0xc17ac129, 0xc230c2f6, 0xc3c9c295, 0x0801874b, 0xc40dc4e3, 0xc66ec5b3, 0xc67bc635, 0xc69ac691,
	0xc7e4c6a3, 0xc89bc723, 0xc842c804, 0xc9e7c87f, 0xca9ec950, 0xca5eca12, 0xcb2ccbaf, 0xcc25ccb1, 0xcc4ccc37, 0xcc7ccc66, 0xcca8cc92, 0xccd4ccbe,
	0xcd02cdec, 0xcd2acd14, 0xcd66cd47, 0xcd8dcd78, 0xcdb4cd9f, 0xcddbcdc6, 0xce02ceed, 0xce3ece22, 0xce62ce50, 0xce96ce7d, 0xcebdceac, 0xcee7ced5,
	0xcf11cfff, 0xcf3dcf27, 0xcf61cf4f, 0xcf9bcf81, 0xcfc5cfb3, 0xd0e9cfd7, 0xd1dad06f, 0xd23cd10b, 0xd3c7d216, 0xd4c6d350, 0xd516d55f, 0xd586d54e,
	0xd596d58e, 0xd65fd6f6, 0xd741d7e3, 0xd8f0d799, 0xd834d82c, 0xd844d83c, 0xd9ffd8a9, 0xd98cd94b, 0xdae5d9a6, 0xdbcdda42, 0xdc65dcd5, 0xdda1ddfc,
	0xdfb8deb4, 0xdf6edf0b, 0xe1dde0ce, 0xe20ee27b, 0xe3d8e23b, 0x0100106f, 0xce082801, 0xe393e381, 0xe3c6e3b1, 0xe4fbe3e2, 0xe425e413, 0xe456e43d,
	0xe487e46e, 0xe4c1e4a7, 0xe5e9e4d8, 0xe518e503, 0xe540e52e, 0xe56de556, 0xe591e57f, 0xe5b5e5a3, 0xe5dde5cb, 0xe60ce6f4, 0xe63fe627, 0xe667e655,
	0xe68ae679, 0xe6aee69c, 0xe6dfe6c9, 0xe707e7f1, 0xe735e720, 0xe85ce74b, 0xe834e82b, 0xe975e9b1, 0xe99fe98b, 0xe9d3e9b9, 0xea07eaed, 0xebc9ea44,
	0xec25ec52, 0xecbbecaf, 0xecd3ecc7, 0xedf4ecde, 0xed2ded1b, 0xed62ed3e, 0xeef5ed86, 0xef1aef55, 0xf019f0e5, 0xf143f1b8, 0xf220f2b5, 0xf238f22c,
	0xf248f240, 0xf258f250, 0xf3d2f2c9, 0xf366f32c, 0xf418f4bf, 0xf456f437, 0xf494f475, 0xf4b6f49d, 0xf4e1f4be, 0xf5fff4f7, 0x8229f514, 0xf5892e01,
	0x010200c7, 0x07000000, 0x00000600, 0x25068203, 0x0206b714, 0x03830004, 0xddcd2f24, 0x048300cd, 0x21303126, 0x25112111, 0x01200482, 0xfa242582,
	0xfb000580, 0x00200783, 0x00200882, 0x23203d82, 0x03220482, 0x3d84d105, 0x40612208, 0x02030318, 0x05550702, 0x01090f08, 0x0c045d00, 0x55020c0c,
	0x5d032b04, 0xddffb805, 0x021010b4, 0x23088255, 0x0f0fb4ec, 0xfa230884, 0x840d0db4, 0xb4d82308, 0x08840b0b, 0x0a40ec2f, 0x55020909, 0x051f050f,
	0x5d2f0502, 0x0800832b, 0x2bfde42f, 0x3f005de4, 0x3f2f33ed, 0x03013031, 0x23130323, 0x03023335, 0xd61caa1a, 0xd105cccc, 0x3704c9fb, 0x00d32ffa,
	0x03a80002, 0x060403d1, 0x3d898414, 0x02154026, 0x07030606, 0x40090f01, 0x2c030209, 0x01004000, 0x072c0400, 0x5d33ed2f, 0x4e82ed2f, 0x2f333c23,
	0x204e853c, 0x25528223, 0x842b0403, 0x0382a82b, 0xfd140625, 0x834302bd, 0x25d68203, 0x0000c300, 0xdb82c905, 0x001b8108, 0x40b1001f, 0x56214071,
	0x70057409, 0x7b137b09, 0x7b177b16, 0x090a081a, 0x0f161d1e, 0x15670115, 0x0c1e1501, 0x1413100f, 0x0807140b, 0x00171c1f, 0x18680118, 0x051e1801,
	0x061a0102, 0x19620619, 0x0b706214, 0x11030b01, 0x0319110b, 0x1b000d04, 0x0d1b1b01, 0x1d011a17, 0x13b51004, 0x0905021e, 0x0fb50c04, 0x18130f07,
	0x14000b04, 0x0f031401, 0x020b4f0b, 0x3f00080b, 0x125d3f5d, 0xed2f3917, 0x01230385, 0x842f332f, 0x2f2f290f, 0xe42fe45d, 0xc0873031, 0xfd220082,
	0x0582715d, 0x87c0c023, 0x2a0d8b10, 0x21015d01, 0x21152103, 0x84132303, 0x21352303, 0x03822113, 0x21033323, 0x20038213, 0x2d1b8205, 0xb3fec905,
	0xfe34015c, 0x688168a9, 0x0483f2fe, 0x4d01d62c, 0x01ccfe5c, 0x69816957, 0x04830e01, 0x35fe2a30, 0x015eeefe, 0xfea40312, 0x5bfe8788, 0x0383a501,
	0x78018727, 0xfea60187, 0x0803835a, 0x84fe85b3, 0x9b000300, 0x880497fe, 0x2c002806, 0x3a003300, 0x8d40bc00, 0x167e087d, 0x20761970, 0x367a2c70,
	0x01160e06, 0x12161b2b, 0x350d232b, 0x3c163c0d, 0x432b3524, 0x4c164a0d, 0x5a2b4324, 0x53205308, 0x6b355a33, 0x65206508, 0x6a2b6329, 0x173a6430,
	0x0b09401d, 0x2e381d37, 0x221d2211, 0x181b4726, 0x27122d31, 0x03003437, 0x1e7f060a, 0x0a051e01, 0x050a4711, 0x1f3c0f06, 0x2121023c, 0x7f203403,
	0x31000100, 0x06181820, 0x094f093f, 0x11000902, 0x261e1b2d, 0x1e030637, 0x40063009, 0x03067006, 0x335d2f06, 0x323917ed, 0x39125d2f, 0x5d2fed2f,
	0x270682ed, 0x332f005d, 0x2f2fed33, 0x173d1382, 0x3333ed39, 0x3939112f, 0x30312b2f, 0x14015d5d, 0x23110706, 0x27012e11, 0x011e3335, 0x83028217,
	0x012e280b, 0x37363435, 0x82113311, 0x2315210f, 0x08831c82, 0x011e1409, 0x010e1125, 0x01161415, 0x11272634, 0x8804013e, 0x8476c4f2, 0x131055e8,
	0x8b342e62, 0x1d44284f, 0xd1e98ea3, 0x48d46576, 0x85a34b0e, 0x951a461e, 0x6bd4fda3, 0x00026c92, 0x81788475, 0xcd9b7c01, 0x0196fe13, 0x27310165,
	0x11350ec6, 0x01032113, 0x080f08b1, 0x9479a529, 0x100111cc, 0x2c02f2fe, 0x472ec41d, 0x0551fe09, 0x9c200511, 0x089d01e8, 0x5c5b5a65, 0x575e58fe,
	0x0c62fe19, 0x00050062, 0x08e3ff95, 0x00ed0507, 0x000f000b, 0x0027001b, 0x409c0033, 0x06080972, 0x0618090a, 0x18350f1a, 0x180a1708, 0x291a1718,
	0x290a2608, 0x461a2618, 0x400f480d, 0x580d5635, 0x130e680f, 0x25761f79, 0x31762b79, 0x2f512504, 0x02034f03, 0x511f0303, 0x030f0209, 0x512b080e,
	0x19401920, 0x31191902, 0x4f0a1351, 0x020e400c, 0x2a2e0e0c, 0x16011600, 0x0c2a2816, 0x100f060e, 0x10021040, 0x000f2a1c, 0x22000001, 0x2f06102a,
	0x2f33ed33, 0x5d2fed5d, 0x85393912, 0x432f2009, 0x5d2405b0, 0x3f3f3fed, 0x5d341184, 0x5d013031, 0x23061401, 0x34352622, 0x16323336, 0x09230125,
	0x012b0f8b, 0x22232634, 0x16141506, 0x8b363233, 0x7403320b, 0xbab6b2bd, 0xbab5b2be, 0xf4fcb302, 0x020c03a5, 0x830c8385, 0xbbfa2b14, 0x58666459,
	0x59646658, 0x09889304, 0xdae0342e, 0xdae0dfda, 0x2ffac0dc, 0xccfbd105, 0xdd200982, 0x012a1182, 0x8888acb8, 0x8787adad, 0x088617fe, 0x0300c808,
	0xe1ff7300, 0xf0051306, 0x18000b00, 0xe1004500, 0x0f096f40, 0x0c3c0f19, 0x1d301530, 0x3d3e2d35, 0x1d471a4f, 0x1c79444f, 0x60256a0b, 0x76057b3f,
	0x760f7b08, 0x70257a1d, 0x093f703e, 0x2a060805, 0x08143706, 0x2a141d16, 0x3f153714, 0x1d2a0c29, 0x08303726, 0x08400a30, 0x0c490a40, 0x1c4f1441,
	0x20461d43, 0x2d41214c, 0x08513c41, 0x255b0d59, 0x08660569, 0x1d600f6b, 0x160c3f1e, 0x1923201d, 0xc0ffb803, 0x17123b40, 0x19aa0337, 0x3e092c0d,
	0x02352305, 0x0a233f16, 0x0d2c081e, 0x002f033e, 0x14063814, 0x450c3f2f, 0x2f1d2013, 0x261a0438, 0x1e011e00, 0x0d14451e, 0x1a1a011a, 0x73261513,
	0xedf61046, 0x835d2f33, 0x12112b03, 0x12113917, 0xed2f3939, 0x0a82ed2f, 0x3f3f0024, 0x07823fed, 0x2f2bed22, 0x02821482, 0x5d303125, 0x415d015d,
	0x17280856, 0x01133636, 0x06070606, 0x34076f41, 0x07061415, 0x06272301, 0x24222306, 0x37363435, 0x26373636, 0x22088526, 0x83163233, 0x202d821d,
	0x08158201, 0x352636a4, 0x58711803, 0x834f745c, 0xfec26562, 0x1f3e1f22, 0x9dab241c, 0x6b01b75d, 0x7a013c32, 0xf073e5f6, 0xedfed07f, 0x68232334,
	0x35616e35, 0x61a13235, 0x1d18d6ad, 0x015e7620, 0x010e0e73, 0xa7040102, 0x597b6d5f, 0x234f744b, 0x0100fd87, 0x2a310fd2, 0x92456e27, 0xae025bb3,
	0x6df06060, 0x8ee090fe, 0x5cc5f371, 0x532f3186, 0x6f92481f, 0x30327943, 0x2c86af3c, 0x5a312c6f, 0x2896fe20, 0x8a383460, 0x00010030, 0x01d103a4,
	0x00140682, 0x40150003, 0x0302020a, 0x01050f01, 0x2f032c00, 0x3f005ded, 0xd6452f33, 0x82012405, 0x452b882b, 0x318205ce, 0x64feb524, 0x31820f03,
	0x00153108, 0x09434056, 0x19070901, 0x28071901, 0x4f052803, 0x48034801, 0x5f074f05, 0x6f075f01, 0x7f076f01, 0x78027801, 0x12077f06, 0x0c010107,
	0x0801047a, 0x002a6f83, 0x0d0c0c0f, 0x0c0f5502, 0x05820909, 0x88041f2c, 0xedf41016, 0x2f332b2b, 0x71823c5d, 0x70823f20, 0x015d2f08, 0x11022623,
	0x33371210, 0x07060615, 0x14150206, 0x16161712, 0xe50f0317, 0xb1c4c4b1, 0x3f9351e5, 0x3e494b3c, 0xfe4d9a3c, 0xe001cb64, 0x01822d01, 0x0acbe031,
	0x7b7fbf49, 0xaba4d8fe, 0x7b80e4fe, 0x820045c7, 0xfe9324a7, 0x84ed0264, 0x6a3f08a7, 0x03063940, 0x03151306, 0x01261315, 0x13260326, 0x01471526,
	0x13400340, 0x03501547, 0x03601350, 0x00791360, 0x03700276, 0x14761370, 0x04011215, 0x0100750c, 0x01043f12, 0xb80b0404, 0x83b4f4ff, 0x210883b0,
	0xb4830f40, 0x001f0b2d, 0x020f0f0c, 0x17920055, 0x8f2bf610, 0x021036bb, 0x36352307, 0x12363736, 0x27023435, 0x35272626, 0x02121633, 0x29b882ed,
	0x3e3b9b4d, 0x3f3d4a49, 0xc8825193, 0xfe3c0239, 0xcb20fed3, 0x7bc7450a, 0xab1c0180, 0x7b2801a4, 0x0a49bf7f, 0x8220fecb, 0x02a724b9, 0x82710476,
	0x001132b9, 0x4f094090, 0x40110113, 0x08371009, 0x40c0ffb8, 0x08088258, 0x5b025b2e, 0x540b5405, 0x6b026b0e, 0x640b6405, 0x7b027b0e, 0x730b7305,
	0x06010c0e, 0x0e0b0a0f, 0x02051108, 0x4f060c06, 0x02045004, 0x0c0f0a04, 0x2208cd82, 0x1f130f01, 0x11000213, 0x0110400d, 0x0c070810, 0x0901094f,
	0x03020e10, 0x060b0504, 0x7009280d, 0x450c010c, 0x392b0ad8, 0x39125d2f, 0x3f005d39, 0x82335d33, 0x124f0816, 0x332f3917, 0x3031332f, 0x2b2b015d,
	0x2507015d, 0x05132313, 0x37012d27, 0x03330305, 0x04051725, 0x96fe4071, 0xfe058106, 0x7d014197, 0x014183fe, 0x0781066a, 0xfe406b01, 0x6e770384,
	0x0198fed5, 0xcf6ed668, 0x01d56ecf, 0xd499fe67, 0x8200cd6e, 0xd23408df, 0xba051b00, 0x0b00fd04, 0x23403900, 0x0401ac03, 0x0aac0854, 0x0701070f,
	0x30010d40, 0x020d400d, 0x800aab00, 0x2a010101, 0x4007ab05, 0x2f040104, 0xfde43c5d, 0x5d220382, 0x0a84005d, 0x31e43c3d, 0x11210130, 0x35211123,
	0x11331121, 0xfdba0521, 0xdffda6df, 0x02a62102, 0x833c0221, 0x02a02408, 0x82dffd21, 0x93320869, 0x3f028efe, 0x03001d01, 0x26403500, 0x012a011a,
	0x0035022b, 0x00450239, 0x00550248, 0x00640259, 0x03c50074, 0x0302020c, 0x00000456, 0x021a0204, 0xf2820202, 0x10002f25, 0x822f32f4, 0x095d3163,
	0x02132301, 0x92e6fe3f, 0xfd1d01ae, 0x008f0271, 0x99265382, 0x09033102, 0x5382e602, 0x1440203e, 0x020f4201, 0x050f0201, 0x054f004f, 0x055f005f,
	0x02000005, 0x5d2f332f, 0xed5d2f00, 0xa0824082, 0xfd090328, 0x02700290, 0x3b83b531, 0x0482fd20, 0x8f84ec20, 0x02b6203d, 0x00080156, 0xffb8012d,
	0x0f0a40e8, 0x2f55020f, 0x02013f01, 0x2b5d2f01, 0x823f00ed, 0x2321273b, 0xec013311, 0x2d82efef, 0xe2ff0128, 0x5c03d0fe, 0x73821406, 0x2540363f,
	0x05000103, 0x25011601, 0x49003801, 0x56014400, 0x77016701, 0x0a018601, 0x03021201, 0x828d822f, 0x238484a3, 0x5d2f3f00, 0x87248382, 0xc0875ded,
	0x012dc882, 0x33fd5c03, 0x06ca02ad, 0x07bcf814, 0x08a78244, 0xff890040, 0x058f04e1, 0x000b00ef, 0x40870023, 0x39013622, 0x3b0c340b, 0x34183b12,
	0x4901451e, 0x4b0c440b, 0x44184b12, 0x49150c1e, 0x49210209, 0xb80f0a03, 0x0cb6f4ff, 0x0f55020c, 0xffb80021, 0xb583b4f0, 0xf4280882, 0x0b0b1b40,
	0x18005502, 0x00291a83, 0x250f259e, 0x1b02251f, 0x220d830c, 0x8206211b, 0x13402128, 0x06272983, 0x02090910, 0x830c0655, 0x98062a2b, 0x2bf61024,
	0x2bed2b2b, 0x8207865d, 0x37f583f3, 0x0210015d, 0x11022021, 0x20211210, 0x36360112, 0x27263435, 0x22232626, 0x08066145, 0x16161777, 0x04363233,
	0xf8fefb8f, 0xfaf7f4fe, 0x0c010901, 0x23f9fef7, 0x23241919, 0x7b5e5f79, 0x16192224, 0x64792124, 0xe9027c5e, 0x89fe6ffe, 0x8a017c01, 0x7b018d01,
	0xb5fc7ffe, 0x989adb51, 0x4e4d4ee0, 0xee4a4f4e, 0x53d29c8e, 0x004e524e, 0x16010100, 0x3c040000, 0x0f00d605, 0x35408800, 0x06064605, 0x030e030c,
	0x0f080148, 0x02111f11, 0x0f1f0205, 0x0c0f0f01, 0x3bcc840e, 0x0c0c0d0e, 0x200e5506, 0x6f033f02, 0x03037003, 0x10100c03, 0xb8035502, 0x0b40e0ff,
	0x0321e083, 0x82e08316, 0x40f4220f, 0x23e4831d, 0x0c0c1e03, 0x06221f82, 0x05820d0d, 0x0d0d1026, 0x10035506, 0x03214183, 0x84f9822f, 0x5d450802,
	0x2b2bed33, 0x5d2f3239, 0x005d332f, 0x3f32fd3f, 0x31ed2f33, 0x35212130, 0x35211121, 0x36373632, 0x11333736, 0xfc3c0421, 0xfe3601da, 0x25903fca,
	0x9b04352e, 0x03983001, 0x141588e6, 0xfa414d19, 0x000100c2, 0x08c182a1, 0xf0059158, 0xe1002000, 0x1f505140, 0x05021f60, 0x16110603, 0x24111503,
	0x38053b11, 0x3f0e350d, 0x391e3f1d, 0x48054b1f, 0x4f0e450d, 0x491e4f1d, 0x5d035f1f, 0x5b055d04, 0x5f115609, 0x5d1b5e19, 0x5f1d5f1c, 0x64036a1e,
	0x62116506, 0x701e6f15, 0x7f117402, 0x7f1c7f1a, 0xcd82251e, 0x83b4e821, 0xb80225b4, 0x3f40e8ff, 0x002e0983, 0x2d0f100f, 0x301c2f08, 0x060f400f,
	0xe383400f, 0xdd820582, 0x0b0f0f38, 0x0202134a, 0x08014a1f, 0x2108021f, 0x0f0f0c16, 0x0c165502, 0x05820909, 0x0b0b0422, 0xb8240582, 0x1940f4ff,
	0x16213083, 0x33498316, 0x9e201616, 0x1f220f22, 0x10100222, 0x10219902, 0x5d2f32f6, 0x2b200483, 0xed2f0083, 0x3f003912, 0xed3f32fd, 0x2b2b2f33,
	0x8230315d, 0x5d013704, 0x36352121, 0x36363736, 0x23263435, 0x23070622, 0x33363635, 0x55470432, 0x06a60806, 0x04210706, 0x6910fc91, 0x8ec05bd3,
	0xd45b8999, 0xed470a65, 0x0401e56f, 0x69272a2b, 0x63e46b4b, 0x5ad12103, 0xdbba59b4, 0x4083747f, 0x3a23d242, 0x9355bddd, 0x49783e42, 0x0054c569,
	0xffa70001, 0x057c04e1, 0x003d00f0, 0x0b8e40b8, 0x1a2f050b, 0x292f150b, 0x292f260b, 0x350b3c3c, 0x34223114, 0x450b4a2f, 0x43224314, 0x5901562f,
	0x550b5905, 0x660b6a2f, 0x783c6a2f, 0x742f760b, 0x1a3c7b35, 0x3a443a34, 0x1e3a3b02, 0x2d011f49, 0x2d022d11, 0x1f4a292d, 0x0f023109, 0x020d1f0d,
	0x4a110d0d, 0x21230a09, 0xff830c37, 0x0d043739, 0x3755020d, 0x060c0c06, 0x2e1e3755, 0x2e032116, 0x04373a1e, 0x831a030c, 0x8203201d, 0x06280823,
	0x3fa00355, 0x3f1f3f0f, 0x3e9a0c02, 0x105de610, 0x112b2be6, 0xed103917, 0x2b2f2f2f, 0x00ed2b2b, 0x2f33ed3f, 0x39123f5d, 0x2f290683, 0x5d3939fd,
	0x015d3031, 0x06614816, 0x26222329, 0x16333527, 0x41323316, 0x2725062d, 0x23232626, 0x430e8235, 0x3c410950, 0x17162105, 0x9e083385, 0x04161615,
	0x4a3e300e, 0x79cb4b43, 0x0f4df07c, 0x3f6be655, 0x2d2e2c8e, 0x802d2d33, 0x98465a4a, 0x2b292eb5, 0xd65f3e62, 0xed470a5f, 0x43a66d6f, 0x77af4a48,
	0xcd027c30, 0x6667822b, 0x43463faa, 0x38d1233b, 0x2c292a4a, 0x6950516a, 0xa6171f1e, 0x51367a7f, 0x44141a1a, 0x3b23d13e, 0x88302c28, 0x18b97c5b,
	0x0033080e, 0x004d0002, 0x05b30400, 0x000a00d1, 0x40e0000d, 0x140d0421, 0x340d240d, 0x700d440d, 0x180c060d, 0x55060c0c, 0x06480d0c, 0x060c0706,
	0x490d0907, 0xffb80501, 0x831940c0, 0x05053c16, 0x03030703, 0x4f0a3f08, 0x0f0a020a, 0x020f1f0f, 0xb8040c07, 0x0cb4f4ff, 0x8255020c, 0x40f32208,
	0x3426830e, 0x090a2004, 0x064f060d, 0xffb80101, 0x0b0b40e4, 0x0155020b, 0x8222830a, 0x05264f0f, 0xee220882, 0x2b833240, 0x0f010132, 0x3f061f06,
	0x26060306, 0x55021010, 0x0f0f0206, 0x18210582, 0x09a84409, 0x39830c20, 0x96840620, 0xb7430620, 0x335d2106, 0xa2080884, 0x3339125d, 0x2b2bed33,
	0x2f5d3939, 0x3f3f005d, 0x2b2f3912, 0x1232fd3c, 0x30313939, 0xfd108701, 0x012bc004, 0x1123015d, 0x35211123, 0x33113301, 0x04011121, 0xfdc0ddb3,
	0xb8d10237, 0xfd63fedd, 0xfea301bf, 0xe6a3015d, 0x72fc4803, 0x60fda002, 0x00010000, 0x04e1ffbb, 0x00d10585, 0x4097002a, 0x1a080a3d, 0x3d082b08,
	0x3d113508, 0x44084b16, 0x54085a11, 0x7a086a29, 0x1d1d0c08, 0x250f491a, 0x2540251f, 0x4a212503, 0x021e0625, 0x0a1f0a0f, 0x0e0a0a02, 0x200a064a,
	0x1d4f2022, 0xffb81d01, 0x832e40ec, 0x161d21fb, 0x1d27c183, 0x020d0d0e, 0x83101d55, 0x141d27f4, 0x1d200021, 0x18840009, 0x2c9f002a, 0x2c1f2c0f,
	0x2b9b0902, 0x24056542, 0x10393911, 0x21e085ed, 0x65422fed, 0x5d2f2d09, 0x312f32fd, 0x14015d30, 0x06060706, 0x08145f42, 0x070622a6, 0x21152111,
	0x33363611, 0x16171632, 0x4c850416, 0x83c74842, 0x0e4ee27a, 0x476adc52, 0x2d2c3485, 0x95342f35, 0x3ba3585c, 0x41fd8003, 0x79215a2b, 0x58504cb6,
	0xbe68d901, 0x334b4641, 0x4934d324, 0x782b3228, 0x206a4d4f, 0x0c181f26, 0xfeafff02, 0x29040474, 0x00ae3734, 0xff890002, 0x05a704e1, 0x002200ed,
	0x40950037, 0x160d0638, 0x3325390d, 0x49373331, 0x43314225, 0x56015f37, 0x5020500d, 0x75216521, 0x031a0e31, 0x131d4929, 0x1d4a1713, 0x35020f03,
	0x1a0a0349, 0x23122f2c, 0x09120021, 0xeeffb800, 0x2809b646, 0x020b0b0b, 0x0c0c0055, 0x2605820c, 0x40ecffb8, 0x820d0d0f, 0x399c3c09, 0x391f390f,
	0x09212f02, 0xb6f4ffb8, 0x55020f0f, 0x10389809, 0x5ded2bf6, 0x822be610, 0x11320800, 0x2fed1039, 0x00393912, 0x123fed3f, 0x2f32fd39, 0x3912ed2f,
	0x015d3031, 0x22230014, 0x02262726, 0x37123435, 0x32332436, 0x23151716, 0x22232626, 0x11410700, 0x46072007, 0xa00814cd, 0xd9d5fea7, 0x5645b46e,
	0x585d555d, 0x3bb91601, 0x1c0a2950, 0xffd73b71, 0xa3541500, 0x4c915f6b, 0x37cb5958, 0x3d702e3f, 0x024d9255, 0x2e394102, 0xa6913f6b, 0xfee3e301,
	0x534344e1, 0xc6c11201, 0x71773201, 0xbf0d0a7f, 0xf3fe1b0f, 0x233533e5, 0x8dba3d35, 0x202d7a5d, 0x162a2814, 0xb79e1f29, 0xb1292c35, 0x9a000100,
	0x95040000, 0x0600d105, 0x32404f00, 0x020a0109, 0x01480124, 0x0258024b, 0x03070379, 0x20010001, 0x00030202, 0x4a030200, 0x08020305, 0x081f080f,
	0x0303027b, 0x04020200, 0x273c820f, 0x332f0400, 0x39125d2f, 0x4808f882, 0x3f3f005d, 0x2f3911fd, 0x87013031, 0xc087ed10, 0x01015d01, 0x35210123,
	0xfd950421, 0xcd02d65e, 0xfb03b0fc, 0x0efbf204, 0x00af2205, 0xff7a0003, 0x059c04de, 0x001900f3, 0x01370028, 0x2600b908, 0x0db4f4ff, 0x2555020f,
	0x200886b8, 0x20088724, 0x20088723, 0x21088222, 0x24837640, 0x2b2d6008, 0x22331534, 0x33342734, 0x22411544, 0x33452744, 0x195b1550, 0x1f5a1b5a,
	0x2b5f2254, 0x315f2c59, 0x37543354, 0x0e620860, 0x19621262, 0x27602360, 0x12760e76, 0x12862c7b, 0xa902061d, 0x022fa626, 0x2f0a1626, 0x471d0304,
	0x48350210, 0x201a0a03, 0x13011300, 0x0a2f0013, 0x0021290d, 0x43202616, 0x9d200604, 0x2205f341, 0x830d2120, 0x0f0b217a, 0x0d369f82, 0x0621320d,
	0xf6103897, 0x2b2f33ed, 0xe4105ded, 0x3939112b, 0x0482ed10, 0x33113108, 0x00ed712f, 0xed3fed3f, 0x5d391712, 0x40585443, 0x892c591e, 0x2c29022c,
	0x2f350332, 0x23362f29, 0x23562345, 0x26992364, 0x23201a06, 0x111d2603, 0x04842783, 0x30315922, 0x22058953, 0x4e001401, 0x35250620, 0x34352626,
	0x06c54624, 0x16161524, 0xbd4f3403, 0x16172c06, 0x36361716, 0x27263413, 0x4e272626, 0x9c08075f, 0xd3fe9c04, 0xe1fef2e4, 0x73788390, 0xdfd51401,
	0x7a7e0a01, 0xa5ed948c, 0x51a17e80, 0x428b2552, 0x511f4c63, 0x5d702f76, 0x8fba6d5a, 0x9f01af92, 0xfa00ffc1, 0x3bc97cc3, 0x72984006, 0xa5d6e0a8,
	0x0637c365, 0x4f02b03c, 0x66787f6b, 0x12296948, 0x8e42133a, 0x6f5c73fd, 0x22261638, 0x876aa831, 0x020096b0, 0xe3ff7100, 0xef058f04, 0x37002200,
	0x39408400, 0x04190408, 0x253c0429, 0x2e352b3c, 0x2b4c254c, 0x04582e43, 0x185d175f, 0x01701b52, 0x110f257b, 0x1449321d, 0x06144929, 0x0681441d,
	0x09113535, 0x09002123, 0xffb8001a, 0x0f2340f4, 0x0055020f, 0x820c0c10, 0x419e2005, 0x2c290565, 0x09101a21, 0x1a550209, 0x25158304, 0x1038961a,
	0x5d432bf6, 0x39112f06, 0x392fed10, 0xfd3f0039, 0x123f2f32, 0x5a43ed39, 0x07022308, 0x74440406, 0x37122109, 0x2a058244, 0x34352626, 0x16323300,
	0x43121617, 0x1521085a, 0x460e8214, 0x830806f8, 0x5a598f04, 0xb9eefe5b, 0x0a245c34, 0xdd416a1d, 0xa45d14fb, 0x4b955c61, 0x2c015958, 0x45b86cd8,
	0x40ca5c55, 0x3f6c2f38, 0x4036a790, 0x4e426c2d, 0x030146a0, 0xfec34203, 0x7c7270c2, 0x0fbf0c0b, 0xe909011b, 0x34243038, 0xe483bc3d, 0x43431e01,
	0xa4fbfe53, 0x2d34bc9b, 0x5fa3b427, 0x151f2d78, 0x2915282a, 0x5a010200, 0x49020000, 0x03005d04, 0x25000700, 0x56011640, 0x56060502, 0x00070805,
	0x0001062d, 0x0035e983, 0x2f010101, 0xfd3c2b5d, 0xed3f003c, 0x3031ed3f, 0x33112301, 0x22038211, 0x82ef4902, 0x40032700, 0xa3fb1d01, 0x46821d01,
	0xfee60025, 0x8692028e, 0x4c21084b, 0x050a3740, 0x051a060a, 0x052a061a, 0x0435062b, 0x04450639, 0x04550648, 0x04640659, 0x07c50474, 0x2e6a840f,
	0x08560706, 0x043f0606, 0x0402044f, 0x852d0004, 0x32fd216c, 0x8408c84c, 0x835d2070, 0x01132372, 0x72831323, 0xe6fe4924, 0x7583ae92, 0x4cc0fc21,
	0xfe3a07d5, 0x80054d00, 0x0600cb04, 0x73b45f00, 0x002c0105, 0x40e2ffb8, 0x37180a26, 0x04831e03, 0x2f001f3b, 0x0f030200, 0x40000100, 0x08300108,
	0x04020840, 0x00000105, 0x01500140, 0x27da8202, 0x39122f33, 0x005d5d39, 0x5d327382, 0x312b2b2f, 0x58534b30, 0x04050b40, 0x03020354, 0x35825406,
	0xfd108722, 0x44080282, 0x0159c005, 0x3501255d, 0x01011501, 0x7efb8005, 0x72fc8204, 0x024d8e03, 0x01027c01, 0xfe75feb4, 0x02000075, 0x6a01f500,
	0xae039705, 0x07000300, 0x20403500, 0x01065405, 0x020f0654, 0x09400201, 0x40093001, 0x22798309, 0x8240002f, 0x207e8229, 0x207c8401, 0x217d885d,
	0x764d2fed, 0x21112906, 0x97052135, 0xa2045efb, 0x032a0383, 0xbcfda00e, 0x010000a0, 0xe7820c01, 0xe7848e20, 0x7cb46126, 0x012c0103, 0x2820e783,
	0x0520e282, 0x052ae783, 0x012f011f, 0x010f0502, 0xe7870101, 0x82050321, 0x012f26e7, 0x01400130, 0x2ae99803, 0x05540403, 0x54020605, 0x8a000101,
	0x820120e9, 0x350282e9, 0x7efb8e05, 0x72fc8e03, 0x4e028204, 0x01b4fffd, 0xb48b018b, 0xbf82fffd, 0x45089082, 0xef05ed03, 0x20001c00, 0x47406900,
	0x221f220f, 0x35031424, 0x4f024f18, 0x44054f03, 0x54055c18, 0x69046918, 0x74186410, 0x0c1c7418, 0x01097008, 0x1e1a0609, 0x34121616, 0x1f08021a,
	0x20081e55, 0x061f1f2b, 0x17827f1f, 0x09150f25, 0x82002017, 0x451720aa, 0xed3805a8, 0x33ed5d2f, 0x3f00ed2f, 0xfd3f33ed, 0x12112f32, 0x2f5d3939,
	0x015d3031, 0x2306c147, 0x11231507, 0x08114a4b, 0x2301163c, 0xed033335, 0x92383946, 0x9741b352, 0x99403a30, 0x38c16c79, 0x60d7460a, 0x75fef9d7,
	0x7304cccc, 0x393b9962, 0x01e12f64, 0x2d582531, 0x71566f34, 0xcc23446f, 0xfad12b1b, 0xd182d3e2, 0xffb0ca08, 0x054e071e, 0x004200ef, 0x40d6004f,
	0x0f0206a2, 0x0a050b04, 0x0e1b0f09, 0x0f3f0f1c, 0x1f021640, 0x1f051c04, 0x141c1f1b, 0x1f271422, 0x25411f3f, 0x2c042c02, 0x2f1b2f05, 0x2022241c,
	0x2f3f2f27, 0x44404741, 0x1d485648, 0x2705050a, 0x096e4959, 0x1a690d65, 0x27652168, 0x41663f66, 0x1b7b1674, 0x39742770, 0x120f3b74, 0x12081105,
	0x140e5247, 0x371b1540, 0x4d040414, 0x2d2d0853, 0x080e512a, 0x511e313d, 0x0f023d31, 0x052d012d, 0x2d124311, 0x3f124a14, 0x0f0b010b, 0x02512051,
	0x0b142918, 0x20000f37, 0x03007f00, 0x29240000, 0x10506b37, 0x2f33edf6, 0x3939125d, 0x5d2f5ded, 0xfd332fed, 0x5d2f3232, 0xed333f00, 0x0580552f,
	0x1e822f20, 0x822bcd21, 0x410e8205, 0x023e073e, 0x06272107, 0x26222306, 0x33123435, 0x35171632, 0x36331133, 0x02343536, 0x23242627, 0xb2520422,
	0x33042507, 0x15373632, 0x24202883, 0x260a1448, 0x12161704, 0x55261101, 0xb10809a1, 0x4b514e07, 0x4a1b48fe, 0xc9a85888, 0x7049abf6, 0x2af39f41,
	0x58585b2b, 0xa0a5fcfe, 0x605ff7fe, 0x635f686d, 0x569d0a01, 0xa86154b7, 0xc2feba59, 0x86807372, 0x3e017474, 0x3401c4b5, 0xfd716a6a, 0x39643f8f,
	0x7b749281, 0x97028643, 0x6bfcfe8b, 0xfe403c74, 0x0e01e3e4, 0xfc302121, 0x59e14bb6, 0x600c01a4, 0x62746760, 0x9aeffe62, 0x61effea5, 0x18166765,
	0x7f0f158e, 0x42017372, 0x3f01b9c3, 0x7c867575, 0xc5fe7070, 0x060240fe, 0xa6b4191d, 0x003ea7a3, 0x1a000200, 0x5e050000, 0x0700d105, 0xc4000a00,
	0x010940b3, 0xf8ffb805, 0x060c0cb4, 0x08870655, 0xffb80725, 0x837640f4, 0x064a2e12, 0x09020745, 0x02080a09, 0x01010187, 0x08348214, 0x030a0944,
	0x04010487, 0x06050514, 0x0773067c, 0x0a340302, 0x02101040, 0x0d400a55, 0x3055020d, 0x700a400a, 0x090a030a, 0x0103060a, 0x0501057a, 0x010c0f08,
	0x03090706, 0x24000c05, 0x42003900, 0x6a005a00, 0x47827400, 0x0c6e0022, 0x34081a82, 0x052b050a, 0x054d0536, 0x05650555, 0x0507057b, 0xe6100b64,
	0xf6105d5d, 0x17125d2f, 0x3f005d39, 0x393f3c5d, 0x2b5d2f39, 0x3031ed2b, 0x10875d01, 0xc0c05dfd, 0x220685c0, 0x8201c008, 0x2b2e0817, 0x23215d00,
	0x23032103, 0x01132101, 0xd35e0501, 0x927cfd92, 0x011e02c9, 0xfbfe7c08, 0x9f01fafe, 0xd10561fe, 0xdb0278fc, 0x030025fd, 0xfb82c800, 0xfb822b20,
	0x00153608, 0x01330024, 0x0512400d, 0x270c150c, 0x5602550c, 0x06197f15, 0x342c1112, 0xc0ffb81e, 0x0f0f1440, 0x1e1e5502, 0x08341d07, 0x07342d03,
	0x12151608, 0xffb80f2c, 0x05734cf4, 0x0c200f25, 0x8255020c, 0x40f2220f, 0x25f3831c, 0x0d0d260f, 0x15835506, 0x0f2d0582, 0x00152507, 0x0210100c,
	0xffb80055, 0x07914ae6, 0x83b4e821, 0x21118232, 0x3183b4f2, 0xe4200882, 0x06200882, 0xe8242383, 0x0c0c1640, 0x712b0982, 0x40350f35, 0x2c1e0235,
	0x830e0714, 0xb807283e, 0x0bb4fcff, 0x8255020b, 0x50da2008, 0x07230586, 0x84090908, 0x84ee200f, 0x2018824e, 0x824e84ea, 0x84f12008, 0x2008834e,
	0x254d83b6, 0x10346c07, 0x00862bf6, 0x5d32fd22, 0xed230c87, 0x842f3912, 0x39122115, 0x8206e748, 0x39ed230f, 0x78583139, 0x06072705, 0x11212306,
	0x3a4e3221, 0x3401270a, 0x26262726, 0x15822323, 0x36373622, 0x8406b448, 0x080e8324, 0x542b05c1, 0x9bc95447, 0xb901f0fd, 0x524aa2a3, 0x975a6c4a,
	0x24b3feae, 0x63862f28, 0x5d0001ec, 0x272f2f6e, 0x3047367f, 0xc9fe6289, 0xa6820601, 0x01343835, 0x37aa6fca, 0xd1053842, 0x872b2618, 0x2d956a5e,
	0x02cb1f08, 0x174a3604, 0x52fe0d1b, 0x5f1e1e13, 0x6a5a9afd, 0xfd0f1925, 0x27241bd6, 0x01000064, 0xe5ff7300, 0xec054605, 0x6f002a00, 0x01055640,
	0x1406090d, 0x091b0116, 0x15251514, 0x14431536, 0x0a58085b, 0x105b0e58, 0x0360285b, 0x02701461, 0x14700f76, 0x1a161613, 0x2a021234, 0x0634262a,
	0x7100160a, 0x012c0f2c, 0x2c1f2c0f, 0x2c3f2c2f, 0x20052c6f, 0x0b140c15, 0x0c55020b, 0x8209091c, 0x2b683005, 0x2b2bf610, 0x105d5ded, 0x3f003cf6,
	0x832f33ed, 0x30312503, 0x06255d01, 0x4305114d, 0xfa4b0be5, 0x0cb65207, 0x33377d08, 0x59374605, 0x568f3d48, 0x62f7fea2, 0x62686c60, 0xa40d015f,
	0x0f92ef78, 0x718af27b, 0x4d4547b5, 0xbb464355, 0x6dfa8f68, 0x2a186c0e, 0x5b1b1317, 0x25015f61, 0x2201b8c2, 0x3a666164, 0x5e67eb49, 0xe54b4d49,
	0x47e29d96, 0x6262474a, 0xc8000200, 0xb2050000, 0x0e00d105, 0xbc001d00, 0x12392340, 0x02691249, 0x16040d68, 0x17030834, 0x76080734, 0x150f0100,
	0x10100a00, 0x06005502, 0x0023ca83, 0x4ce2ffb8, 0xb42008fe, 0x1182d683, 0x42b4ea21, 0xf4330675, 0x0d0d1940, 0x74005506, 0x2f1f0f1f, 0x601f401f,
	0x4217041f, 0x1e204566, 0x20096642, 0x096542ed, 0x49005d21, 0x5d23060c, 0x42021401, 0x04200754, 0x0809cb49, 0x33112381, 0x36373632, 0xb1b20536,
	0xcdfb6693, 0x740188fe, 0x590101da, 0x7acfaa98, 0x8ac65879, 0xd58fbaba, 0x026f6f59, 0xb6fecbe7, 0x05383f5b, 0x5f373fd1, 0xafd6c4fe, 0x273245f0,
	0x392a83fb, 0x0000e847, 0x00c80001, 0x059d0400, 0x000b00d1, 0x3509b790, 0x06100600, 0xffb80602, 0x0f2440c0, 0x0655020f, 0x35050106, 0x350a0302,
	0x00040801, 0x00080108, 0x0d0f0d73, 0x14090601, 0x10100e01, 0x43015502, 0x0882075c, 0x23065c43, 0x09090801, 0x5c431884, 0x43188205, 0x0882055c,
	0x0db4e924, 0x3383060d, 0x0cb6e923, 0x2108820c, 0x5c430c6c, 0x5d3c210e, 0x2c05fe49, 0x2b2f3912, 0x3031ed71, 0x21112121, 0x29038615, 0x2bfc9d04,
	0xf1fcd503, 0x03830f03, 0xb0d10527, 0xfdb068fe, 0x20bf86d7, 0x23bf827f, 0xb29b0009, 0xba83ab82, 0xba831520, 0x07020235, 0x03083501, 0x03000807,
	0x03020b4f, 0xffb80003, 0x831a40d4, 0x64002881, 0x010b0f0b, 0x83010502, 0x41052085, 0xe02034c0, 0x0723ca84, 0x84ecffb8, 0x6c0722ca, 0x2cca8a0a,
	0x105d322b, 0x2f322bf4, 0x3f3f005d, 0x82cb83ed, 0x850120ca, 0x112334c6, 0xfd7f0421, 0xfd87020f, 0xb703c679, 0x5cfe2105, 0x8233fdb0, 0x08c782bc,
	0xe3ff735a, 0xec05a205, 0xca002400, 0x01073b40, 0x0e060609, 0x0e13061d, 0x0e350e21, 0x0e410149, 0x06650e51, 0x0e630b65, 0x1c740e74, 0x4035220f,
	0x23230123, 0x1010030c, 0x020c3417, 0x0a03341d, 0x22010976, 0x10092210, 0xfeffb821, 0x09091340, 0x6c215502, 0x10100400, 0x10005502, 0x2006d942,
	0x07d942f6, 0xd942e420, 0x84fa2010, 0xb80035cf, 0x2340fbff, 0x55060c0c, 0x0f267500, 0x02264026, 0x1209151a, 0x09213d83, 0x2851831c, 0x0d0d0c09,
	0x68095506, 0x42ec8425, 0x2b2309a8, 0x82332bed, 0x25f083e7, 0x33ed3fed, 0x0c82112f, 0xf4835d20, 0x06255d3b, 0x24222304, 0x35022627, 0x32210010,
	0x23151704, 0x26272626, 0x00222326, 0x08108311, 0x11373650, 0x05213521, 0xdffe7aa2, 0xdefeae87, 0x01706766, 0x7f6c01a1, 0x12990901, 0x4539761f,
	0xfefa6faf, 0x013001dd, 0x48bf6006, 0x530271fe, 0x6053386e, 0x23016160, 0x016501c3, 0xeb493d9d, 0x1f1a4e18, 0xfebffe29, 0xfedffeee, 0x011e26bf,
	0x0f42ae6d, 0x05260805, 0x00d1053b, 0xb2e2000b, 0xb8083503, 0x1640c0ff, 0x55020f0f, 0x08100800, 0x05080802, 0x0103070a, 0x02090805, 0x1a820d14,
	0x1982f682, 0xfaffb824, 0x6a4610b4, 0xb4f42105, 0x20062c41, 0x052b46e6, 0x44080021, 0x40230704, 0x820d0d24, 0x0c12222b, 0x2805820c, 0x060d0d0f,
	0x0c130055, 0x2f05820c, 0x0d0f0d78, 0x0d500d40, 0x14030803, 0xd2ffb805, 0x08824a84, 0x82057646, 0x06194308, 0x09227482, 0x0f825502, 0x82051043,
	0x05224308, 0x4f830884, 0xb6200883, 0x05205283, 0x6c101943, 0xfd36085f, 0x3c3f0032, 0x39123c3f, 0xed2b712f, 0x23213031, 0x23112111, 0x05823311,
	0x05333a08, 0x19fdc63b, 0xe702c6c6, 0xfdd902c6, 0xfdd10527, 0x004802b8, 0x00890001, 0x05d50200, 0x000b00d1, 0x09234065, 0x03063204, 0x0132030a,
	0x0a6d0d08, 0x0a5a0b08, 0x02050314, 0x06a7575a, 0x0b0b0c2b, 0xb8035502, 0x0fb4deff, 0x4208840f, 0x11820527, 0x83b4fe21, 0x230882f5, 0x0d0db6ee,
	0x6d201a82, 0x2308b943, 0xfd1032f4, 0xe6240382, 0x32fd3f00, 0x312b0282, 0x21210130, 0x23113335, 0x82152135, 0xd5023096, 0xc3c3b4fd, 0xc3c34c02,
	0x98a10498, 0x825ffb98, 0xff2c248f, 0x82ea02eb, 0x00153c8f, 0x6a144071, 0x02017c01, 0x03153312, 0x340b0707, 0x13130903, 0xb8001412, 0x41b4e2ff,
	0xfa20068d, 0x11828984, 0xb142ee20, 0x05324107, 0xda221182, 0x8f411940, 0x0d0d2705, 0x02005506, 0x05820c0c, 0x0f177729, 0x65060117, 0x45e61016,
	0x2b230843, 0x4f2f33ed, 0xed25052c, 0x015d3031, 0x0f985314, 0x21112808, 0xea022135, 0xa030c9ef, 0x78290b36, 0x1a6d5c3f, 0xc5fe0f1b, 0x83010102,
	0x0c11d4c4, 0x2a1e0eb9, 0x4c742827, 0x829e6503, 0x00cd24b9, 0x82750500, 0x0b5508b9, 0x7f40f900, 0x01560919, 0x0503095c, 0x38092809, 0x68094a09,
	0xd8098a09, 0x010f0709, 0x011e090a, 0x012a0219, 0x0139092b, 0x0b350939, 0x09490149, 0x015c0b45, 0x00720b65, 0x02100879, 0x01880302, 0x010201c8,
	0x000b00b3, 0x02b30908, 0x0a030a0b, 0x08010a84, 0x06984202, 0x03020b2e, 0x0d0f0a0a, 0x00300020, 0x50040040, 0x6e2f7682, 0x010d400d, 0x09080308,
	0x03550209, 0x640e0514, 0x5e4206d9, 0x08554218, 0x21086742, 0x5e42b4f2, 0x42f22006, 0x2b27125e, 0xf6105d32, 0x53325d5d, 0x3c2205b1, 0x9f553c3f,
	0x5d3d0805, 0xc0c01087, 0x0418fd7a, 0x108701c0, 0x185dfd7a, 0x5d01c008, 0x21217271, 0x23110701, 0x01113311, 0x75050133, 0xb3fdfffe, 0x02c6c694,
	0x67fdf0d3, 0xfe9e9702, 0xfcd10507, 0xfd0903f7, 0x05874344, 0x05760433, 0x000500d1, 0x0302b675, 0x08013504, 0xe8ffb800, 0x05334340, 0x0f070025,
	0x46040107, 0xea203d45, 0x0122cc84, 0x7a45066c, 0x5ded2d09, 0x2b2f3311, 0x3fed3f00, 0x21213031, 0x212ba582, 0x52fc7604, 0x05e802c6, 0x85dffad1,
	0xf6052193, 0x3f089382, 0x4049010c, 0x010a565b, 0x05380238, 0x026f0a36, 0x056f0360, 0x027f0a60, 0x057f0370, 0x550b0a70, 0x5a0a5609, 0x0364030b,
	0x09750374, 0x020a0503, 0x02060903, 0x40040200, 0x55021010, 0x09094004, 0x0d2b0583, 0x0055020d, 0x44041004, 0x82045404, 0x0b073900, 0x07010309,
	0x0b0a0908, 0xb8020503, 0x0d40faff, 0x55020f0f, 0x1e001402, 0x2406cb42, 0x0b4d40f4, 0x2032820b, 0x2117830c, 0x44831000, 0x0c0a0023, 0x2011820c,
	0x284a841a, 0x060d0d18, 0x0c0c0055, 0x2a05820c, 0x0e0f0e78, 0x0e500e1f, 0x830c0503, 0x82052027, 0x55022315, 0x1b830405, 0x07130523, 0x31d74a10,
	0x83b4ea21, 0xb807245d, 0x4ab6eeff, 0x0d2005d7, 0x210a3441, 0x645c2b2b, 0x26088206, 0x2bed2b2b, 0x44391711, 0x5d200764, 0x432a1282, 0x34b45854,
	0x02046a04, 0x0a82595d, 0x64b23d08, 0x595d0104, 0x31391712, 0x725d0130, 0x21725d00, 0x23011123, 0x11231101, 0x21010121, 0xfec6f605, 0x65fe7662,
	0x010e01b9, 0x0180018d, 0xfc030513, 0xfa690397, 0xfcd105fd, 0x003d03c3, 0x08068341, 0xd1053847, 0x2b010900, 0x070c4040, 0x0734071f, 0x07510745,
	0x07710761, 0x01067607, 0x0602010f, 0x0615011f, 0x06440634, 0x016b0653, 0x017f0660, 0x0c0b0670, 0x02060401, 0x0655015a, 0x01070202, 0x01030608,
	0x01060804, 0x21d08202, 0xcc4bb4f8, 0xb4f42506, 0x55020c0c, 0xfa201182, 0x1324e285, 0xf4ffb800, 0x2810d645, 0x0f4540e2, 0x0055020f, 0x20358308,
	0x05cc4500, 0x0d0d2622, 0x0c261182, 0x55060d0d, 0x7f410a00, 0x0f0b2605, 0x020b400b, 0x21258402, 0x58830c02, 0x83060221, 0x13022819, 0x10101004,
	0x48045502, 0x088207f8, 0x2006de45, 0x822c8404, 0x057f430f, 0xea210882, 0x825883b4, 0x057f4308, 0x7d410882, 0x48042005, 0xed200b2d, 0x200d7d41,
	0x210e82fd, 0x7f413911, 0x31392a07, 0x71720130, 0x5d005d5d, 0x06624121, 0x33114f08, 0xfdf53805, 0x3301b93e, 0x05b98402, 0x05ccfa34, 0x0440fbd1,
	0x000200c0, 0x05e1ff73, 0x00f005da, 0x00230017, 0x042240be, 0x0b060400, 0x17120b0c, 0x19061700, 0x5712190c, 0x53055701, 0x580b5f07, 0x5f11580d,
	0x10175313, 0xf0ffb815, 0xcc831840, 0xd2840920, 0x7909762d, 0x341b0215, 0x34210215, 0x82180a09, 0x83b620df, 0x151822f0, 0x82ea8703, 0xb4e62508,
	0x55020909, 0xe2230882, 0x840c0cb4, 0x40f02208, 0x2ee48334, 0x0f257303, 0x250f0125, 0x253f251f, 0x83041e03, 0x151e2939, 0x0b0b120f, 0x160f5502,
	0x0f213383, 0x20308306, 0x2119840f, 0xdb5e680f, 0xed2b2305, 0xa8455d2b, 0x2bed2906, 0x3fed3f00, 0x2b2b5ded, 0x5d24f182, 0x15121601, 0x4805f04a,
	0x2e58053b, 0x10132207, 0x05394800, 0x32335008, 0x5b1e0500, 0x5c596361, 0xfe9da1fb, 0x615a5aff, 0x01585c60, 0xffa09a05, 0xe1fcfe47, 0x01fdfee3,
	0x01dede08, 0x64260507, 0xb8b8defe, 0x6561ddfe, 0x63636866, 0xb6b92001, 0x62672101, 0x61fd6968, 0x3b012201, 0xdefec5fe, 0xc9fedbfe, 0x4c003701,
	0x3108052b, 0xd1059604, 0x1f001000, 0x3040dc00, 0x1d3d143a, 0x1d4b144b, 0x0f540e50, 0x19070f65, 0x10070034, 0x07070207, 0x0a341809, 0x0f080903,
	0x02211f21, 0xa6451511, 0x00702505, 0xffb80004, 0x22083a48, 0x830b40f8, 0x083759f2, 0x0db4f025, 0x8255020d, 0x82e82021, 0x83062008, 0x4eea2008,
	0x6f3006ac, 0x3f210f21, 0x07190221, 0x100e0914, 0x09550210, 0x82076b41, 0x06564208, 0x83080921, 0x420f824b, 0x08820556, 0x82055642, 0x824e8508,
	0xb6e52808, 0x55060c0c, 0x4b206c09, 0xf4210d4f, 0x2100842b, 0x884aed5d, 0x05934907, 0x2206a05a, 0x4e231123, 0x195606a2, 0x4c232006, 0x9308064d,
	0x3e459604, 0xc6a0d24d, 0x869401c6, 0x5d5548ba, 0x303736ce, 0xa7c45e7b, 0x2f2f9678, 0x630f0427, 0x4d4d3ea9, 0xd105d5fd, 0xaa39302d, 0x24724d87,
	0xadfd1b1f, 0x6a302f2b, 0x73000200, 0xf80577fe, 0x2500f005, 0xc5003100, 0x0c0b4740, 0x1804120b, 0x0c191d04, 0x18151219, 0x0b5c1d16, 0x11590d59,
	0x1753135c, 0x1d571957, 0x55102074, 0x751f651f, 0x042d741d, 0x35212525, 0x34290b03, 0x7609061e, 0x02157909, 0x342f0215, 0x131e0a09, 0x73330006,
	0xfcffb826, 0x2b05b85c, 0x001b1526, 0x031d0609, 0xffb81b0f, 0x82058a42, 0x058a4208, 0xf0340882, 0x0d0d2840, 0x731b5502, 0x01330f33, 0x331f330f,
	0x2c03333f, 0x420d8442, 0x3223067e, 0x4e2bf610, 0xe62005a9, 0x11340782, 0x10323917, 0x2fe62bed, 0x3f00ed2f, 0x125d3fed, 0x3fed3939, 0x2706cb5b,
	0x0606015d, 0x27262223, 0x270fa452, 0x12161716, 0x07021015, 0x2105405e, 0x98420333, 0x3cf8290b, 0xd3ae3d75, 0x152d1809, 0x2c0d9a42, 0xdf615b59,
	0x846404bc, 0x1b187129, 0x0ba642ec, 0x0f93fe27, 0x04b2bf0d, 0x0ca24203, 0xfe64612f, 0xeffeb8de, 0x724b8afe, 0x030a197e, 0x0eb0429f, 0x2005db4e,
	0x06af4298, 0x40fb3508, 0x1d010853, 0x3a012d01, 0x451d3901, 0x4814480f, 0x56015a1d, 0x6f14590f, 0x60026901, 0x7e0b650a, 0x110b7501, 0x00b30102,
	0x07100010, 0x4002341a, 0x55020d0d, 0x28080583, 0x02405506, 0x05020201, 0x03073418, 0x0f080501, 0x40211f21, 0x15110321, 0x0d010d0f, 0x40f8ffb8,
	0x0209091d, 0x0c1c0d55, 0x2805820c, 0x060d0d0c, 0x0c180d55, 0x2a05820c, 0x0020100d, 0xffb80001, 0x831640ea, 0x19002315, 0x17830903, 0x00140322,
	0x2133a048, 0x3c83b6f1, 0xc0420520, 0xfd32270a, 0x2b2f322b, 0x6751395d, 0xed5d2805, 0x3c3f005d, 0x5212ed3f, 0x123005c3, 0x01303139, 0xfd7a1087,
	0x5d01c018, 0x21012121, 0x2308ca42, 0x07061415, 0x2005105a, 0x081c4f23, 0xfe983908, 0xfe0efeff, 0xa101c6e9, 0x5148b487, 0x618ea25b, 0x762b342d,
	0x5ec8e950, 0x2b2d318c, 0xb0fd5002, 0x2d23d105, 0xa1779b33, 0xa30137d9, 0x1d226340, 0x21cefd17, 0x006d2a2d, 0x862de182, 0x0205e5ff, 0x3000ec05,
	0x00b92001, 0x0650462f, 0x59462d20, 0x822e2007, 0x92402708, 0x55021010, 0x05830e18, 0x05841720, 0x05841620, 0x830c1521, 0x0a142111, 0x4c080583,
	0x1f03090b, 0x081b2300, 0x08291f14, 0x1f241828, 0x08392f24, 0x13381036, 0x2a361f35, 0x1045084a, 0x1f451349, 0x2a44274a, 0x1b550258, 0x2d551f55,
	0x1b66196b, 0x2b661f65, 0x167b2f60, 0x20701f70, 0x2d742a74, 0x09231286, 0x37100e40, 0x08048308, 0x00020625, 0x04281a11, 0x2121061d, 0x021d3425,
	0x340e0a0a, 0x28210a06, 0x09161a15, 0x1a550209, 0x40f0ffb8, 0x820d0d0c, 0x15112609, 0x091a2100, 0x072f4300, 0xf0310882, 0x0c0c0f40, 0x74005502,
	0x70320f32, 0x6a090232, 0x05d65e31, 0x2405bd5b, 0xed2b2b2f, 0x08bd512f, 0x12112308, 0x54433917, 0x58154058, 0x68285711, 0x79286711, 0x89287611,
	0x97288611, 0x0a289911, 0x3031595d, 0xae5b2b2b, 0x2b2b2205, 0x0657442b, 0x27242226, 0x04163335, 0x20084961, 0x07be5b27, 0x23151724, 0x776b2426,
	0x16172205, 0x08028216, 0x51020559, 0x96d55049, 0x85fffea1, 0x2801710e, 0x61cdb882, 0x62af4b63, 0x3c01bfc6, 0x06019df3, 0xfe550e65, 0xc19f91eb,
	0xec407960, 0x01a8a652, 0x3baa57a9, 0x3b3c4840, 0x8a665ef8, 0x1a5e6373, 0x2a141a14, 0xefbba3cb, 0x48ea2c3c, 0x5d68845f, 0x280e1c6a, 0x00b22c15,
	0x82000100, 0x043e0800, 0x00d105ee, 0x40730007, 0x35040119, 0x08030306, 0x091f090f, 0x0003094f, 0x0902015b, 0x01550209, 0xffb80414, 0x0d0a40f6,
	0x0455020d, 0x01054f5b, 0xeaffb805, 0x10100b40, 0x08055502, 0x05820b0b, 0xb4200f82, 0x18822983, 0x0cb4f223, 0x0dba4d0c, 0x1182ff20, 0x05550623,
	0x82f7822f, 0xf45d2202, 0x0538702b, 0x2c06024d, 0x21112311, 0xee042135, 0xfdc6ecfd, 0x258982ec, 0x05dffa21, 0x9983b021, 0xe1ffb224, 0x99822905,
	0xcc001d3f, 0x12231b40, 0x033d1823, 0x034c093d, 0x1377094c, 0x1c081777, 0x3415030d, 0x141b0a06, 0x0a9b4e1f, 0x924ef820, 0x40ea2807, 0x020f0f11,
	0x830c0055, 0x60002095, 0xb824059c, 0x1d40f2ff, 0x0020c383, 0xbf48c982, 0x1f762e08, 0x1f1f1f0f, 0x0f031f40, 0xffb80c14, 0x21d685dc, 0xd683040c,
	0xda4e0f82, 0x840c2006, 0x200f8247, 0x82dd84f6, 0x05a84608, 0xf4250882, 0x060d0db4, 0x22088355, 0x820c0cb6, 0x526b2008, 0x6463149f, 0x3c3f2105,
	0x250cf460, 0x11352626, 0x625c1133, 0x080e820a, 0x47290535, 0x89ce4d51, 0x5147d08c, 0x2721c647, 0x6b6a972c, 0x21272d96, 0xa25602c6, 0x464c50f1,
	0xe852484a, 0xfc7b03a9, 0x398c797b, 0x42414241, 0x036d9339, 0x5701008a, 0x49080861, 0x408c0006, 0x48014766, 0x04050202, 0x57060705, 0x03068606,
	0x00001406, 0x04070501, 0x04860457, 0x03140403, 0x01080302, 0x024b0144, 0x01730258, 0x0006027c, 0x03750205, 0x02030301, 0x4a004508, 0x01020203,
	0x24000403, 0x35573a00, 0x00062606, 0x080f086e, 0x3f028201, 0x032b030b, 0x03550335, 0x037b0365, 0x07640306, 0x5d5de610, 0x5df6105d, 0x5d393911,
	0x5d3f3f00, 0x08080b4d, 0xc05dfd22, 0x5dfd1087, 0x5d01c008, 0x01210101, 0x05010133, 0xfee2fd5e, 0xd4e2fdf8, 0xd301d301, 0x2ffad105, 0xe2220382,
	0xb7821e05, 0x005c7208, 0x058d0700, 0x000c00d1, 0x47aa40c9, 0x79036703, 0x010d0303, 0x0404020b, 0x08050502, 0x01170b0c, 0x05180319, 0x0b190819,
	0x08290329, 0x023b0b29, 0x04320339, 0x093c0834, 0x0b3a0a33, 0x0444024b, 0x094c0844, 0x0b4b0a43, 0x025a0155, 0x055a0455, 0x09590757, 0x01650a55,
	0x0465026a, 0x096a056a, 0x027f0a65, 0x08730470, 0x0a72097c, 0x0c2e0b7c, 0x25758214, 0x05061407, 0xf4820306, 0x09094025, 0x84095502, 0x002f0805,
	0x02090003, 0x030b0805, 0x02060c09, 0x08020306, 0x0634003b, 0x0644004b, 0x0675007a, 0x0e720006, 0x0e3f0e1f, 0x0e7f0e5f, 0x0d670604, 0x825dee10,
	0x29f582fe, 0x5d391712, 0x315d2b2b, 0xaa5b0130, 0x5d012205, 0x23f48200, 0x23010123, 0xfa82f783, 0xfe8d0735, 0xc7fedf7d, 0xfedacefe, 0x3901cb76,
	0x01c93401, 0x82370137, 0x042f2eff, 0x052cfbd4, 0x042afbd1, 0x041efbd6, 0x089582e2, 0x00004441, 0xd1053805, 0xc2000b00, 0x01759740, 0x0a02077a,
	0x1a0a0504, 0x2c0a1504, 0x370a2304, 0x42044d09, 0x5f03580a, 0x57055804, 0x570a5009, 0x6d03680b, 0x67056804, 0x670a6009, 0x73047b0b, 0x830b170a,
	0x140937db, 0x03080708, 0x02010214, 0x06061405, 0x07040507, 0x060b0a01, 0xd1820802, 0x0d0f4608, 0x16020601, 0x36022602, 0x05024702, 0x08190809,
	0x08390829, 0x02050848, 0x040a0708, 0x02060401, 0x0016000d, 0x00360026, 0x00500047, 0x0d660006, 0x19060908, 0x39062906, 0x5f064806, 0x66060606,
	0x5df6100c, 0x27038332, 0x2f391711, 0x5d5d5d2f, 0x84050241, 0x87ed22fe, 0x28028610, 0x5d015d00, 0x01230209, 0x08028201, 0x0101332b, 0xfefd3805,
	0xfee50102, 0xd860fe6a, 0x05fe0702, 0x019101e4, 0xfdd1059a, 0x020ffd20, 0x029bfd65, 0xfde902e8, 0x005d02a3, 0x08728201, 0xe6040031, 0x0800d105,
	0x5c40d400, 0x042c012c, 0x07350728, 0x04400140, 0x07500740, 0x07700468, 0x1906160a, 0x28062708, 0x59065608, 0x6a066508, 0x83080808, 0x140627f3,
	0x02050405, 0x03820d00, 0x0400012c, 0x04030700, 0x04080701, 0xf3830502, 0x0a1f0a2d, 0x0a7f0a4f, 0x015b0004, 0x44040107, 0x375108ce, 0x0b824c05,
	0x0fb4fe25, 0x8255020f, 0xb4e82111, 0x08822583, 0x8205e343, 0xb4fa2408, 0x83060d0d, 0x40fa241a, 0x820c0c0c, 0x4f5b2509, 0x02057f05, 0x23099f52,
	0xf45d2b2f, 0x2505de44, 0x392bed2b, 0x1741e410, 0x315d2406, 0x415d0130, 0x18420516, 0x11430805, 0x33011123, 0xe6040101, 0xfdc6f4fd, 0x9701dbf2,
	0xd1059b01, 0x73fdbcfc, 0x59037802, 0x9a0266fd, 0x00010000, 0x0500007e, 0x00d10508, 0x40590009, 0x08070336, 0x08130806, 0x08360826, 0x08560846,
	0x82760866, 0xb32a08f3, 0x07030202, 0x06350307, 0x08020203, 0x04080135, 0x07020308, 0x09020407, 0x0b0f0b73, 0x0a690201, 0x105de610, 0x393911e6,
	0x0382122f, 0x2205d351, 0x822f32fd, 0x874b088d, 0x5ded7a10, 0x21c08718, 0x21013521, 0x01152135, 0xfb080521, 0xfc910376, 0xfc520491, 0xb8b00366,
	0xb3b06904, 0x010092fb, 0x78feef00, 0x1406f702, 0x45000700, 0x52052040, 0x52060102, 0x00030b01, 0x0c0c0600, 0x0655020d, 0x8209090c, 0x011f2305,
	0x0d820d1a, 0xffb80128, 0x0c0cb4de, 0x08825502, 0x0bb4ee23, 0x2208820b, 0x6e2b2b2f, 0xa56005ce, 0x11212308, 0x03821521, 0xfdf70230, 0xfe0802f8,
	0xfe5a01a6, 0x8f9c0778, 0x6b8282f9, 0xd0fe4624, 0x6b82c003, 0x3a00033f, 0x01032840, 0x19010a02, 0x38012a01, 0x59014b01, 0x78016801, 0x09018901,
	0x03001201, 0x272a822f, 0x00000103, 0x02700260, 0x6c065b6d, 0x012d0a95, 0x03330123, 0x33fdadc0, 0x07d0feb0, 0x242a8244, 0x0278feab, 0x27c184b3,
	0x0409405d, 0x03010752, 0xb823c183, 0x83b4f2ff, 0xb80324c1, 0x83b6f4ff, 0x1f0325c4, 0xf6ffb800, 0x2207fd4e, 0x831140f0, 0x040021d1, 0x0021ce83,
	0x82cb830e, 0xb7fa211e, 0x00262983, 0x2f010500, 0xc846333c, 0x2bed2105, 0x2605874d, 0x21013031, 0x82112135, 0xb3022303, 0xd582f8fd, 0xdd82a620,
	0x068f7825, 0x82008f7e, 0x02ba2d83, 0x05d205aa, 0x000600d1, 0x3b344047, 0x2408a082, 0x0345014b, 0x0350015f, 0x0360016f, 0x0370017f, 0x7b02690a,
	0x02010202, 0x1f030f05, 0x5f033f03, 0x05036f03, 0x2d028203, 0x4f000000, 0x04000200, 0x2f5d332f, 0x565e3f00, 0x30312705, 0x015d015d, 0xe9830923,
	0xc6d20532, 0x3afe39fe, 0x7e4d02c5, 0x7302ac02, 0x27038bfd, 0xff2f6f82, 0x05d4fefc, 0x004cff1a, 0xb6110003, 0x82025001, 0x2f0225b1, 0x002f3311,
	0x3207c960, 0xe2fa1a05, 0xd4fe1e05, 0x01010078, 0x02160554, 0x828c06fa, 0x4024312b, 0x59014816, 0x79026902, 0x03500402, 0x03700360, 0x01240082,
	0x2f020000, 0x7c823a83, 0x7882e482, 0x0233012b, 0xeffe95fa, 0x011605f3, 0x3e9b8276, 0x04e1ff68, 0x0078041d, 0x01330026, 0x0c594069, 0x1923040a,
	0x0423150a, 0x0c0c122b, 0x842c5506, 0x842d2005, 0x59410805, 0x5c1e510e, 0x600e692c, 0x7b2d6f1d, 0x70147a0a, 0x0a2c7b1d, 0x3d280802, 0x11401130,
	0x20111102, 0x011c4f08, 0x3f181c1c, 0x41310420, 0x08010a08, 0x1d011d0f, 0x40352711, 0x55020909, 0xf4ffb802, 0x210888b4, 0x11850c0c, 0x2c05154e,
	0x1d001a02, 0x1006000b, 0x00550210, 0x088d5612, 0x2005fa47, 0x22338318, 0x4e0d1a00, 0xfc21054f, 0x213983b4, 0x5f6db800, 0x82062005, 0x82a4832e,
	0x40f4240f, 0x82090915, 0x05a6560f, 0x0f35912d, 0x3f351f35, 0xb82e0335, 0x83b4f8ff, 0x2808823b, 0x0f0d40f4, 0x2e55060f, 0x27328308, 0xb80b1b2e,
	0x3740faff, 0x0b217383, 0x2173830c, 0x2783080b, 0x831c0b21, 0x0c0b216f, 0x06200b84, 0x0b216c83, 0x20588316, 0x250b820b, 0x0a0b5506, 0x05820d0d,
	0x235d8520, 0x502b200a, 0xe62005ce, 0x2408af56, 0x1039112b, 0x200d83fd, 0x060f5932, 0x33ed3f2f, 0x12115d2f, 0xed5d2f39, 0x30313912, 0x251b825d,
	0x23215d01, 0x235c0635, 0x05097405, 0x6b372421, 0x03211485, 0x0a487411, 0x1d049908, 0x285519bb, 0x97527a2f, 0x66656dd2, 0x2da41e01, 0x3d70282a,
	0x0a61b64a, 0x7665d037, 0x423f40af, 0x44e956bb, 0x77746451, 0x1177a463, 0x1f17123d, 0x9d7f9bc8, 0x08202d2d, 0x1854401d, 0x25271017, 0x27240fbf,
	0x6c922e2f, 0x37011dfe, 0x17131405, 0x61605561, 0x0002004d, 0x04e1ffb9, 0x00140690, 0x01200013, 0x34294012, 0x3b0f3502, 0x44203015, 0x4b0f4502,
	0x57204015, 0x7f126712, 0x0c1c7b08, 0x1706090e, 0x0c041142, 0x06401e01, 0x14080b0a, 0xb4f4ffb8, 0x55060c0c, 0xb6260883, 0x55020c0c, 0x05701b14,
	0xb4f0210b, 0x2806cc41, 0x0d0b40f4, 0x0055020d, 0x8223830e, 0xb4ec2521, 0x55060909, 0x3e850882, 0xf3240882, 0x0d0d2940, 0x90301282, 0x3f221f22,
	0x1b0e0222, 0x09090c09, 0x0c095502, 0x09213183, 0x832e8308, 0x55062c0b, 0xb80c1a09, 0x10b4deff, 0x82550210, 0x58e22008, 0xd84905b3, 0xb4ee2108,
	0x18826783, 0x0b40f622, 0x0c213983, 0x82398306, 0x84f0200f, 0x210882a7, 0x6783b6ef, 0x21880c23, 0x09e65e10, 0x2105ad41, 0xfc45105d, 0x002b2409,
	0x82ed3f3f, 0x39122102, 0x4105c669, 0x272a06aa, 0x33112307, 0x33363611, 0x93671232, 0x07920805, 0x33161611, 0x90043632, 0xaa47434f, 0x458e5f66,
	0x4fbcb00c, 0xe5c66fb2, 0x529384c2, 0x735048a8, 0x02b19c49, 0x4ce08c37, 0x262d4f4f, 0xfd140634, 0xfe5341d4, 0xc8e6fed0, 0xfd3847cf, 0xcd1c2480,
	0x00010000, 0x03e7ff69, 0x007704f3, 0x40b50021, 0x4f230f4c, 0x012b0223, 0x162a0e22, 0x013a1824, 0x163a0e35, 0x01491835, 0x0e440a4f, 0x1841164f,
	0x0e550159, 0x0e650169, 0x0e73017a, 0x14101013, 0x21040c3f, 0x033f1a21, 0x40230f09, 0x55021010, 0xf6834023, 0x20088851, 0x076841de, 0x2e40de22,
	0x0024f783, 0x0617238d, 0x17292183, 0x0d08091b, 0x0955020d, 0x230d8308, 0x0b0b0c09, 0x16220b82, 0x05820909, 0x09090629, 0xb8095506, 0x83b6f8ff,
	0x85092231, 0x07294122, 0x862bed21, 0x0bec5e09, 0x5d015d23, 0x08796725, 0x33001022, 0x2208e26a, 0x67141506, 0x42080672, 0xf3033337, 0x795fa95e,
	0x504948ca, 0x60f72d01, 0x560a4db9, 0xb9a057b7, 0x7639a4b5, 0x1548292f, 0x322d460a, 0xdc484847, 0x01120193, 0xd1273638, 0xd0d74843, 0x181ed9ca,
	0x00112f15, 0xff6c0002, 0x424304e1, 0x2608069b, 0x3c254002, 0x381c301a, 0x421a4f20, 0x5820481c, 0x70066806, 0x01120910, 0x18051102, 0x01040e41,
	0x05421e08, 0x4414110a, 0x0d34166b, 0x55060c0c, 0x40221a02, 0x55020f0f, 0xf6ffb800, 0x10102340, 0x08200982, 0x0021fc83, 0x0a694c10, 0x0c0c2a22,
	0x0a211782, 0x0574440d, 0x2d40ee28, 0x55060f0f, 0x3f830f00, 0x61440020, 0x42922005, 0x1b2105a7, 0x2129830c, 0x1983101b, 0x081b1b23, 0x25498318,
	0xfeffb808, 0x4d832b40, 0x090c0827, 0x08550209, 0x84058410, 0x04082129, 0x08205383, 0x06250b82, 0x0d080855, 0x2005820d, 0x0a894285, 0x9756ed20,
	0x2b2b280c, 0x2b2b2bfd, 0x42003232, 0x3f22078a, 0x38443031, 0x22232f05, 0x36341102, 0x33363637, 0x11171632, 0x3c640333, 0x0472080b, 0xb051bc43,
	0x51ebc867, 0x61b54445, 0xbc4b8858, 0x47784cbc, 0x9688b09e, 0x4675a450, 0x0134014e, 0x4ede8e11, 0x2725504c, 0xfffae401, 0x1a228102, 0xcfc7cadc,
	0x02000047, 0xe6ff6a00, 0x7c046004, 0x1f001800, 0x2740c800, 0x0d2b0426, 0x0d3b0430, 0x04431e3c, 0x1e4b0d4b, 0x16500d5a, 0x17600d6a, 0x1e7a0d78,
	0x1f3c010e, 0x3d1c0f1f, 0xb80b0415, 0x8b6fe8ff, 0x0b0b2905, 0x090f3f07, 0x40210c0c, 0x212bef83, 0x020c0c40, 0xffb81955, 0x840d40f6, 0x001a2209,
	0x08546020, 0xf9834420, 0x218f002c, 0x211f210f, 0x1f03213f, 0x1a830c01, 0x0c0a012f, 0x0155060c, 0x0b18121b, 0x1255020b, 0x21468310, 0x19830812,
	0x0d041223, 0x8411820d, 0x0212211f, 0x12213c83, 0x08fa5385, 0x5e2bfd21, 0x2b25057e, 0x2b2b2bed, 0x05ca4f33, 0xed3f2b2b, 0xed2f3912, 0x015d3031,
	0x08994d21, 0x15336808, 0x20230606, 0x00101100, 0x15123233, 0x23262627, 0x04070622, 0x3ec9fc60, 0x568f3436, 0x0a31e772, 0xfe6dc65f, 0x01c8feea,
	0xf5e2f42b, 0x969301b7, 0x020cb397, 0x3199671b, 0x2c5b3030, 0x013628cd, 0x0115012d, 0xfe420112, 0x942af3f8, 0x0084b2a2, 0x00440001, 0x06120300,
	0x0018001e, 0x1a6740c7, 0x020f0f40, 0x83401a55, 0x082108ac, 0x75143914, 0x00000305, 0x00153f04, 0x083e0e0b, 0x080d0511, 0x09400900, 0x090f0902,
	0x0b08000e, 0x0568460c, 0x0b27de83, 0x06090906, 0x830c0b55, 0x010b23fe, 0x0b820d0d, 0x110f1a30, 0x0d400e00, 0x160e3710, 0x55021010, 0x5983200e,
	0x33840e20, 0xffb80e22, 0x2106dd44, 0x69832e0e, 0xee280f82, 0x0f0f0b40, 0x120e5506, 0x0f824783, 0x0d40fb22, 0x0e214b83, 0x224b8320, 0x4419890e,
	0x2b2609eb, 0x3232322b, 0x00832bfd, 0x122f322c, 0x5d2f2f39, 0x333f3f00, 0xfe5332fd, 0x01810805, 0x012b2b5d, 0x23262623, 0x15150622, 0x11211521,
	0x35231123, 0x36343533, 0x17163233, 0x1f0a1203, 0x6d792664, 0xb3fe5301, 0xc67f7fbc, 0x2a653fbb, 0x13095e05, 0x9e268c6b, 0xbf0341fc, 0xd5c7259e,
	0x0200080c, 0x59fe6c00, 0x7c044304, 0x30002300, 0x2d402f01, 0x2a3e133d, 0x303a2c32, 0x134b0944, 0x2c422a4c, 0x015b304b, 0x165a055d, 0x056c016a,
	0x057c166a, 0x22112070, 0x15211205, 0x041e4028, 0x07055007, 0x40210883, 0x36d4831b, 0x400b0707, 0x412e0d03, 0x060f0715, 0x24210601, 0x0f0f4032,
	0x48125502, 0x0884074e, 0x850c0c21, 0x42402011, 0x1a290521, 0x00180600, 0x40f6ffb8, 0x22df4351, 0xdb431a20, 0x1f322711, 0x02323f32, 0x5683082b,
	0x0c0c2b34, 0x2b55060c, 0x0b10181b, 0x1855020b, 0x40feffb8, 0x80820f25, 0x09161823, 0x820f8209, 0x2205821d, 0x850d0d06, 0x5506220b, 0x820b8218,
	0x31852105, 0x230b4d46, 0x2be4105d, 0x1e480087, 0x3fed330d, 0x2b2f33ed, 0x12ed3f2b, 0x313f3939, 0x10255d30, 0xa8732100, 0x0635220d, 0x0cee4306,
	0xee433720, 0xfe73080f, 0x59f4fefe, 0x2e0a52a9, 0x7e6064c8, 0x551e2323, 0xebc8789b, 0xba414651, 0x4983615c, 0x4bbcb00c, 0xb29b4081, 0xa5529984,
	0xfee4fe7f, 0xc01719f6, 0x292e3512, 0x66446e27, 0x21014344, 0xd1900701, 0x274f474c, 0xd6fc3028, 0x1d226102, 0xc2bcc6d0, 0x0001003f, 0x040000b9,
	0x0014065f, 0x40330116, 0x16150313, 0x03157515, 0x42080d10, 0x010e0413, 0x45080d01, 0xf8251461, 0x060909b4, 0x201a8355, 0x056945b6, 0xffb80028,
	0x1010b4ea, 0x08825502, 0x1140fc24, 0x09820b0b, 0x66450420, 0xffb8220a, 0x843282fc, 0x48fe201e, 0x22200621, 0x24062344, 0x0f0fb4e0, 0x22378306,
	0x833440fa, 0x0d002155, 0xf2515283, 0x18912706, 0x1860181f, 0x43431002, 0x4308200c, 0x1a210a43, 0x0723480d, 0xe0200882, 0x25052348, 0x09090c0d,
	0x0f825502, 0x0db4ee23, 0x5208840d, 0x11820505, 0x3e43ea20, 0x840d2005, 0x210f8242, 0x6c83b4f1, 0xb6270883, 0x55060d0d, 0x4317880d, 0xfd210a40,
	0x2100822b, 0x118a5d32, 0xed2b2b22, 0x2b251282, 0x3f3c3f00, 0x05e2493f, 0x11232122, 0x2105fd66, 0x3b5e0622, 0x365c0805, 0x16323336, 0xbc5f0415,
	0x5e191812, 0x4da84d4b, 0xbc58bcbc, 0x02beb563, 0x26874d7c, 0x3b4c292a, 0x1406befc, 0x5249cdfd, 0x0000cdda, 0x00af0002, 0x05830100, 0x000300db,
	0x40a30007, 0x02440113, 0x370d0b40, 0x05060302, 0x097f0805, 0x00920901, 0x40fcffb8, 0x020c0c2c, 0x04600055, 0x0421d884, 0x250d830c, 0x09090604,
	0x0b835506, 0x1a2c0582, 0x0f0f0201, 0x60015502, 0x0501057f, 0x82071041, 0x06104108, 0x37840520, 0x10410f82, 0x41088205, 0x08820510, 0x83b4fc21,
	0x28088246, 0x0c0cb6ff, 0x88055506, 0x23ee8808, 0xfd2be45d, 0x2208ed83, 0x5de62be4, 0x3f3f3f00, 0x3031ed2b, 0x35230101, 0x11230333, 0xd4830133,
	0xbcbc0cd4, 0xfac31805, 0x825d0425, 0xc2ff25c9, 0x150259fe, 0x1929c984, 0x2340d100, 0x051c050a, 0x34ce8802, 0x05193e16, 0x400f0b0b, 0x174f0d07,
	0x0a7f1701, 0x60010a01, 0x07d84316, 0x84540882, 0x85088205, 0x2008828f, 0x218f84f4, 0xff841a16, 0xff851820, 0x70170a2e, 0x0e190119, 0x55021010,
	0x0b0b0c19, 0xb8220582, 0xf341deff, 0x08192305, 0x0f840909, 0x0b40e422, 0x02200984, 0x19223283, 0x4d69ffb8, 0x22088205, 0x831340ec, 0x071921ea,
	0x1928e783, 0x060d0d05, 0x1b921955, 0xe982ed88, 0x32325d22, 0x2f22f287, 0xf3822f5d, 0x2f32fd24, 0xf784ed3f, 0xf7845d20, 0x08116161, 0x21352362,
	0xd4d41502, 0x28a8c80c, 0x1c0a2c83, 0x58482d5f, 0xe90d1616, 0x1805a501, 0xc40afac3, 0xb30c10c8, 0x28281c0b, 0x03517128, 0x00009e84, 0x00c10001,
	0x06af0400, 0x000b0014, 0x284440fa, 0xdb01d802, 0x01090309, 0x011f0d0f, 0x0d1f021d, 0x0d2f012d, 0x0b400b30, 0x02690b54, 0x020c017a, 0x1a010302,
	0x37082a82, 0x02b40908, 0x0a030a0b, 0x0a050208, 0x01010705, 0x020b0805, 0x0a700a60, 0x000a0a02, 0x40f4ffb8, 0x060f0f28, 0x0d000055, 0x0d400d20,
	0x0c030802, 0x55020909, 0x0c0c0c03, 0x04200582, 0x0b83f383, 0x03550623, 0x0b1a421a, 0x3741e220, 0x081a4205, 0x42081142, 0xe6200823, 0x20052b43,
	0x82428405, 0xb4f7253a, 0x55060c0c, 0xb6220883, 0x08820d0d, 0x28638920, 0x482b2008, 0x2b2905bf, 0x33115d32, 0x2f332b2f, 0x05e45d5d, 0x39123f22,
	0x2305cc58, 0xf57ac0c0, 0x27056c61, 0x01c008fd, 0x2321715d, 0x08096861, 0xf8af0433, 0xbc7a40fe, 0xed1f02bc, 0xe901f9fd, 0x068bfe74, 0x021afc14,
	0x00fcfd2f, 0x00bb0001, 0x06770100, 0x00030014, 0x0227407d, 0x7f080101, 0x92050105, 0x4ae08400, 0x082006f9, 0x0b83e083, 0x00550627, 0x01017f1a,
	0x07fe4201, 0xfe420882, 0x84012006, 0x850f822f, 0x470882da, 0x01200655, 0x0f82da84, 0x83b6f821, 0x88012245, 0x080e4204, 0x82fd5d21, 0x05f842d4,
	0x0130312a, 0x33112321, 0xbcbc7701, 0x31458a82, 0x07390805, 0x007c0417, 0x40c8012b, 0x0324034b, 0x13241329, 0x44204429, 0x072ab726, 0x250125b6,
	0x081c1d1f, 0x22284217, 0x01051d04, 0x40081c10, 0x2d1f012d, 0x2d402d30, 0x2d702d50, 0x33bc9905, 0xc0ffb82d, 0x0f0f1740, 0x402d5502, 0x55020c0c,
	0x10101801, 0x08220582, 0x05820b0b, 0xeaffb823, 0x821a83b4, 0x40f424ac, 0x82090911, 0x84302012, 0x0d1c2124, 0x2005cf51, 0x211e82f2, 0x1e825506,
	0x2b40f022, 0x0222cc84, 0x0f820d0d, 0x25106126, 0x0c0f1c0b, 0x0f213083, 0x2130830c, 0x1d83080f, 0x06270b83, 0x101a0f55, 0x57f6ffb8, 0x10200541,
	0x0f826784, 0x8957d220, 0x26102105, 0x10222d83, 0x5e820d0a, 0xf8201582, 0x08845e84, 0x08823f83, 0x0cb4fb25, 0x8255060c, 0x40ff2208, 0x226a8321,
	0x841a1f10, 0x841a2066, 0x841a2066, 0x240b8366, 0x1a1a5506, 0x0794411c, 0xe6200882, 0x20057842, 0x822c841c, 0x0578420f, 0x9d410882, 0x42088305,
	0x1c210578, 0x8269830a, 0x84fc200f, 0x21088369, 0x69830e40, 0x1f611c2a, 0x80104010, 0x2f100310, 0x4208c553, 0x10200781, 0x20087d47, 0x220983fd,
	0x47393911, 0x0f83089d, 0x0483ed20, 0x005d5d2c, 0x3f3c3c3f, 0x32fd3c3f, 0x3b7b1211, 0x0bc64505, 0x15161623, 0x0ed54511, 0x36361526, 0x17163233,
	0x152d0584, 0x0dbc1707, 0x51561715, 0x034f9e4f, 0x080a8504, 0x4d9b4d34, 0xaf58bcbc, 0x279f7263, 0xb86bbc72, 0x487c02af, 0x2c2b2886, 0x3d173d4f,
	0x0235fd1e, 0x28854a7c, 0x3b4c2b2b, 0x5d04befc, 0x6052497c, 0xdf556055, 0x494200c8, 0x5f042705, 0x16007c04, 0x7b472901, 0x4705200f, 0x1720367b,
	0x250a7b47, 0x02090908, 0x68470055, 0xb4fe2107, 0x2606e54c, 0x0f1140e0, 0x4755060f, 0xb8260c68, 0x2840f8ff, 0x15820909, 0x23097247, 0x55020c0c,
	0x47067847, 0xb4221972, 0x6b470f0f, 0x058f4f0e, 0x47088447, 0x71473f72, 0x059b411f, 0x081d7147, 0x7c5d0434, 0xcdda5249, 0x6a000200, 0x7104e1ff,
	0x0b007c04, 0xfa001700, 0x0e3b1a40, 0x14341034, 0x0e4b163b, 0x14441044, 0x0f08164b, 0x1504093f, 0x0c0a033f, 0x7d63ffb8, 0x25088205, 0x0c0cb4f4,
	0x08825502, 0x6c4bf220, 0x1b0c2305, 0x11834019, 0x6fb80021, 0xa552067e, 0x10102105, 0x08064118, 0xdaffb824, 0xd5480fb4, 0xb4ee2205, 0x05005109,
	0x4582f620, 0xe7480620, 0x0d3d2205, 0x3209820d, 0x190f1990, 0x193f191f, 0x1204196f, 0x02090904, 0x830c1255, 0x27058355, 0x1b125506, 0x0b0b1606,
	0x20088e7c, 0x23198308, 0x0d0d0406, 0xb8241182, 0x1940feff, 0x06215d83, 0x255a8310, 0x0c0c0406, 0x1b835506, 0x85210582, 0x08c14418, 0xae522b20,
	0x08fb5005, 0x00200e83, 0x5f08736d, 0xdf500ad4, 0x05c34f05, 0x71042008, 0xedebe8fe, 0x1701e9fe, 0x1801ebed, 0x9997aac2, 0x9698aaa9, 0xfe2e02ab,
	0x01c4feef, 0x8211013c, 0x3d320801, 0xeffec3fe, 0xd9d3d3d9, 0x00d7d9d2, 0xfeb90002, 0x04900464, 0x0013007c, 0x40220120, 0x39023225, 0x43203215,
	0x42154902, 0x67125620, 0x7c087e12, 0x4d520a1c, 0x1e052607, 0x0b090640, 0x064d520c, 0x82550221, 0xb6f62108, 0x4d52be83, 0x23f18306, 0xd0ffb800,
	0x20074a4a, 0x052b44f0, 0x41120021, 0xcc47066e, 0x41218205, 0xf6201155, 0x201c5652, 0x2756520c, 0x22058d44, 0x52ffb80c, 0x714d085f, 0x245f5206,
	0x21053049, 0x60523232, 0xed2b2209, 0x1761522b, 0x11231124, 0x61521533, 0x4e3e0813, 0x64b34247, 0xbc498d57, 0x6abb4bbc, 0x8ac2e1ca, 0x4ba4518f,
	0x9d497350, 0x883c02b0, 0x514a4ee1, 0x2cfe2826, 0x3f75f905, 0xfecffe55, 0x46c8caec, 0x2487fd39, 0x0200d41a, 0x64fe6c00, 0x8b414304, 0x07260806,
	0x033b2b40, 0x1c301a3d, 0x034c203a, 0x1c461a4b, 0x1070204a, 0x02051209, 0x40180411, 0x0c01040e, 0x0905421e, 0x23511411, 0x28e54b05, 0x24274951,
	0x095940fa, 0x24495109, 0x0b0b1428, 0x06085502, 0x05820909, 0x3f511220, 0x830e2010, 0x08082345, 0x45510c0c, 0x07cb5319, 0x51060246, 0x01220f46,
	0x574d1123, 0xbc36081f, 0xc764ac57, 0x424453ed, 0x8b5a63b2, 0xbcb00c48, 0xa346784e, 0x529389aa, 0x0264fea4, 0x01494b1a, 0x900e0133, 0x50494bdd,
	0xfc302728, 0x237802bf, 0xc4c2dd1c, 0xc14547d3, 0x72033c06, 0x12005d04, 0x1440bc00, 0x0d100d00, 0x0c030d20, 0x00000f09, 0x0f0a4304, 0x73080905,
	0xc4630be1, 0x00002a06, 0x70144014, 0x070c0214, 0x27ee830c, 0x0c0c0c07, 0x06075502, 0x0b83e883, 0x07550625, 0x54b8091a, 0x088206f8, 0x0343e020,
	0x84092005, 0x420f822c, 0x088205a1, 0x1140ee2e, 0x55020d0d, 0x0f0f2409, 0x0a095506, 0x15823f83, 0x0cb4f823, 0x250e820c, 0xb6f9ffb8, 0x08820d0d,
	0x4c138821, 0x113111d1, 0x2b2b2f33, 0x3c3f3f00, 0x112f32fd, 0x30313912, 0x060a505d, 0x93420720, 0x16210808, 0x0a720317, 0x57364f2a, 0xbcbc4ba2,
	0x3159ab70, 0x90032c2c, 0x3d4d090a, 0x5d04e7fc, 0x054b5aa5, 0x08fd8307, 0xe5ff6e60, 0x7804d703, 0x53013300, 0x02065740, 0x02151b09, 0x09261b19,
	0x0932242a, 0x0942243c, 0x055e244c, 0x2153165d, 0x32542f56, 0x166c056f, 0x2f642060, 0x7a143265, 0x74117f05, 0x74287920, 0x88018a2b, 0x871a850d,
	0x9a019428, 0x0e000b1b, 0x1e042918, 0x01228003, 0x0b0b4022, 0x22225502, 0x27503e26, 0x0c402105, 0x07340f83, 0x033e0b07, 0xb80e2109, 0x2b40faff,
	0x55020909, 0x0c0c0c29, 0x06250585, 0x351b2955, 0x210d8340, 0x19831018, 0x840a1821, 0x09082b0b, 0x18550609, 0xb5f6ffb8, 0x08820c0c, 0xca453982,
	0x21088305, 0x13830b40, 0x001b0e29, 0x00071821, 0x56eaffb8, 0xc64e07c0, 0x4cf42008, 0x00210548, 0x067b4414, 0x41087244, 0x33820561, 0x2740f836,
	0x55060d0d, 0x0f358e00, 0x3f351f35, 0x7f355f35, 0x16070535, 0x1620ab84, 0x07217a83, 0x2863831a, 0x10348607, 0x2b2b2be6, 0x4805845d, 0xed220795,
	0x975a2b2b, 0x522b2008, 0x332b08ca, 0x115d2b2f, 0x31391712, 0x6d015d30, 0x35250ed1, 0x27262734, 0x18028326, 0x2108504c, 0xc1511517, 0x17142406,
	0x82161716, 0x17920802, 0xfdd70316, 0x46cf7cdb, 0x64da590a, 0x26268c7c, 0x3581286c, 0x3a397b93, 0x646bad38, 0x480a44cd, 0x8e6763ce, 0x345e2a2b,
	0x47832b81, 0x99420147, 0xd3233bc4, 0x56504f43, 0x18222242, 0x270e1809, 0x7a456e97, 0x31372f30, 0x4935c923, 0x23454e4f, 0x180c1623, 0x4a491e0a,
	0x3e000100, 0xfd02eaff, 0x1b009e05, 0x4240b200, 0x051a050c, 0x0b03052b, 0x0d3e0710, 0x1b050a0b, 0x033f171b, 0x7f1d4f09, 0x000e021d, 0x0d081d8c,
	0x09090c10, 0x0c105502, 0x05820c0c, 0x09090423, 0x820b8406, 0x0a1a3505, 0x0d400708, 0xb8073710, 0x1140deff, 0x55021010, 0x0f0f2007, 0x30840582,
	0xde421582, 0x42088205, 0x072606de, 0x060f0f1c, 0x43840755, 0xf1201582, 0x23058247, 0x0d0d1707, 0x88211582, 0x0def521c, 0x822bfd21, 0x2f322400,
	0x4d32f610, 0x332606bd, 0x2f32fd33, 0xb8563031, 0x11352a06, 0x11333523, 0x15211133, 0x09c56121, 0x02335008, 0x317d35fd, 0x7f7fb2ab, 0xfe8401bc,
	0x1618087c, 0x642e4f4d, 0x0e0a0a16, 0x02cbb812, 0x41019e52, 0xfe9ebffe, 0x2b635803, 0x091b2528, 0x00010000, 0x04e1ffb1, 0x005d0457, 0x401b0116,
	0x19060b14, 0x03077a07, 0x09150502, 0x05421105, 0x5608010a, 0xf6201594, 0x28123251, 0x101d40ee, 0x00550210, 0x0ab66b08, 0x2005ad49, 0x06aa4902,
	0x4648ea20, 0x40f62207, 0x0a1c5133, 0xfd830e20, 0x51920021, 0x1b51051c, 0xb8082419, 0x83b4e2ff, 0x4b088261, 0xa8560676, 0xffb82106, 0x82056741,
	0x05534718, 0xf1200882, 0x2105764b, 0x68830808, 0xb4240f83, 0x55060c0c, 0xf5210882, 0x216e83b6, 0x1b518708, 0x2bed210b, 0x460ddb6b, 0x002706f9,
	0x3fed3f3f, 0x5639123c, 0x326309be, 0x114f080d, 0xbc570433, 0xb069ae5f, 0x1a10bcc4, 0x4952561b, 0x7cbc4bad, 0xd0d7504b, 0x84fdd502, 0x2c2b7955,
	0x033b4c28, 0x00010042, 0x0400003d, 0x005d047f, 0x408d0006, 0x29042641, 0x39043606, 0x49044606, 0x05290606, 0x05400539, 0x05600551, 0x821a0605,
	0x04580829, 0x0302031a, 0x03270028, 0x03370038, 0x0347004a, 0x027a0175, 0x02050008, 0x03010375, 0x02080205, 0xb8000301, 0x2440c0ff, 0x0c371009,
	0x6a001c00, 0x04007a00, 0x0f088d00, 0x03030108, 0x03650313, 0x03040375, 0x020b0b1c, 0x07820355, 0x5d2be610, 0x5df4105d, 0x3939112b, 0x080d2363,
	0xfd108723, 0x5d015d00, 0x01230101, 0x04010133, 0xbd3cfe7f, 0x01cc3ffe, 0x0457015a, 0x04a3fb5d, 0x0387fc5d, 0x328d8279, 0x06000056, 0x005d0436,
	0xb9f2000c, 0xf2ff0800, 0x820909b4, 0xffb82258, 0x064d44f2, 0x0c0c0c2a, 0xb8065506, 0x8740f4ff, 0x3e080983, 0x031d030d, 0x022a012c, 0x04250329,
	0x08240526, 0x01340b2b, 0x0144053b, 0x0157054b, 0x05590458, 0x026d0b57, 0x08640462, 0x0a64096a, 0x01790b6b, 0x0472027d, 0x097b0874, 0x0b7a0a73,
	0x821a0c1e, 0x1a072970, 0x00060506, 0x02091009, 0x82051663, 0x060a2305, 0x17630555, 0x02052b07, 0x1f060f08, 0x03062f06, 0xe3831a00, 0x83260021,
	0x8e002a76, 0x3f0e100e, 0x030e6f0e, 0x218b8200, 0x1983b4e0, 0x776a0882, 0x24088205, 0x090d40fa, 0x20a78209, 0x20ad8418, 0x06506f83, 0x105d3225,
	0x612b2be6, 0x4463062a, 0x2b2b280d, 0x2b012b00, 0x83230101, 0x33270802, 0x01330113, 0xfe360613, 0xe1feaedd, 0xfeade3fe, 0x01cdc4da, 0x1e019b17,
	0xfb5d04c2, 0xfc5d03a3, 0xfc5d04a3, 0x8361039f, 0x82002003, 0x3c7008c2, 0x80040000, 0x0b005d04, 0x8c40e100, 0x011b0b09, 0x07140314, 0x0327091b,
	0x003c0727, 0x0334013b, 0x06340434, 0x093b0734, 0x004c0a3d, 0x0344014b, 0x06440444, 0x094b0744, 0x015a0a4d, 0x055a0355, 0x095a0755, 0x016f0b55,
	0x05690360, 0x096f0760, 0x0f230b66, 0x3f080002, 0x4f083002, 0x7d084002, 0x08087002, 0x0b0a1a09, 0x061a070a, 0x1a010605, 0x03346982, 0x0405041a,
	0x0b050201, 0x04060908, 0x0675047a, 0x04050602, 0x01350b82, 0x010d0206, 0x0b080205, 0x000a0404, 0x40c0ffb8, 0x37100922, 0x08a48206, 0x0f0d8d32,
	0x0d0f010d, 0x0d400d1f, 0x06040d5f, 0x04010402, 0x020b0b16, 0x0c820455, 0x5d2bf610, 0x105d5d32, 0x322b5df6, 0x5d391711, 0x3f005d2f, 0x17125d3f,
	0x6305fc50, 0x21220d66, 0x65630123, 0x33240806, 0xed800401, 0xc1fec3fe, 0xfeb401db, 0x3b01ed50, 0xfedc3c01, 0xfead0149, 0x022d0253, 0x015afe30,
	0x00dafda6, 0x2f087882, 0x0464fe3d, 0x005d047f, 0x408c0007, 0x34060441, 0x50064406, 0x70066006, 0x03090606, 0x03190507, 0x01460517, 0x00580349,
	0x03790157, 0x1a070209, 0x05393282, 0x0403041a, 0x04460049, 0x02030002, 0x0c020504, 0x01016802, 0x03030201, 0x08d28804, 0x1c000c20, 0x6a004a00,
	0x05007a00, 0x0f098d00, 0x04030109, 0x04450413, 0x04750465, 0x08820405, 0xcf85e410, 0xcd82ce84, 0x83391221, 0x655d20cc, 0xc0200533, 0x21051b63,
	0x09431323, 0x74fd3605, 0x43fed0c9, 0x015701cc, 0xfa5d045a, 0x04d20107, 0x03c4fc27, 0x24bb833c, 0x0300005d, 0x08bb82e3, 0x56000923, 0x08153a40,
	0x0835033a, 0x0845034a, 0x0854035c, 0x037f0860, 0x070a0870, 0x063e0307, 0x08020205, 0x0a15633e, 0x1f0b8e34, 0x5f0b3f0b, 0x7f0b6f0b, 0x8402050b,
	0x5de6100a, 0x1d63e410, 0x635d2013, 0x03340916, 0x027afce3, 0x0383fd8b, 0x0272fd67, 0x35038b9f, 0xc8fc869d, 0xad288383, 0x590478fe, 0x25001406,
	0x41088382, 0x3a1d2f38, 0x56074a07, 0x75236723, 0x1d3a0623, 0x1d021d4a, 0x3f53091c, 0x020a4f0a, 0x14010a0a, 0x24011251, 0x140b0151, 0x0040000f,
	0x19090002, 0x000e1f20, 0x01054009, 0x335d2f05, 0x3cfd3c33, 0xc5792f2f, 0xfd5d3609, 0x315d3939, 0x015d0130, 0x3d262223, 0x2b263401, 0x32333501,
	0x2e098236, 0x15013b36, 0x1d062223, 0x07061401, 0x82011e15, 0x16350807, 0x5904013b, 0xa6dfb396, 0xab3333ab, 0x96b3dfa6, 0x9a7b8872, 0x7b9a8989,
	0x78fe7288, 0xa995bcc7, 0xa9bf9cbf, 0x8ac7bc95, 0x8baf8c7e, 0x371837bd, 0x8caf8bbd, 0x25bd827e, 0x78fe7a01, 0xbd822802, 0x1b000339, 0x050f0f40,
	0x0202054f, 0x000b0101, 0x01014f1f, 0xed5d2f01, 0x853f3f00, 0x33112982, 0xaeae2802, 0x9c0778fe, 0x00213582, 0x20f382bb, 0x08f38467, 0x29406943,
	0x02351221, 0x02401231, 0x0c7a1240, 0x00121306, 0x4f253f53, 0x25250225, 0x1c511b09, 0x09510a01, 0x09001b0b, 0x17000901, 0xfaffb80e, 0x0d0d0f40,
	0x1f0e5502, 0x00090505, 0x2001204f, 0xfaffb820, 0x2c1283b5, 0xd6102720, 0x335d2f2b, 0xfd103c33, 0x1007412b, 0x22338385, 0x14151506, 0x35232306,
	0x35363233, 0x37363435, 0x82262635, 0x84262007, 0x82162011, 0x3316241b, 0x41670433, 0x16410f00, 0xf8012105, 0x08120041, 0xbcc78a50, 0x00bfa995,
	0x01bb0001, 0x03d1058b, 0x001f009f, 0x06424056, 0x09090603, 0x19190913, 0x150a1708, 0x3b1a1918, 0x4b183408, 0x5a184408, 0x550a5a03, 0x5b1b540d,
	0x6e05601d, 0x75186114, 0x75147a04, 0x1c0f1718, 0x540c0654, 0x1f161f06, 0x4a82002a, 0x002a0f2c, 0xed332f10, 0x00ed5d2f, 0x0782332f, 0x8433ed21,
	0x010e29bc, 0x23010e07, 0x2e272622, 0x062c0582, 0x013e2307, 0x33013e37, 0x1e171632, 0x3d080582, 0xd1053736, 0x2e2d2902, 0x925e6482, 0x325c6654,
	0xa709645e, 0x2b2c2902, 0x935d608a, 0x3d665055, 0x03036167, 0x4bc0639f, 0x664f584d, 0xc4af407d, 0x4a4dbd64, 0x62684d5b, 0x00a9ca5b, 0xeb69ffff,
	0x50072505, 0x24003602, 0x24088182, 0x008e0017, 0x0075012f, 0x0313401a, 0x11301120, 0x11701140, 0x02051180, 0x060e1100, 0x2b012507, 0x00355d35,
	0x08338503, 0x00010839, 0x001e0012, 0x40f40021, 0x40202b44, 0x55185a20, 0x551e501a, 0x65186920, 0x091e651a, 0x0d170b18, 0x1246064a, 0x12560659,
	0x03770278, 0x21202008, 0x0187021f, 0x82140101, 0x20270837, 0x04870321, 0x05140401, 0x067b0605, 0x16021274, 0xffb80c51, 0x0d6f40c0, 0x030c3710,
	0x10402134, 0x21550210, 0x830d0d40, 0x092f0805, 0x70550209, 0x21210121, 0x04120620, 0x011c0005, 0x0501031c, 0x4f111308, 0x600f500f, 0x190f030f,
	0x5f094011, 0x03096f09, 0x01230f09, 0x820f0906, 0xab411824, 0x82232011, 0x050a211b, 0x0eab4118, 0x41182220, 0x2f220bab, 0x0282ed5d, 0x3c3f0030,
	0x17125d3f, 0x2b5d2f39, 0x2fed2b2b, 0x4118ed2b, 0x411814b6, 0x262108b3, 0x05955c26, 0xfe6e1520, 0x05646d05, 0x3233cb08, 0x01011336, 0x94d35e05,
	0xc99480fd, 0x6b590702, 0xcb9392cc, 0x722c5969, 0x73725656, 0x36725655, 0xfdfefefe, 0x61fe9f01, 0x9f2c7f05, 0xc2c28f66, 0x2aa3648f, 0x73562f01,
	0x73565574, 0x02f1fb73, 0x0035fdcb, 0x73000100, 0x460559fe, 0x4100ec05, 0x7b40a500, 0x2b03200a, 0x2b15201c, 0x2b220b25, 0x0b330234, 0x02432b34,
	0x2b450b43, 0x21581f5d, 0x275a2558, 0x02613f5e, 0x02702b60, 0x2b702676, 0x1b0b0b16, 0x2d2d020b, 0x02293431, 0x411d061a, 0x1d343d41, 0x1410100a,
	0x0f0d0c32, 0x002a170f, 0x20091009, 0x09090309, 0x7143231d, 0x4371002c, 0x0f01430f, 0x2f431f43, 0x6f433f43, 0x15370543, 0x0b0b1423, 0x1c235502,
	0x05820909, 0x10426831, 0xed2b2bf6, 0xf4105d5d, 0x3912e43c, 0x795d2f39, 0x332109da, 0x2010822f, 0x210f823f, 0x81613031, 0x06072605, 0x16160706,
	0x0c8c5815, 0x71343521, 0x1e4c13c7, 0x20308206, 0x091a5f15, 0x37460539, 0x1a0b4859, 0xbb030212, 0x2d772693, 0x325b1a09, 0x0202626a, 0x18122b13,
	0x33249840, 0x13030903, 0xaca21733, 0x0aa20c0e, 0x1356501c, 0x0202142d, 0x1daa4018, 0xffff2508, 0x0000c800, 0x01089d04, 0x28003602, 0x17010000,
	0x1e008d00, 0x0b007501, 0x0d0001b6, 0x2503020d, 0x00352b01, 0x05232585, 0x82c80738, 0x84312025, 0x00d72225, 0x2325868c, 0x09050a17, 0x70262587,
	0xd705e1ff, 0x25825007, 0x83fd3221, 0x008e224b, 0x31258296, 0x03114018, 0x29302900, 0x29702950, 0x29000204, 0x56840f24, 0x82355d21, 0x82b22057,
	0x84292031, 0x84382031, 0x008e2257, 0x2f318562, 0x20241002, 0x60244024, 0x00010424, 0x1d0d1e24, 0x82057d43, 0xff682631, 0x061d04e1, 0x2063828c,
	0x24318244, 0xe38d0016, 0x25ad8200, 0x37360002, 0x8787261d, 0x4321238f, 0x232385e8, 0x231d3735, 0xd6212397, 0x212385e0, 0x478e3438, 0x88db0521,
	0x828e206b, 0x401e3423, 0x390f0316, 0x02023970, 0x39103900, 0x39403920, 0x85390004, 0x355d2133, 0x7d85d384, 0x35885320, 0x85e2d721, 0x34412359,
	0x7d8c251d, 0x88b10721, 0xd3db2923, 0xb70d0000, 0x3a000203, 0x35214a85, 0x08dc8235, 0xfe690064, 0x04f30359, 0x00380077, 0x0f4f40e8, 0x023a4f3a,
	0x072a012a, 0x2d2a2526, 0x013b2f25, 0x25350739, 0x2f342d3b, 0x214f014b, 0x2d4f2540, 0x01592f40, 0x016c2553, 0x017a2566, 0x0b152575, 0x02081b08,
	0x3f2b2727, 0x03170423, 0x3138381a, 0x0d091a3f, 0x093d110d, 0x140c0c0d, 0xffb8062a, 0x1010b4d8, 0x08825502, 0x0fb4e423, 0x2308840f, 0x0d0db4e0,
	0xec240884, 0x0c0c4740, 0x06250982, 0x3a26201a, 0x20268340, 0x0bd2643a, 0x2e3a8d23, 0x2b1f8306, 0x0c201b2e, 0x55020b0b, 0x09090620, 0x10200582,
	0x08200584, 0x20214383, 0x221f8308, 0x4e398520, 0xb5640604, 0x113c2106, 0x43065973, 0x44431543, 0x17414306, 0x26272624, 0xdd643526, 0x4d213419,
	0xb705031d, 0x2d742592, 0x32581a09, 0x02036268, 0x64191d10, 0x0f331aef, 0x3913091f, 0x0eaca21c, 0x1a0aa00c, 0x2e16584e, 0x65040214, 0xff2d1601,
	0xff6a00ff, 0x066004e6, 0x0036028c, 0x05774248, 0xd541fd20, 0x21222305, 0xd5411812, 0x20238f07, 0x21238643, 0x23992021, 0x85f9d621, 0x20242347,
	0x478c0012, 0x88db0521, 0x828e206b, 0x40142b23, 0x2530030d, 0x02022560, 0x2a862500, 0x82355d21, 0x00a02497, 0x84460200, 0x82d52097, 0x00172597,
	0x0083fe8d, 0x01235183, 0x43050500, 0xff2108bf, 0x201b82eb, 0x22258a91, 0x8f97fe43, 0x02002325, 0x4b82f5ff, 0x063c2508, 0x0006008c, 0x4093000a,
	0x74017a3a, 0x74057a03, 0x01020406, 0x03050503, 0x08080509, 0x0c7f0400, 0x920c0001, 0x230c1f53, 0x060c0c0c, 0x25072553, 0x087f041a, 0x23530801,
	0x53088207, 0xdc4e0623, 0x05bc5508, 0xe54e1882, 0xb6fc2808, 0x55060909, 0x690b8808, 0x2b2505b1, 0xfd325d2b, 0x2a00822b, 0x2f5d33e4, 0x3f3f002f,
	0x4a2f332f, 0x260806e3, 0x03032301, 0x03331323, 0x02331123, 0x8e8f973c, 0x13e3b293, 0x1105bcbc, 0xf5fe0b01, 0x74f97b01, 0x00005d04, 0x82050003,
	0x052d21c5, 0x0805b75f, 0x97000b22, 0x01023d40, 0x04604407, 0x050a0401, 0x1a010809, 0x0001007f, 0x05701a04, 0x0d7f0501, 0x920d0001, 0xc4829986,
	0x08550222, 0x0821ca84, 0x24908406, 0x097f051a, 0x1bee5301, 0xf753ca85, 0x21ca850b, 0x7e5d8809, 0x47ca8a08, 0x3f2c0660, 0x39ed5d2f, 0x01303139,
	0x05333523, 0x13200382, 0x2d27cc83, 0x95febdbd, 0x82b5bdbd, 0xc31825cc, 0x25fac3c3, 0xff21c982, 0x06ff61ff, 0x3602532b, 0x00005100, 0xd7001601,
	0x05d94107, 0x0e172423, 0x092b4215, 0x7104e124, 0x23828c06, 0x23845220, 0x6d448d20, 0x19192206, 0x0a4f4206, 0x4320238d, 0xd62023a2, 0x1c212386,
	0x21478e18, 0x6b88db05, 0x23828e20, 0x0d40142b, 0x501d3003, 0x0002021d, 0x212a861d, 0xbb82355d, 0x83ff6a21, 0x85bb8373, 0x07054597, 0x4f8a2520,
	0x2382b120, 0xbb845720, 0xbb855820, 0xdf85ee20, 0x10181923, 0x8fdf8712, 0x02432123, 0x18232385, 0x97160918, 0xf8d62123, 0x1b212385, 0x84238e17,
	0x316b85bb, 0x0000fd8e, 0x020f4016, 0x1c501c30, 0x01031c60, 0x2c861c00, 0x355d4608, 0xbb000100, 0x5b048700, 0x0b001406, 0x26403c00, 0x000b0a07,
	0x05060401, 0x080606aa, 0x0f010803, 0x020d1f0d, 0x04026300, 0x0a090807, 0x28020601, 0x03706305, 0x5d2f0301, 0x3917ede6, 0x005de610, 0x39122f3f,
	0x380b822f, 0x25013031, 0x05132313, 0x33030535, 0x5b042503, 0x84056dfe, 0x016dfe05, 0x3b068293, 0x0a049301, 0x0378fc05, 0x05810588, 0x72fe8e01,
	0x02000005, 0xcc029a00, 0xec05bc03, 0x23087582, 0x40280017, 0x650f6a18, 0x750f7a15, 0x54150415, 0x540f0303, 0x2a0c0209, 0x2a120000, 0x33ed2f06,
	0x3f00ed2f, 0x5d200583, 0x14236382, 0x49222306, 0x07200688, 0x0a616218, 0xbc032308, 0xe8a9a9e8, 0xe7aaa9e8, 0x666686a5, 0x66638986, 0xa85c0486,
	0xa8a9e7e8, 0x66a8e8e8, 0x68668b8b, 0x73828c89, 0xfe9f5f08, 0x05600497, 0x001c00c3, 0x40cf0023, 0x3f0a3c54, 0x4b223020, 0x40204f0a, 0x53015a22,
	0x64016c11, 0x76017911, 0x761f7911, 0x1e1d0e23, 0x133f0d18, 0x1302134f, 0x47170d13, 0x0f030c06, 0x1c200505, 0x1c401c30, 0x47181c03, 0x0f03051c,
	0x02251f25, 0x20210013, 0x10102009, 0x18095502, 0x05820f0f, 0xecffb825, 0x840d0cb4, 0x40e03308, 0x020b0b18, 0x01092f55, 0x0c1d0009, 0x0304180f,
	0x19820908, 0x091e0326, 0xd0ffb806, 0x23078746, 0x0d1740fc, 0x06271582, 0x020c0c0a, 0x83200655, 0x08062331, 0x0b820909, 0x28059755, 0x172bed33,
	0x5d2f3239, 0x2300822b, 0x5d3c2fed, 0x2e052e4c, 0x123f2f5d, 0x33ed3939, 0x2f5d2f33, 0x54393911, 0xb208055a, 0x11231107, 0x34350026, 0x33113700,
	0x17161611, 0x26262315, 0x36361127, 0x11053337, 0x14150606, 0x47600416, 0xe37668b4, 0x0b01fbfe, 0xba6876dd, 0xae370b41, 0x33ad7873, 0x8727fe0b,
	0x1e4a98a2, 0x9dfe032f, 0x01156701, 0x01f2fa20, 0x6301162b, 0x2c03a1fe, 0x522ccb1f, 0x0ab9fc09, 0x03852955, 0xbdd21442, 0x0100d2b5, 0x00008900,
	0xee058b04, 0xba002100, 0x1d205c40, 0x1d321534, 0x151e0303, 0x411e251e, 0x5b0e530e, 0x730e6316, 0x090e7302, 0x4605181b, 0x081f080f, 0x0803084f,
	0x49141010, 0x020c0108, 0x014a2002, 0x1f230f08, 0x021f0223, 0x830e1b18, 0x201b3ff4, 0x06190508, 0x1905060f, 0x2002040f, 0x02004000, 0x0e020000,
	0x55020f0f, 0xf2ffb802, 0x23831140, 0x091c0223, 0x230f8209, 0x060f0f14, 0xe4231583, 0x840d0db4, 0x57f22008, 0x0223053f, 0x82090918, 0x0531410f,
	0x182b2b21, 0x31085567, 0x2bfd332f, 0x5d391132, 0x32fd3f00, 0xed39123f, 0x91442f33, 0x015d2e06, 0x3521215d, 0x23353636, 0x34113335, 0x0b446c12,
	0x21113d08, 0x14152115, 0x21150706, 0xfefb8b04, 0xb0b06776, 0x9869cdfd, 0x983e0a40, 0x018b8c56, 0x7c61fe9f, 0xcf450362, 0x8ab9bd20, 0x01c83601,
	0xce112201, 0x90a5302a, 0x3d8addfe, 0x0b39bb7e, 0x8e08bc82, 0x047ffeac, 0x00ef0568, 0x00610043, 0x057f40a9, 0x14270a05, 0x3e271d05, 0x4d423020,
	0x43204f10, 0x5c424032, 0x51165e10, 0x6e096332, 0x632b6a10, 0x05521132, 0x255f205f, 0x2d5b275f, 0x4250395b, 0x206a1f6b, 0x40653d65, 0x097c4261,
	0x2b74107c, 0x7b103174, 0x025f7450, 0x505f0718, 0x2f063a29, 0x3733330d, 0x11022f3f, 0x0f3f1511, 0x020d1f0d, 0x5f1b180d, 0x33075604, 0x26501b3a,
	0x1a471129, 0x07332911, 0x00102204, 0x56000001, 0x822f221a, 0x125d27f4, 0x2fed3917, 0x0483392f, 0x05821220, 0x5d2f0026, 0x3f2f32fd, 0x11200382,
	0x5d201982, 0x08915118, 0x011e1522, 0x814ef983, 0x33353705, 0x3233011e, 0x26343536, 0x27012e27, 0x35262726, 0x35373634, 0x0683012e, 0x2305934e,
	0x012e2315, 0x2805074d, 0x17011e17, 0x03161716, 0x841d823e, 0x2331822e, 0x0e07010e, 0x16204e82, 0x1e821b83, 0x013ecb08, 0x63766804, 0x41425861,
	0x577cc248, 0x4f0a5ca7, 0xa2866cb4, 0x90292d27, 0x5352d652, 0x54656672, 0xc7404340, 0x5ba85780, 0x79bd3a0a, 0x2b2ba97f, 0xc85b842b, 0x1cf7595a,
	0x1c1d211e, 0x5d272c4e, 0x163e1246, 0x1d1f2618, 0x262c511b, 0x42144360, 0xa26a5902, 0x912e0737, 0x328a4d5a, 0x1f1b3638, 0x613225c2, 0x19413857,
	0x34142517, 0x62815151, 0x300739a9, 0x83515992, 0x1c3a3234, 0x3c1bc21d, 0x4739575c, 0x15251717, 0xfe4f4f2e, 0x3a4121ab, 0x18174633, 0x150b0c1f,
	0x182d0914, 0x3231561a, 0x20171846, 0x13180a0b, 0x00002f0b, 0x01b90001, 0x04a40321, 0x000b000b, 0x0303b713, 0x06000009, 0xf6100c88, 0x2f002f32,
	0x88442f33, 0xa4032b0d, 0xdb9a9adc, 0xdc9a9adb, 0x07849602, 0x82dbdb21, 0x8930083f, 0x520495fe, 0x0d00d105, 0x24403b00, 0x08610853, 0x050f0102,
	0x064f0501, 0x02060601, 0x0f030caa, 0x020f1f0f, 0x04042905, 0x0d0f2902, 0x090d0d01, 0x5d275782, 0xed2f33ed, 0x823f005d, 0x2f5d2906, 0x30313c5d,
	0x1123015d, 0x2e3f0183, 0x24343501, 0x52042133, 0xce95d694, 0xf30401fc, 0x95fed201, 0x46f9ba06, 0xf805bc03, 0x82e8cfcc, 0xb951086f, 0x8d04e8ff,
	0x36001e06, 0x4140e600, 0x2e152e05, 0x342c132e, 0x34391339, 0x0e493637, 0x21533646, 0x1b7b2166, 0x1433340c, 0x3c1e153d, 0x002d0315, 0x3d0b0707,
	0x08260903, 0x34301b18, 0x060c1400, 0x0602061c, 0x06001b11, 0x25033014, 0xf6ffb800, 0x06fb57b4, 0x1640f633, 0x55020b0b, 0x25389000, 0x020c0c0c,
	0x090c2555, 0x21058209, 0xf848261a, 0x25088207, 0x0f0fb4e0, 0x08825502, 0x82052648, 0x06da6408, 0x2c842620, 0xe8200f82, 0x06202182, 0xeb202183,
	0x08845782, 0x4259fc20, 0x06262305, 0x0f820909, 0x4b378821, 0x2b20063d, 0xed230082, 0x18102b2b, 0x27086a5e, 0x39122f5d, 0x3f00ed2f, 0x098e5718,
	0x31393928, 0x015d0130, 0x57180014, 0x3628098c, 0x35363637, 0x35232634, 0x2a05b042, 0x22232626, 0x06060706, 0x6e231115, 0x6b0808b6, 0x07061415,
	0x04161615, 0xdbf1fe8d, 0x0a24732c, 0x4a38632a, 0x1f23216e, 0x9a9dc6d3, 0x581b1e16, 0x285c393d, 0x48bc2d25, 0x5eb33c40, 0x718ee5b7, 0xe101bea4,
	0x0fddfed6, 0x1218a50d, 0x7f34313a, 0x96a9a64c, 0x42238177, 0x1d231d1f, 0x5f842427, 0x3804c1fb, 0x3a3eb77c, 0x7097ae3b, 0x250920b2, 0x040000df,
	0x2eff9f00, 0xf0056107, 0x0805d546, 0x0037006e, 0x7c7a40ad, 0x70117c0d, 0x7a177013, 0x7327741a, 0x1a0d0736, 0x1a1e2304, 0x28142312, 0x10230e2c,
	0x162c1422, 0x23241821, 0x2336193f, 0x22471949, 0x0e6b1852, 0x14641064, 0x196a166b, 0x2a191a15, 0x29182818, 0x2825252a, 0x2a1b3118, 0x1d101d00,
	0x18031d4f, 0x90011d00, 0x0c1d011d, 0x00061dad, 0x06ad1200, 0x31aa1a28, 0x40191e31, 0x22081382, 0x151eaa30, 0x091e1d50, 0x500f0303, 0x3f000209,
	0x122f33ed, 0x2fed3939, 0x3c5d2fed, 0xed2f3912, 0x842f0139, 0x260f8212, 0xfd5d3371, 0x82392f3c, 0x10873014, 0x3031c0fd, 0x5d005d01, 0x21001001,
	0x84110020, 0x8a032005, 0x23072a0b, 0x23112301, 0x16322111, 0x05214417, 0x26343734, 0x2b012e27, 0x32331101, 0x013e3736, 0x05fe6107, 0x01829afe,
	0xfb010524, 0x01826601, 0xfe74fb25, 0x82cafe49, 0x01492401, 0x823601b7, 0xc0b73e01, 0xa2b5fedf, 0x5e3801a5, 0x3b3f3b7a, 0x1c206371, 0x35461f21,
	0x5a3e7f95, 0x02191f1d, 0x833a8b8f, 0x2231824a, 0x8444febc, 0x44200841, 0x0182bc01, 0x039dfe63, 0x221f1093, 0x81614961, 0x3824fd26, 0xfe0a1112,
	0x191713cb, 0x0300003c, 0x240c7341, 0x40960033, 0x0771416d, 0x72197924, 0x65410623, 0x18333707, 0x2a332433, 0x18442e33, 0x2a442441, 0x18542e44,
	0x2a542454, 0x6f412e54, 0x18623207, 0x24641d6a, 0x187f2517, 0x2a2c1801, 0xad0c1e18, 0x055e411e, 0x20331037, 0x33330233, 0x1f1b522f, 0x02252f25,
	0x52292525, 0x1b501521, 0x10644121, 0x2f32fd24, 0x04832f5d, 0x24086441, 0x5d2fed33, 0x1d5a413c, 0x010e0528, 0x35242223, 0x82460034, 0x07504505,
	0x36323324, 0x56413337, 0x72fe3922, 0xe34e9f56, 0x0d01f8fe, 0x3eac59de, 0x59a93610, 0x94999f8e, 0x10489d53, 0x081f5441, 0x2727574c, 0x01e1eaf6,
	0xb51c3002, 0xa5ab4628, 0x343aae9f, 0xaa000200, 0xf1061103, 0x0e00d105, 0x5f001600, 0x047b2340, 0x067a0578, 0x79020603, 0x0c0b010c, 0x0403010d,
	0x15080806, 0x13101212, 0x0d031550, 0x370f0b28, 0xc4ffb80b, 0x08821140, 0x28023608, 0x28070000, 0x10ae0f09, 0x13ae1428, 0xe4fde42f, 0x2f33ed2f,
	0x002b2bed, 0x333cfd3f, 0x3917122f, 0x5854435d, 0x6d045db4, 0x595d0204, 0x5d003031, 0x23112301, 0x27018203, 0x33112311, 0x0533011b, 0x36080e82,
	0x21352311, 0x147cf106, 0x19ef4fed, 0xbfbfee7b, 0xe502fce3, 0x4902e57f, 0x69021103, 0xca013dfe, 0xc00290fd, 0x7e0182fe, 0x02b5fd75, 0x0100754b,
	0x16051d02, 0x7806c303, 0x4727068b, 0x66005601, 0x78007600, 0x0937198b, 0x03132301, 0x95effec3, 0xfe8c06b3, 0x0076018a, 0x055a0102, 0x4dbe0318,
	0x26340641, 0x06021540, 0x05600144, 0x14000501, 0x0101010f, 0x00011404, 0x29057657, 0xed5d2fed, 0x3c5d2f00, 0xce4c3cfd, 0x03510809, 0xfec7c7be,
	0x05c7c763, 0xc3c3c318, 0x00010000, 0x051b00f5, 0x00fd0497, 0x40880013, 0x01121654, 0x07080b0c, 0x110e0304, 0x0d020112, 0x02900280, 0x02b002a0,
	0x03290204, 0x0d030c03, 0x04120103, 0x0e110753, 0x070d5308, 0x0b010b0f, 0x30011540, 0x257f8215, 0x0b080704, 0x17821201, 0x09262282, 0x04100d03,
	0x12492f06, 0x06402505, 0x5d2f0601, 0x2407da48, 0x5d391712, 0x2590825d, 0x39ed3333, 0x03822f39, 0x7b2f3221, 0xfd2305a7, 0x82c0875d, 0x82102000,
	0xc0c02b03, 0x21015d01, 0x21132303, 0x03842135, 0x03333e08, 0x03211521, 0xfd970521, 0x689968a0, 0xda0157fe, 0x02d2fd54, 0x6999695e, 0x24feab01,
	0x012f0253, 0x01b1fe6a, 0x0c019c4f, 0xfe4f019c, 0xf4fe9cb1, 0x00020000, 0x0700000e, 0x00d1056d, 0x08d7820f, 0x2f40ea36, 0x060b0304, 0x051b041b,
	0x052b042a, 0x044a063b, 0x064d054a, 0x120b124d, 0x14040313, 0x75060505, 0x02067c05, 0x060e100a, 0x55020c0c, 0xb801140e, 0x0bb4f6ff, 0x25053a6a,
	0x0f0fb4f4, 0x11825506, 0x0b40ea24, 0x09820d0d, 0x0c0c0a22, 0xec200f84, 0x2a05e75b, 0x06731501, 0x040b0801, 0x6dffb800, 0x0020063e, 0x2007f560,
	0x078d46d6, 0x40e72208, 0x020f0f1b, 0x101c0055, 0x40550210, 0x00000100, 0x0501050f, 0x34031464, 0x0a350d13, 0x40c0ffb8, 0x081f8313, 0x130a0a23,
	0x12350805, 0x0e030634, 0x08050135, 0xed3c3f00, 0x12eded3f, 0x2b2f3939, 0x30ed2fed, 0x5df61001, 0x05534b32, 0x39172b23, 0x05374ae6, 0x392bed37,
	0x5d303139, 0xc0fd1087, 0x5d01c0c0, 0x21112121, 0x21012303, 0x06807c15, 0x23110133, 0xfc6d0703, 0xd4f4fd50, 0x055202cf, 0x0213fd0d, 0x270383ed,
	0xefdb50fc, 0xd4fd2c02, 0x072f5318, 0x23027f08, 0xa7fd5902, 0x73000300, 0xda056eff, 0x1d004b06, 0x37002a00, 0x7640fe00, 0x0b000302, 0x120c0d0a,
	0x1c051a0f, 0x0d190311, 0x1a1f121f, 0x02551c15, 0x085a0454, 0x11590d59, 0x1750135b, 0x2a791c55, 0x03090b14, 0x1f1b0618, 0x110b1f0a, 0x261b1618,
	0x752f2709, 0x7f097f03, 0x7f0b7f0a, 0x7012790c, 0x70197018, 0x131b701a, 0x2f2a0206, 0x32042e1e, 0x090c3421, 0x06041b18, 0x34320215, 0x13840a06,
	0x152b2723, 0x21148400, 0x1d68000f, 0xb4e6250a, 0x55020909, 0xe2231182, 0x840c0cb4, 0x070b6408, 0x0f39732c, 0x390f0139, 0x393f391f, 0x47182703,
	0x06200dd0, 0x0f252a83, 0xf6103868, 0x051b562b, 0x0782e420, 0x17112b25, 0x82ed1039, 0x3f002704, 0x17123fed, 0x0a82fd39, 0x58544337, 0x510ab04b,
	0x06094058, 0x161a0f0a, 0x0a1a031a, 0x595d2e2e, 0x065e4a59, 0x77070221, 0x072605b5, 0x02261323, 0x62183435, 0x3725079e, 0x12160333, 0x08b04701,
	0x17161428, 0x27263401, 0xca771601, 0x05ec0806, 0x5c5963da, 0xc973a1fb, 0xcd849f4f, 0x5c606d65, 0x9a050158, 0x8e52c276, 0x6f65bc84, 0x90396ffe,
	0x42b46e59, 0x3a3b4540, 0x3a3c5c03, 0x913c68fd, 0x3eb76e59, 0xe8024243, 0x61ddfeb8, 0x373a6665, 0x642601e4, 0xb6c42c01, 0x62672101, 0xc9373768,
	0xfe64f4fe, 0x2e3a01d7, 0x4c4e4d2d, 0xe08c93e5, 0x8bb8014c, 0x43fc4be4, 0x4c502e2d, 0x0000e152, 0x00a10003, 0x045f079d, 0x0017007c, 0x00350026,
	0x05544072, 0x15310816, 0x292f1926, 0x3b2c2623, 0x4b1c4434, 0x56025134, 0x5f0a5f07, 0x51135a0e, 0x55185916, 0x6d026330, 0x6916630a, 0x64246c23,
	0x182d642c, 0xaf33af21, 0x0f120603, 0xaf2a0909, 0x0f15af1b, 0x3074187b, 0x002a2702, 0x000c1830, 0x2a1e3799, 0x1036990c, 0xe410edf6, 0x10393911,
	0x2f005ded, 0x33eded3c, 0x3939122f, 0xd9480782, 0x23022a05, 0x0e272622, 0x02222301, 0x059c4c35, 0x33013e25, 0x46051232, 0x3e2c0b1d, 0x26342501,
	0x07062223, 0x1e07010e, 0x30081d82, 0xf55f0736, 0x45de85cf, 0xbf8fd34f, 0x86cafae2, 0xd54f44de, 0xfce2bf8d, 0x60b83f68, 0x777f9c8a, 0x22397c6e,
	0x800c0325, 0x4a815876, 0x3c13331e, 0x081582bb, 0xef97023f, 0x9299f5fe, 0x0f019497, 0x0c01eed6, 0x9596919a, 0x7594f1fe, 0x859aa775, 0x395e61a6,
	0xa5860147, 0x67307847, 0xa677732c, 0xd7000100, 0xb505b300, 0x0f00b605, 0x29404500, 0x0f54030e, 0x08008201, 0x54040d27, 0x070aac08, 0x0111400c,
	0x11401130, 0x0aab0002, 0x0d010d80, 0x0501042a, 0x044007ab, 0x5d2f0401, 0x103cf43c, 0x220582fd, 0x823c5d5d, 0xfde42bea, 0x5d2f323c, 0x30313cfd,
	0xff7e2125, 0x06096305, 0xb505212b, 0x1c0222fb, 0x1c02e4fd, 0x080685a6, 0x019eb332, 0x21029ea6, 0xfe9edffd, 0x0002005a, 0x050000fe, 0x00710580,
	0x000a0006, 0x2c0b4063, 0x02290126, 0x02390136, 0xffb80004, 0x0b2440e2, 0x1e033718, 0x09330482, 0x03030854, 0x010c4000, 0x0c400c30, 0x09040502,
	0x1801040a, 0x450c2460, 0x33280539, 0x2bed2f2f, 0x5d30312b, 0x19256018, 0x01350126, 0x11010115, 0x0529a682, 0x047efb80, 0x0387fc82, 0x29078379,
	0xe3012f01, 0xb7e3017c, 0x018296fe, 0x00a01a26, 0x0c010200, 0x8e209b82, 0x65209b86, 0x00289b83, 0x00360629, 0x01040639, 0x26209b83, 0x05209682,
	0x05229b86, 0x9b880105, 0x9b850320, 0x0cd85f18, 0x5f189d93, 0x9d8214d9, 0x9d840282, 0x7efb8e28, 0x87fc7903, 0x9d838204, 0xfe12032d, 0x6a01b71d,
	0xfeb76a01, 0x8272fc1d, 0x0001389d, 0x0400006c, 0x00d105a7, 0x407f0018, 0x17161743, 0x15141618, 0x82151414, 0x150c2e03, 0x170c0e12, 0x17010018,
	0x00141801, 0x31028201, 0x0001004f, 0x09010804, 0x0c0f1406, 0x0f510c09, 0x15821006, 0x02132008, 0x10100551, 0x00180b15, 0x0b031516, 0x3f3f0008,
	0x11c0d0c0, 0xc02f3912, 0x3912c0fd, 0x82dd1039, 0x83012007, 0xddc4300c, 0x875dd6c0, 0xc100102b, 0x107d0587, 0x821801c4, 0x10c6261a, 0x2b1087c4,
	0x250e8208, 0x01013031, 0x01862115, 0x21352322, 0x01300186, 0x04010133, 0x0140fea7, 0x018efe74, 0xbc8efe72, 0x0e820685, 0x01d43d2f, 0x0550014c,
	0x2fb6fcd1, 0xba8a8a8a, 0x260482ba, 0xfd4a032f, 0x8293026d, 0xbe2508a5, 0x640464fe, 0x15005d04, 0x1140e100, 0x14050208, 0x4210050b, 0x08000905,
	0x02010c0a, 0xf4ffb813, 0x020909b4, 0x22088355, 0x820c0cb6, 0x001a2c08, 0x40e6ffb8, 0x0210100b, 0x441e0055, 0xfa2006ff, 0x21075746, 0x286db4e2,
	0x40e92f06, 0x0609091c, 0x17920055, 0x1760171f, 0xf0680d02, 0x830c2006, 0x1a092330, 0x1169b80a, 0x28088206, 0x0f0b40e0, 0x0a55020f, 0x8266830c,
	0x05b36b0f, 0xee200882, 0x08825484, 0x5484f120, 0x06211186, 0x20088255, 0x05f44cf3, 0x830a0a21, 0x880a2263, 0x0af44c16, 0x2b2bfd24, 0x25705d3c,
	0x230b8206, 0x3f003939, 0x2506c564, 0x21303139, 0x3d452723, 0x23112305, 0x027e3311, 0x37810805, 0x64043311, 0x813b0ab2, 0x427f565b, 0x9b20bcbc,
	0x36855d5b, 0x4a4176bc, 0xf3fd4046, 0xbafcf905, 0x3c435227, 0x00004003, 0xff950002, 0x057904e0, 0x002200ef, 0x40660031, 0x15021548, 0x292e161b,
	0x311b2404, 0x411b350a, 0x561b430a, 0x561a550a, 0x5620501f, 0x661a642a, 0x632a641e, 0x701b752e, 0x060f142e, 0x0c0c3f26, 0x19191d06, 0x021d3f15,
	0x0a063f2c, 0x29230f1a, 0x091a1412, 0x14290000, 0x064b4c09, 0x39391126, 0xed3f002f, 0x23054e50, 0x12ed2f39, 0x5d29af82, 0x07021401, 0x2223010e,
	0x06da4a26, 0x35013e22, 0x2105ae44, 0x3c503523, 0x011e2205, 0x0dce4403, 0x79049508, 0xcb55524e, 0x01f3c071, 0x9f5aca0d, 0x9e02024f, 0x4eb74e98,
	0x60c9510b, 0x2a3ecd89, 0x983ccb1d, 0x87a88d48, 0x22a38070, 0x45030b06, 0x7b98fea4, 0xcbfd627c, 0x342101e4, 0x1a3b1a41, 0x373fcad9, 0x6d2d2cc2,
	0xfece567c, 0xb6362fc4, 0xc29991aa, 0x005021be, 0xbb000100, 0x590543ff, 0x0c00d105, 0x6a40a900, 0x080f0301, 0x038b0b45, 0x0bd303d9, 0x01080106,
	0x32032b0b, 0x5d0b3208, 0x600a6603, 0x0203080b, 0x08090803, 0x040304b3, 0x0b0a0b03, 0x030202b3, 0x03251192, 0x0a010a61, 0x08238207, 0x040a072f,
	0x020c0c02, 0x0a0a0903, 0x0901096b, 0x04020204, 0x0b040903, 0x03053508, 0x000b3501, 0xed3fed2f, 0x2f391711, 0x335d2f2f, 0x0139122f, 0x8705822f,
	0x30312d0e, 0xed7a1087, 0x8701c087, 0x0887ed10, 0x0d8b0683, 0x715d2d08, 0x09352105, 0x15213501, 0x01150121, 0xfb590521, 0xfda10262, 0xfc6d0469,
	0xfd880285, 0xbdb40366, 0x029c02bf, 0xfdb0bc77, 0x73fd48a7, 0x9024e383, 0xfc053fff, 0x0b3ae382, 0x12408700, 0x00050703, 0x020a3509, 0x097f0070,
	0x00140402, 0xffb8015a, 0x7b49b4f2, 0x40de2a06, 0x060d0d1d, 0x0c080155, 0x3405820c, 0x0609091a, 0x7f016f55, 0x01010201, 0x0914050d, 0xffb8085a,
	0x822a84e0, 0xb4e72108, 0x08822983, 0x83b4f621, 0x2208822c, 0x830c40e6, 0x08002730, 0x08700860, 0x41490803, 0xede42305, 0x09873311, 0x3f005d29,
	0x2f3c3cfd, 0x4e30313c, 0x11350531, 0x35231123, 0xc8fc0521, 0xc6b0fdc6, 0x056c05c8, 0x051cfa23, 0x300383e4, 0x000100ae, 0x05000071, 0x005d0441,
	0x4077000b, 0x26b5840d, 0x04050a3e, 0x82b0001a, 0x84ee20b0, 0x20088285, 0x828584fa, 0x40dc2208, 0x20b38412, 0x83828306, 0x091a22ae, 0x439382b0,
	0x088205b9, 0x554afa20, 0x0b082105, 0xee21ac86, 0x222883b7, 0x8b010810, 0x822b20a7, 0xede42100, 0x412ca595, 0x3cfebcca, 0xd004cabc, 0x41fcbf03,
	0x9e200385, 0x2708a582, 0x0459fe8a, 0x001e0690, 0x40520021, 0x04000018, 0x11001e40, 0x0d401511, 0x1f230f0d, 0x10000223, 0x101a0900, 0xedffb819,
	0x0882b084, 0x8785d820, 0x831c1921, 0x780f8287, 0x1921054b, 0x2479822f, 0x32fd332b, 0x07d2772f, 0x312f0a82, 0x26230130, 0x07222326, 0x14111506,
	0x7b230607, 0x35080888, 0x11353637, 0x33363734, 0x04171632, 0x73200a90, 0x35348120, 0x34bc6968, 0x210a316d, 0x3581226c, 0xbd686834, 0x0536663a,
	0x3d150857, 0x9dfb953d, 0x0b6e6dce, 0x0c84b20a, 0xcc630423, 0x080c826f, 0x02000052, 0x13029700, 0xf005b003, 0x30002300, 0x37405700, 0x21060a0a,
	0x2116091b, 0x2125092e, 0x0e602955, 0x0e702960, 0x020b2970, 0x11522508, 0x1c082011, 0x2053181c, 0x2e010102, 0x1d060853, 0x2a022511, 0x2b000b1d,
	0x2f0b002a, 0x122fed33, 0x3232fd39, 0x43051e6c, 0x01250ce7, 0x3523015d, 0x06b4620e, 0x20051954, 0x05315437, 0x06222323, 0x06eb4307, 0x85031521,
	0x15560822, 0x32331614, 0xaab00336, 0x2d2c311c, 0xaf804951, 0xef4e4d5d, 0x22212488, 0xa8543057, 0xb82d0e27, 0xaabed94d, 0x4036b745, 0x525e5b4e,
	0x5e2a0283, 0x14132514, 0x6a84aa15, 0x1f242487, 0x40351206, 0x300a1213, 0x200dac0e, 0x74fe9fa9, 0x0f1004f5, 0x4c444d12, 0xe983434c, 0xe9827920,
	0x7751e420, 0x31220806, 0x015d2040, 0x0752055d, 0x6a040b52, 0x0215650f, 0x0209530f, 0x06035315, 0x00402a0c, 0x2a120001, 0x79630600, 0xed3f2a06,
	0x315ded3f, 0x14015d30, 0x076a4902, 0x56581220, 0xe427080c, 0xedc9c1f4, 0xf4c1c9ed, 0x7a7887b6, 0x787a8686, 0xeb010487, 0x0901fdfe, 0x0a01e5e5,
	0xacebfcfe, 0xaaaaaeac, 0x8200abad, 0x006b2456, 0x82210600, 0x27410881, 0x4940f100, 0x0d090909, 0x0d1a091a, 0x0d2c092c, 0x05300334, 0x13341130,
	0x13460346, 0x1d641a6a, 0x246a2164, 0x14251910, 0x0b160402, 0x26021f34, 0x16013518, 0x02122508, 0x02101016, 0x0f0c0255, 0x2105830f, 0x05820d0c,
	0x14121927, 0xb4f4ffb8, 0x8417820f, 0x82148308, 0x40f82e08, 0x0209090c, 0x15081455, 0x271c1402, 0x21228222, 0x35831140, 0x0d2e2222, 0x22253582,
	0x020c0c1a, 0x22158355, 0x840b0bb4, 0x69e02008, 0x222905f3, 0x150e2922, 0xffb81c17, 0x825184ea, 0x05a74608, 0xf6200882, 0x21056457, 0x3183041c,
	0x83081c21, 0x2f1c225d, 0x2300832b, 0x3311edc4, 0x12230986, 0x83ed3939, 0x3104850a, 0xfd3c3f00, 0x12ed3f3c, 0x30313917, 0x1121215d, 0x73183636,
	0xe4610811, 0x11172805, 0x35213521, 0x52350226, 0x20080547, 0x15070214, 0xfd210621, 0x2d8443a4, 0xe2f8382f, 0x2f3af8e2, 0xfd447f2f, 0xa8b401a4,
	0x017201d9, 0x08018236, 0xa8d972cb, 0x8501b401, 0x3a375a27, 0xfdc87099, 0x9e6ec8fd, 0x27573938, 0x7cae7bfe, 0xcc320158, 0x5a011601, 0xeafea6fe,
	0x58cefecc, 0x0003007c, 0x07e3ff68, 0x007c043f, 0x00430039, 0x40530152, 0x0b190b73, 0x26191c1d, 0x360d2004, 0x380d3204, 0x4241343d, 0x4a0d4204,
	0x5241423d, 0x5537520d, 0x610d634b, 0x134b6537, 0x2a4b1d16, 0x2e622e51, 0x137e0d7b, 0x247d1e7c, 0x38732e73, 0x470b4b7c, 0x70213c01, 0x12430143,
	0x30033343, 0x363d4018, 0x282c2c04, 0x0b04303f, 0x0f3f070b, 0x1841500a, 0x013a430a, 0x1244471a, 0x00043321, 0x012d0f47, 0x3a0c0c2d, 0x40f6ffb8,
	0x020c0c0e, 0x001a3a55, 0x10100c47, 0xb8475502, 0x0fb4ecff, 0x2308840f, 0x0d0db4e0, 0xec200884, 0x47232485, 0x820b0b0a, 0x1b2d260f, 0xf8ffb800,
	0x822d83b4, 0x84ee2008, 0x2208822d, 0x830b40d6, 0x4a45182e, 0x41f22008, 0x002605b7, 0x5440548f, 0x31824d01, 0x1e83b720, 0x001b4d28, 0xfaffb81b,
	0x3e831f40, 0x830c1b21, 0x1c1b2750, 0x55020909, 0x1e83141b, 0x83061b21, 0x851b228d, 0x06594853, 0x2bed3226, 0x2be4105d, 0x11220083, 0x07843939,
	0x2bed1031, 0x5d2f2f33, 0x3917122f, 0x3911fd2f, 0x18ed3f00, 0x22074964, 0x8311ed3f, 0x335d2314, 0xb44d32fd, 0x63212005, 0x152009af, 0x20057f48,
	0x43481806, 0x3636281f, 0x15123233, 0x82262627, 0x22232702, 0x26030706, 0x48183526, 0xaf080a52, 0xcdfc3f07, 0x8e34373c, 0x42d56f56, 0x6dd54e0c,
	0x154ceda6, 0x943f325c, 0x6cd39673, 0x24015f65, 0x28292ea2, 0xb34f3c70, 0xce370d5a, 0x39d39f65, 0xd97dca45, 0x2505b6fb, 0x4f6d2220, 0x9119b485,
	0xc0691514, 0x74614f52, 0x02c16376, 0x34a2722f, 0x34532d30, 0x683b23cd, 0x1c501367, 0x98c22f24, 0x272a997c, 0x413d031c, 0x11171755, 0x0fbf242a,
	0x525b5d26, 0xfb00ff68, 0x2566443e, 0x8c962c27, 0x84356bfe, 0x1509034b, 0x5f535b14, 0x0300565c, 0x6cff5d00, 0xd9047104, 0x21001700, 0xef002b00,
	0x08003f40, 0x190a140f, 0x00042629, 0x02250018, 0x09210484, 0x3e068314, 0x2b321d3d, 0x2b421d4d, 0x21020607, 0x04251826, 0x063e1b29, 0x04151209,
	0x29040f03, 0x840a033e, 0x221e2913, 0xb4f8ffb8, 0x55020909, 0xf4240882, 0x0c0c1440, 0x1b230982, 0x82060900, 0x7b0c2027, 0xae77054f, 0x103f250d,
	0x00550210, 0x2c05587e, 0x2d0f2d90, 0x2d3f2d1f, 0x1e042d6f, 0x21438304, 0x3f830c1e, 0x0c1b1e29, 0x020b0b16, 0x83180c55, 0x080c2113, 0x0c231383,
	0x820d0d04, 0x2c852111, 0x2105e641, 0xe5412bed, 0x17112307, 0x0d821039, 0x2a12994f, 0xb558510c, 0x13391308, 0x4f2e1302, 0x5d2d0594, 0x015d015d,
	0x22230010, 0x23072726, 0x086e6213, 0x07333727, 0x26251616, 0x06d95926, 0x08098d4f, 0xfe7104a7, 0x8f54ebe8, 0xab6e853b, 0x1701534b, 0x368e57ed,
	0x4c9b6f74, 0x25bcfe54, 0xaa9b3763, 0x44022322, 0x40fe2223, 0x963b5f27, 0xfe2e02ae, 0x2ac4feef, 0x0001c627, 0x0193e24d, 0x2c3d0111, 0x4ce7ac23,
	0x1d1ddce0, 0x9461d2dc, 0x612b0136, 0x61fd3698, 0x00d91e1f, 0x71000200, 0xbe03e2ff, 0x0300d105, 0x6d002000, 0x220f4c40, 0x1302221f, 0x3a1e231e,
	0x4b143a05, 0x400d4005, 0x430f400e, 0x52055c16, 0x65056f0f, 0x7a1a650e, 0x10097a05, 0x01137f12, 0x12071013, 0x03035501, 0x341c2020, 0x2b020a07,
	0x1f100303, 0x2f168270, 0x04200a13, 0x15190401, 0x332f0a04, 0x125d2fed, 0x2905c966, 0xfd3f00ed, 0xed3f2f32, 0x6c181233, 0x23230987, 0x4a133335,
	0x362806a7, 0x37013e37, 0x0e113335, 0x0806b85a, 0x3632333b, 0xc8023337, 0x53f6cccc, 0xf9d770ba, 0x9d3a3b45, 0x9e3cb344, 0x9944362e, 0x39c56779,
	0xd3fe040a, 0x281e57fa, 0x9662abd1, 0x29653e3e, 0x21cffee1, 0x7c2f2861, 0x426f714e, 0x21d58225, 0x04822301, 0xd5840320, 0x27000727, 0x07071740,
	0x38a98200, 0x090f0805, 0x035d0401, 0x0f5d052b, 0x02022002, 0xe45d2f02, 0x005de4fd, 0x2096823f, 0x055a542f, 0x1323132b, 0xccf90133, 0x1ae00acc,
	0x326383aa, 0x0037042f, 0x00d20001, 0x02b00539, 0x000500fa, 0x82184029, 0x0f542159, 0x402ae182, 0x07300107, 0x01020740, 0x2282402a, 0x2f040028,
	0xed5d2f33, 0xdf5b5d5d, 0x30313205, 0x21112325, 0xb0052135, 0x04cdfbab, 0x210239de, 0x082482a0, 0x69ff8629, 0xfc06c906, 0x4a000800, 0x07152c40,
	0x07440733, 0x07040772, 0x14060807, 0x02030203, 0x29080907, 0x69085908, 0x82080408, 0x0101352c, 0x51030400, 0x08070606, 0x2f000802, 0x3939122f,
	0x2f01ed2f, 0x8d086582, 0x10873031, 0xc0c05ddd, 0x08fd1087, 0x095d00c0, 0x23012301, 0x01092135, 0x90fcc906, 0xed80fe66, 0x39018901, 0xfc06da02,
	0xe1036df8, 0x06cbfc8b, 0xff01005c, 0x0537ffdc, 0x00ef0500, 0x4077002b, 0x000b074d, 0x27082e1f, 0x2e0f270c, 0x35252921, 0x400f300d, 0x590f410e,
	0x66076622, 0x0b0c0e0c, 0x1d200708, 0x1d22211e, 0x1f2d0f22, 0x2009022d, 0x09221d20, 0x16001604, 0x461e080b, 0x12282121, 0x49040000, 0x16160228,
	0x1200491a, 0xcf5c1201, 0x22a1820b, 0x82303939, 0x17122ba4, 0x5d2f2f39, 0xc0c01087, 0x0382fdc0, 0x01303124, 0xb05c015d, 0x010f2605, 0x03211521,
	0x06b5480e, 0x5c352721, 0x372505e8, 0x33352313, 0x08706b37, 0x00058608, 0x29721d0a, 0x2a237e79, 0xa3fe4101, 0x405c1d67, 0x295c9841, 0x210a3450,
	0x817f2c5e, 0xf5d96723, 0x3e5c1a2a, 0x3a57993e, 0x2905344f, 0xa0771a0a, 0x16fe8ac2, 0x3534b086, 0xb409072a, 0xa780140e, 0xc68aea01, 0x3333a87b,
	0x00080a2c, 0x00f30002, 0x049805ca, 0x00190050, 0x406d0033, 0x06010a49, 0x080e0506, 0x061b0a13, 0x08280520, 0x52045b2d, 0x521e5b11, 0x640b682b,
	0x740b7932, 0x27271032, 0x1a1d5430, 0x08038223, 0x012a002e, 0x160d0d2a, 0x09000354, 0x00032a54, 0x00291910, 0x1a293300, 0x260d290c, 0x2f271a29,
	0xed3ced33, 0x2f33ed2f, 0x332f00ed, 0x2fed3333, 0x2f210b83, 0x2309875d, 0x015d3031, 0x6c0e516c, 0xf942094e, 0x096b6c05, 0xae081989, 0xb6149705,
	0x388c4d9e, 0x4b2c6841, 0x179b1c54, 0x8e489fb3, 0x2d6b3d3b, 0x9e13594c, 0x48a3ae19, 0x80273990, 0x14564e2e, 0x9eb7139d, 0x233a8a4d, 0x544b367c,
	0xc250041b, 0x342d4bc6, 0xb67c6037, 0x302e4ac4, 0xfd7d6d3b, 0x4bc3b8fc, 0x6e4c1f2d, 0x4ac8c07c, 0x634f1c2e, 0x0002007a, 0x05000032, 0x00d1059e,
	0x00060003, 0x4831404f, 0x02034702, 0x056a055a, 0x1a040502, 0x06030000, 0x0201011a, 0x03360239, 0x0364026b, 0x0375027b, 0x05030206, 0x08000003,
	0x02010501, 0x01540603, 0x3fed2f00, 0x2f013912, 0x172f3311, 0x30315d39, 0x82fd1087, 0x04220802, 0x015d00c0, 0x0101295d, 0x05020921, 0x0294fa9e,
	0x01080132, 0xfe50fe27, 0xfad10551, 0xfb7b04d7, 0x7b820085, 0xa200a639, 0x76047a04, 0x0d000600, 0x10405900, 0x0c730573, 0x0c400402, 0x830b3710,
	0xb8062404, 0x82b3c0ff, 0x820d200c, 0x1b402107, 0x03200882, 0x073ba482, 0x04070a0a, 0x01010005, 0x0b0c0000, 0x01074008, 0x2f080707, 0x125d2f33,
	0x82333939, 0x20068207, 0x24068500, 0x30312f2f, 0x2700822b, 0x01255d01, 0x09150135, 0x0684af82, 0x7a042908, 0x1002f0fd, 0x65019bfe, 0xdafd52fe,
	0x8dfe2602, 0x01bf7301, 0xa20155a3, 0xfeeffebc, 0xbe01d9ef, 0xc4bd0159, 0xdafedafe, 0xae20a183, 0x8220a182, 0x5726a186, 0x037c1040, 0xa18a0a7c,
	0xa1860220, 0x07820920, 0x821a4021, 0x080c2ba1, 0x0505080c, 0x01030401, 0xa1820040, 0x0b0a0123, 0x82a18208, 0x2f3321a0, 0xa7869982, 0x3921a083,
	0x229f8939, 0x82350109, 0x839f8302, 0x82042706, 0x7301dafd, 0x99828dfe, 0xf0fd3c22, 0x2308a582, 0x0210029b, 0xc442fe60, 0x26012601, 0x5743fec4,
	0x01bc5dfe, 0xbc110111, 0x03005efe, 0x0000b200, 0xdf00da05, 0x073d0982, 0x25000b00, 0x01051440, 0x0a040602, 0x00080955, 0x0401012b, 0x0805052b,
	0xed2f092b, 0x27028433, 0x17ed3f00, 0x21303139, 0x2006ff65, 0x24078305, 0xfdccccda, 0x200385d2, 0x200083df, 0x06996eff, 0x02010824, 0x996e0036,
	0x00432d05, 0x00750164, 0x0002b60b, 0x00050e0c, 0x2007f964, 0x2279821a, 0x88c8075e, 0x00d72225, 0x21258633, 0x25890b18, 0xe1ff7324, 0x2584da05,
	0x00003228, 0xd7001701, 0x25868b00, 0x6b243121, 0x5608058c, 0x00020000, 0x08000078, 0x00d1051c, 0x00250016, 0x001a40d0, 0x3022001c, 0x4022301c,
	0x7222401c, 0x720a7204, 0x721d741c, 0x35140b23, 0xc0ffb811, 0x0f0f2340, 0x11115502, 0x10341801, 0x17030d35, 0x01351534, 0x04141108, 0x55020c0c,
	0x04171414, 0x55021010, 0x49ffb817, 0x088205c7, 0xc749f620, 0x12172105, 0x0f822083, 0x0bb4fa23, 0x2421840b, 0x0f0fb4f6, 0x202a8306, 0x822183ef,
	0x0c112209, 0x240f840c, 0x092440fb, 0x2b098209, 0x03120e17, 0x27730007, 0x1207151f, 0x07273383, 0x02090916, 0x83060755, 0x68072e48, 0x2bf61026,
	0x10ed2b2b, 0x391711e6, 0x8509822f, 0x2bfd2502, 0xed3f0032, 0x6e05dd58, 0x212406c4, 0x27242221, 0x21066357, 0xc0583336, 0x11052308, 0x6e182223,
	0x08340a0b, 0xc4cefb1c, 0x9167fdfe, 0x4f98aeb3, 0x2e04e8f9, 0xfb0205fd, 0x86080383, 0x927a40fc, 0x81745fb5, 0xd05b6d71, 0x5b413692, 0xd7cf4601,
	0x33603c01, 0x68feb044, 0x04d7fdb0, 0x36207904, 0xababf842, 0x283944ee, 0x00030000, 0x07e1ff6a, 0x007c0476, 0x002b0024, 0x400c0137, 0x20042657,
	0x3004320d, 0x3b29320d, 0x3230322e, 0x40363b34, 0x400d4004, 0x402e4d29, 0x4d344030, 0x530d5336, 0x5c165c14, 0x531c531a, 0x620d6222, 0x7022621c,
	0x1b22720d, 0x122b3c01, 0x0f032b1e, 0x04213d28, 0x4b1b3f2f, 0x352c0678, 0x1e0a153f, 0x1a012b12, 0xf0ffb82c, 0x2505bd53, 0x0c0c1e2c, 0x0f825502,
	0x0b40fc32, 0x55020b0b, 0x2c012c7f, 0xb8250c0c, 0x1040f8ff, 0x252b1983, 0x182c001a, 0x0f0f0800, 0x82005502, 0x08eb5814, 0x2c83b420, 0xe4241182,
	0x09093340, 0x8f261b82, 0x01393f39, 0x0b830432, 0x830c3221, 0x1b322338, 0x23831618, 0x83181821, 0x08182113, 0x18271383, 0x020d0d04, 0x58851855,
	0x2b2005ff, 0x200a6949, 0x06484b39, 0x2b2b2b25, 0x4b3932fd, 0x3f290947, 0x391712ed, 0x3031ed2f, 0x0b4e1801, 0x6f222010, 0x0021051e, 0x05d96b11,
	0x23082b4b, 0x07062223, 0x080b784e, 0xfc76077d, 0x34343cdc, 0xcd6d528d, 0xbf620c46, 0x4ae8a869, 0xe983d145, 0x1701effe, 0x44c88ce3, 0xe18fd747,
	0x9103b7ec, 0x10af8b8d, 0x9993a4b8, 0x9292a7a0, 0x681b02a5, 0x2f313198, 0x2acd384f, 0x6f687a34, 0x013c0178, 0x01150111, 0x6a727939, 0xeff4fe81,
	0xa49b9b2a, 0xd5d77d92, 0xd7d4cce0, 0x000100d5, 0x043c0299, 0x00dc027d, 0x40180003, 0x0254010c, 0x0f050000, 0x02051f05, 0x185d2f02, 0x290bf855,
	0x1cfc7d04, 0x3c02e403, 0x338500a0, 0x84670721, 0xb6112133, 0x56183285, 0x07250d25, 0x0632f967, 0x282c83ce, 0x03edff02, 0x061603e5, 0x315f8214,
	0xb5520007, 0x100d1802, 0xffb80137, 0x0c09b3e8, 0x07820037, 0x09094025, 0x83063710, 0x86052015, 0x82042015, 0x13402107, 0x012e1582, 0x05010500,
	0x01060205, 0x0202b100, 0x0268b104, 0x333c2107, 0x42054c5f, 0x012405f6, 0x03330123, 0x16250383, 0xf0f1fe86, 0x2c0483ef, 0x2f02e503, 0x2f02d1fd,
	0x00020000, 0x207d8296, 0x277d86bf, 0x0400b950, 0x0e40e8ff, 0x05218182, 0x217e8218, 0x64821806, 0x20208384, 0x01201282, 0x02201283, 0x77851283,
	0x86070321, 0x06002b77, 0x5d2f0601, 0xed2f33ed, 0x7b8d3f00, 0x23010924, 0x03822313, 0xfebf0326, 0xa4a586f1, 0x06210483, 0x85798314, 0x8301207d,
	0x860121fb, 0x2e207d84, 0x0d20f992, 0x0123e384, 0x83020101, 0x255e8369, 0x312f5d33, 0xd8820130, 0xd1820120, 0x8a860125, 0x83f4f1fe, 0x010023cc,
	0x0782a000, 0x49843920, 0x00b92f27, 0x40e8ff00, 0x82b28e1a, 0x82032046, 0x02002346, 0xac820201, 0x883f0021, 0x25a4834a, 0xf1fe3902, 0x9b85a58a,
	0x0300002a, 0x0700d200, 0x1105ba05, 0x07310982, 0x41000b00, 0x0b002940, 0x08560b01, 0x075404ac, 0x2448820f, 0x0fac0256, 0x00871807, 0xab043c09,
	0x052d0b00, 0x0a4001ab, 0x5d2f0a01, 0x3cfde43c, 0x005d5de4, 0xedf45d2f, 0x82fd105d, 0x27b28204, 0x01331123, 0x01213521, 0x22080782, 0xeeeebd03,
	0x18fbfd01, 0x03fee804, 0xfe03eeee, 0x2bfd1301, 0x012bfda0, 0x00020013, 0x05c8ffac, 0x845405e0, 0x40573b77, 0x4704483b, 0x57045806, 0x67046806,
	0x70047f06, 0x057f0806, 0x07020770, 0xc9820005, 0x03300339, 0x03900360, 0x00b20304, 0x60023002, 0x04029002, 0x0120b202, 0x82020604, 0x02530847,
	0x332f1901, 0x2f2f1833, 0x00393912, 0xfe191a2f, 0x115dee5d, 0x30313917, 0x095d015d, 0xfde00507, 0x0266fd66, 0xfebd019a, 0x0143fe43, 0xfd8e02bd,
	0x02c6023a, 0x013afdc6, 0xfe23fedd, 0xffff0023, 0x64fe3d00, 0xdb057f04, 0x5c003602, 0x16010000, 0x6bdd8e00, 0x10250519, 0x700e600e, 0x237f820e,
	0x00040b0e, 0x26087f71, 0x04000006, 0x825007e6, 0x003c342d, 0x00170100, 0x01edff8e, 0x40190075, 0x0e000213, 0x84500e40, 0x01052b33, 0x05090e00,
	0x352b2500, 0x2482355d, 0x009aff27, 0x054b0300, 0x2ceb82d1, 0x3811401d, 0x68034803, 0x69016500, 0x2b268203, 0x02000003, 0x002f332f, 0x30312f3f,
	0x012daf82, 0x4b030123, 0x03a5f4fc, 0xfad1050c, 0x0831822f, 0x0000019c, 0xca04e5ff, 0x3300ec05, 0x9340da00, 0x02010458, 0x03012fb5, 0x02011db8,
	0x18471837, 0x18671857, 0x18e71877, 0x010718f7, 0x004a003a, 0x006a005a, 0x00fa007a, 0x062c0306, 0x09982950, 0x0f230901, 0x12f72050, 0x18120801,
	0x58122812, 0x12000412, 0x18150312, 0x19011927, 0x15341d19, 0x33280002, 0x33330101, 0x0a03342f, 0x02012027, 0x2c292023, 0x120f0004, 0x26040609,
	0x182a080c, 0x032a282a, 0x21212a00, 0x7100180c, 0x07341035, 0x15263407, 0x0b0b160c, 0x200c5502, 0x05820909, 0x1034683c, 0xed2b2bf4, 0x102f3912,
	0x3cf6103c, 0xc42f3911, 0x12115d5f, 0x17113917, 0xb5665f39, 0x5d5f2905, 0x33ed3f33, 0x11335d2f, 0x5f262582, 0xfd3c5d5d, 0x0483dd3c, 0x855d5f21,
	0x30312201, 0x05037f5f, 0x2303002a, 0x26263337, 0x37363435, 0x12210882, 0x05fd6200, 0x2326262e, 0x21070422, 0x06062107, 0x17161415, 0x16330882,
	0x36323304, 0xca043337, 0xf37eb96c, 0x863183fe, 0x82024b2c, 0x77610800, 0x013a5d2c, 0xbf8df374, 0xc6501054, 0x00ff9d7c, 0x2cdb0130, 0x03023cfe,
	0x7c010202, 0x31c4fe2c, 0x9d960801, 0x3e0f44b2, 0x2e012633, 0x15760401, 0x341a162f, 0x01017618, 0x2d292801, 0xcf3d41d1, 0x341876b1, 0x152e171a,
	0x3fd1b676, 0x0001003d, 0x02ac00ba, 0x006c04e0, 0x402c0006, 0x01057209, 0x070e4a04, 0x0c0c402d, 0x03033710, 0x01050400, 0x49010000, 0x312309ef,
	0x492b2b30, 0x022108e8, 0x07d749e0, 0xb401ac2a, 0xc7b30159, 0xe7fee7fe, 0xc2205582, 0xe8205582, 0x7d215587, 0x23558503, 0xc0ffb802, 0x05205584,
	0x03206682, 0x9e495593, 0xe8022106, 0x08079749, 0xfe600247, 0x1901c74c, 0xfec71901, 0x0200004d, 0x00004400, 0x1e065304, 0x1e000300, 0x21401c01,
	0x103a100b, 0x1a741a60, 0x02440104, 0x19151503, 0x0700113f, 0x0d1d3e0a, 0x08090505, 0x6001140b, 0xf4ffb805, 0x020c0cb4, 0x20088255, 0x053c54f6,
	0x001a052f, 0x0a140460, 0xeeffb804, 0x021010b4, 0x24088255, 0x0f1d40d0, 0x2209820f, 0x820d0d0a, 0x832a2005, 0x0a04232f, 0x0b820b0b, 0x09090a22,
	0xec272184, 0x0f0f0b40, 0x82045506, 0x26058221, 0x40f0ffb8, 0x8209091f, 0x20922209, 0x0c23711d, 0x0d0b1a24, 0x5583160a, 0x5724245b, 0x2a820537,
	0x1840ee2a, 0x55060d0d, 0x0c0c280a, 0x07200582, 0x0a285a83, 0x37100d40, 0x101f890a, 0x083e4818, 0x322b2b24, 0x0482fd32, 0x08c44218, 0x112b2b25,
	0x82e41039, 0x2fe42912, 0x3c3f002f, 0x32fd333f, 0x2a05e54f, 0x5d013031, 0x33352301, 0x18112303, 0x760d5654, 0x5a08068e, 0x04211515, 0x11d0d053,
	0xbcf9fdbc, 0xb7c87f7f, 0x0a29653e, 0x79226a1c, 0x05c9026a, 0x25fac318, 0x3efcc203, 0x319ebf03, 0x070dcfc1, 0x6b1408aa, 0x0100288c, 0x00004400,
	0x1e064704, 0x12011a00, 0x076c1940, 0x1902077a, 0x051a191a, 0x0c00163e, 0x12093e0f, 0x080e0105, 0x41010a10, 0x0882076f, 0x0a40f62c, 0x55020909,
	0x0a001a01, 0x6d41000f, 0x41088207, 0x0029066d, 0x020d0d0a, 0x0c2a0055, 0x2205820c, 0x830b0b0a, 0x822f8305, 0x066d4121, 0x06212183, 0x410f8255,
	0x0025066d, 0x0c091c92, 0x2023830c, 0x2e00820c, 0x1a0c5502, 0x160f1210, 0x55021010, 0x5cffb80f, 0x0f200692, 0x0f821f84, 0x8205925c, 0x05ea5508,
	0x6d410882, 0x24088205, 0x0d0db4ec, 0x20338306, 0x055659f0, 0x09080f23, 0x250f8209, 0x37100d40, 0x5018890f, 0x70410c8f, 0x2bed2213, 0x096e412b,
	0x3333ed2a, 0x30312f2f, 0x1123215d, 0x18053652, 0x0810c955, 0x4704375a, 0x358b2bbc, 0x490185a2, 0x7fbcbdfe, 0x45dee97f, 0x05bc2c90, 0x6c0c086d,
	0xfc9e2c8c, 0x9ebf0341, 0x0ed1bf31, 0x00000804, 0x00bb0001, 0x065b047c, 0x00130014, 0x0b394057, 0x11100f0e, 0xaa090608, 0x1312070a, 0x06040100,
	0x0a06aa05, 0x0c030c06, 0x1f150f01, 0x63100215, 0x2b059c70, 0x0e0d0c0b, 0x0a011211, 0x09032802, 0x2807a270, 0xed103cf6, 0xe6103917, 0x05a570e6,
	0x822f3921, 0x2003830d, 0x08aa7031, 0x3505112a, 0x03330305, 0x11251525, 0x700bb270, 0x088308b6, 0x05fb012b, 0x84017cfe, 0x01058105, 0x220483a2,
	0x827cfe84, 0x5efe2206, 0x32a98205, 0x01ff01fd, 0x001a03ec, 0x40160003, 0x0156020c, 0x182d0008, 0x2307408d, 0xed3f00ed, 0x22062047, 0x82efefec,
	0x001b2a27, 0xfef6ff01, 0x018f01ec, 0x202f821b, 0x05cd472e, 0xcd471920, 0x030f2f0d, 0x031f0101, 0xb1000301, 0x00ed2f02, 0xcc475d2f, 0x8f012d0c,
	0xa58af1fe, 0xd1fd1b01, 0x02002f02, 0x03214b83, 0x224b841f, 0x48510007, 0x212018e1, 0x002b608d, 0x05050105, 0x1f070f03, 0x49070207, 0x2f210c5d,
	0x16e2485d, 0xe2481f20, 0x84798508, 0x0756087d, 0xe3ff9500, 0xed05930b, 0x0f000b00, 0x27001b00, 0x3f003300, 0xc6004b00, 0x08099040, 0x18090a06,
	0x3c081a06, 0x08183e07, 0x18180a17, 0x3c191a17, 0x08293e16, 0x18290a26, 0x3c281a26, 0x0d463e25, 0x0d560f48, 0x0e680f58, 0x761f7917, 0x762b7925,
	0x76437931, 0x94180649, 0x2e0810b9, 0x3d512b43, 0x19401920, 0x49191902, 0x13375131, 0x400c4f0a, 0x0e0c020e, 0x3a002a46, 0x2a403a01, 0x0134003a,
	0x002a2e34, 0x34160116, 0x182a2816, 0x2621cb94, 0xed5d2f33, 0x82335d2f, 0x2fed2703, 0x3f005d2f, 0xf684fd3c, 0x3f3cfd25, 0x83ed3f3f, 0x315d241c,
	0x185d0130, 0x2033d794, 0x17997225, 0xb2bd742b, 0xb2bebab6, 0xb302bab5, 0xef9418fc, 0x833e2022, 0x2b32832a, 0x666459b2, 0x64665858, 0xe0340459,
	0x25029518, 0xdae0ae24, 0x2b83dddc, 0x8888ac27, 0x8787adad, 0x12594f00, 0x2800d623, 0x05594f01, 0x334f0f20, 0x0f177b0a, 0x2600d622, 0x01252584,
	0x020c1000, 0x0c7f4f03, 0x220aa54f, 0x84f8ff8d, 0x00022325, 0x7f4f0c0c, 0x234b8409, 0x36025007, 0x2206637b, 0x8250008e, 0xb70d2525, 0x11000102,
	0x657b4c86, 0x0c8b7b07, 0x3c004322, 0x8b7b4d84, 0x0089240d, 0x84d50200, 0x002c2873, 0x00170100, 0x8812ff8d, 0x7b042025, 0x5d24088b, 0x08030000,
	0xd622258a, 0xbf8827ff, 0x7e202589, 0xe2204b82, 0x4b859984, 0x24ff8e22, 0x192e2582, 0x00021340, 0x50104010, 0x70106010, 0xf2820510, 0x32820d20,
	0x5d352b22, 0x7f8fa584, 0x3eff4322, 0x73247f92, 0xda05e1ff, 0x73507f84, 0x008d2205, 0x23258478, 0x25250002, 0x22067350, 0x8f00ffff, 0x00d62225,
	0x2025868f, 0x07995028, 0x43222592, 0x4b92aa00, 0x7182b220, 0x71842920, 0x17413820, 0x6e002105, 0x01232584, 0x7c1f2000, 0x00200540, 0x8a07717c,
	0x00d62225, 0x2025865b, 0x06667c22, 0x71872593, 0x1f000122, 0x00234b87, 0x82bb0001, 0x04772b67, 0x0003005d, 0x02274074, 0x55180105, 0x0c281203,
	0x55060c0c, 0x09090600, 0x2c035518, 0x0c0cb429, 0xb8015502, 0x83b6fcff, 0xfc541838, 0xfb54180a, 0x2321270c, 0x77013311, 0x8182bcbc, 0x01013008,
	0x03110536, 0x008c06e1, 0x403a0006, 0x56055927, 0x66056906, 0x73057a06, 0x02010606, 0x60055003, 0x03057005, 0x03600505, 0x00500301, 0x82700060,
	0x051a57b3, 0x5d2f0025, 0x795d2f33, 0x0b340860, 0x33132301, 0xb99fe103, 0xe3e49bb8, 0x00011105, 0x7b0100ff, 0x2508e682, 0x1d05ed00, 0x53062c04,
	0x39001900, 0x02392340, 0x02490e35, 0x19040e45, 0x5209190d, 0x101f100f, 0x52161002, 0x5e830d10, 0x00281929, 0x0d00280c, 0x45ed332f, 0x078205af,
	0x47ed5d21, 0x7555050c, 0x04360819, 0x6f840b2c, 0x2f295c36, 0x34342741, 0x8e088304, 0x2a5d3267, 0x3321492f, 0x53060339, 0x25279a98, 0x4c5a2b2b,
	0x24279a97, 0x465c2929, 0x18010100, 0xfe033705, 0xc582d105, 0x09401429, 0x01105302, 0x4c000101, 0x2f310549, 0x3031ed5d, 0x21352101, 0x1afdfe03,
	0x3705e602, 0x08bd829a, 0x0513012e, 0x0602040e, 0x000d008c, 0x653a4056, 0x750c6508, 0x040c7508, 0x6006500d, 0x03067006, 0xaa0a0606, 0xf0034009,
	0x90d10203, 0x0203e003, 0x8b270484, 0x89010300, 0x82010350, 0x03592502, 0x07002a0d, 0x2a06235f, 0x5e2f00ed, 0x5d5e7271, 0x82715d5e, 0x21d98204,
	0x50563c5d, 0x06365709, 0x0a020438, 0xc5a9a9c5, 0x6b0ca609, 0x0e6b595b, 0xd6a88c06, 0x7884a8d6, 0x8b828478, 0x05210227, 0x05f50218, 0x28bb82db,
	0x4402b50e, 0x01150001, 0x8353822f, 0x352329b5, 0xd4f50233, 0xc31805d4, 0x2f08cc82, 0x09052d01, 0xb107e903, 0x17000b00, 0x2e404500, 0x0009510f,
	0x02093009, 0x01093031, 0x09600950, 0x09030970, 0x03511509, 0x0020290c, 0x00020030, 0x602b0482, 0x00d00300, 0x12000001, 0x832f0629, 0x72712198,
	0x33265883, 0x5e725d2f, 0x60835e71, 0x08179045, 0x92cce922, 0x92ccce90, 0x7591cb93, 0x76755858, 0x06755857, 0xc5c68f5e, 0xc4c48f90, 0x7677568f,
	0x76765757, 0x0127b982, 0x0359fe61, 0x82140070, 0x40243901, 0x1b020b15, 0x39012b01, 0x07120401, 0x03530b07, 0x002a0e0d, 0x332f0600, 0x3f28cb82,
	0x2f2f32fd, 0x055d3031, 0x4b586e84, 0x34352807, 0x1e332726, 0x7d700301, 0x06250aa2, 0x06029903, 0x08827d59, 0x491d2308, 0x00341319, 0x05560102,
	0x06770416, 0x0003008c, 0xb5420007, 0x04450045, 0xffb80002, 0x100eb3e8, 0x07820437, 0x82194021, 0x50072608, 0x70036003, 0x22008203, 0x839f0105,
	0x040223f4, 0x7f820402, 0x822f3321, 0x005d2383, 0xf682332f, 0x30313326, 0x5d2b2b01, 0x26079b50, 0xfefe7704, 0x83b0a98b, 0x8c062504, 0x76018afe,
	0xd7830383, 0x5ffe9f26, 0x0a007c03, 0x0e2cd785, 0x2b041e04, 0x04043b04, 0x1014140a, 0x0022d782, 0x1c612a0d, 0x87002005, 0x05c642d7, 0x36343526,
	0x010e3337, 0x0805c061, 0x03333723, 0x2a4b347c, 0x060da98b, 0x5306069b, 0x1151245a, 0x0e79fe08, 0x268f9e0c, 0x3c1b1a3e, 0x1b4e521e, 0x24698308,
	0x03110532, 0x07a543dd, 0x5901542f, 0x6b016402, 0x7b017402, 0x05060602, 0x23d18802, 0x02010260, 0x2008a543, 0x43cf8503, 0x032d0ba5, 0x1b330323,
	0xe4dd0301, 0xb99fe4e3, 0x26cb82b8, 0xff7b0185, 0x82000100, 0x00410861, 0x04000018, 0x00d10580, 0x40a6000d, 0x4b0b3b2e, 0x7a0a5a0a, 0x0b02040a,
	0x09040805, 0x01090903, 0x350c0306, 0x030a0801, 0x0f00000a, 0x08010f0f, 0x0305140b, 0x10100a02, 0xb8025502, 0x0bb4fcff, 0x2008840b, 0x05c767da,
	0x09080223, 0x230f8409, 0x0c0cb4ee, 0xea230884, 0x840d0db4, 0xb4e82408, 0x83060f0f, 0x82ec2033, 0x20088411, 0x842382ea, 0xb6fa2308, 0x08820909,
	0x4c0e6c21, 0x322c0ea2, 0x2f33115d, 0x002f2f39, 0x123fed3f, 0x28610782, 0x07270808, 0x33113735, 0x01150111, 0x80042111, 0xbaba52fc, 0xfe5d01c6,
	0x02e802a3, 0x95a39817, 0x78fd1a03, 0xfea31b01, 0x8607fee8, 0x022908df, 0x00140636, 0x4099000b, 0x5905492f, 0x03056905, 0x07040206, 0x0b040a01,
	0x0b0b0505, 0x03010803, 0x0d050008, 0x010a0092, 0x21bd830c, 0xba830c01, 0x051a0125, 0x68b80407, 0x088206a8, 0x2006154c, 0x82228404, 0x050c4c0f,
	0xf6220882, 0x2f830d40, 0x83140421, 0x880424de, 0x53f4100c, 0xf14b055c, 0xe6322105, 0xbd83be83, 0x822f3321, 0x54432dbe, 0x2005b558, 0x0b37100d,
	0xb2e0ffb8, 0x2b2a0782, 0x3031592b, 0x1107015d, 0xd4851123, 0x02372508, 0xadbcb536, 0x03b5bcad, 0x17fd917a, 0x9f8d6002, 0xfd18038a, 0xffff9471,
	0xe5ff8600, 0x01080205, 0x36003602, 0x1724d882, 0x4d00df00, 0x22068946, 0x571a3134, 0x6e2a08e1, 0xd703e5ff, 0x36028c06, 0x25825600, 0xdf00162c,
	0x0b0000ae, 0x370001b6, 0x23881834, 0x00007e23, 0x05eb4705, 0x49863d20, 0x49863220, 0x020a0d23, 0x07ab4806, 0x00005d24, 0x4984e303, 0x01200982,
	0x94204982, 0x0d224985, 0x2385050a, 0x18020021, 0x080ad348, 0x29000723, 0x090f1640, 0x0102094f, 0x05060106, 0x0b050102, 0x011f0400, 0x0501054f,
	0xfd3c5d2f, 0x3f3f003c, 0x053f5912, 0x015d0122, 0x07358d18, 0x82ae2821, 0xf6022c00, 0x64f81e03, 0x00001e03, 0x820e0002, 0xbc340899, 0x1200d105,
	0xef002500, 0x16382740, 0x02661648, 0x1b041168, 0x0b3c081e, 0x341a070b, 0x341f030c, 0x00760807, 0x071d1d01, 0x02001513, 0x55020b0b, 0xdeffb800,
	0x21070062, 0xfa4db4f0, 0xb4e62306, 0x1a840c0c, 0x2740fc24, 0x09820d0d, 0x0f27742c, 0x60274027, 0x1b090327, 0x1b83041e, 0x83081e21, 0x141e2d2a,
	0x0a07090b, 0x55021010, 0xdaffb807, 0x08824684, 0x8205b642, 0x84ee2008, 0x57088246, 0x07200627, 0x0f823484, 0x8205cf42, 0x18f62008, 0x82088b87,
	0x8306202a, 0xb6fd2345, 0x08820909, 0x6c586c20, 0x050e4205, 0x2106724f, 0xe3425d2f, 0x12ed2806, 0x005d2f39, 0x833fed3f, 0x39fd2208, 0x05416539,
	0x0606072e, 0x23112123, 0x21113335, 0x16170432, 0x070c8f18, 0x11232a08, 0x11211521, 0x37363233, 0xbc053636, 0xfb6693b1, 0xc488fecd, 0xda7401c4,
	0x98580201, 0x797acfaa, 0xbc8ac658, 0x97fe6901, 0x4a8518bc, 0xe402250c, 0x3f5e028f, 0x094d8518, 0x8f4cfe28, 0x392ac6fd, 0x5918e847, 0x5708073d,
	0x1f001e06, 0x84003100, 0x0d195b40, 0x01320d29, 0x2b392034, 0x01452d36, 0x20440d4c, 0x2d442b4a, 0x2d542b5a, 0x1e74056f, 0x0c102174, 0x093f2903,
	0x1d1a120f, 0x10101b04, 0x1b160309, 0x4f163f1b, 0x02160216, 0x0a033e2f, 0x1d1a111c, 0x1100031c, 0x260c0f12, 0x2f161f05, 0x23371782, 0x00091613,
	0x142c0900, 0x11ed2f06, 0x39122f33, 0x175d2fed, 0x43171239, 0x5d2706cf, 0x12112f33, 0x832f3939, 0x06ed6a10, 0x23001024, 0xea6a0022, 0x012e2506,
	0x37270527, 0x352b0582, 0x17011e21, 0x16071737, 0x7b3e0112, 0x54610618, 0x336e0805, 0x71043632, 0xe5f1e4fe, 0x1201ebfe, 0x569b6cca, 0xfe578720,
	0x54ed42f8, 0x27015d90, 0xd2256223, 0xa699ba42, 0x3431defe, 0xa54b0203, 0xa9a99356, 0x027b428f, 0xfebcfe7d, 0xf50e01a8, 0x350801e2, 0x4ad67035,
	0x438e61a2, 0x19102f51, 0x61801a43, 0x9bfe936d, 0xa93b8afd, 0x1e372096, 0x98af2b2d, 0x002caeb4, 0x0600ffff, 0xe6040000, 0xbf540108, 0xff8d2208,
	0x062b43e4, 0x4b0a0b21, 0x3d2609b1, 0x7f0464fe, 0x13558c06, 0xdd8d2108, 0x21052b43, 0x0a55090a, 0x00002405, 0x82c80002, 0x96270849, 0x1200d105,
	0xe2002100, 0x1f392640, 0x11551f49, 0x11801080, 0x00341b05, 0x1a070107, 0x010c2034, 0x09070c0c, 0x7d09030a, 0x132605de, 0xffb80015, 0xe342b4ee,
	0x40f82806, 0x0209090b, 0x420c0055, 0x230806d8, 0x0d2140f0, 0x2055020d, 0x40003000, 0x04007000, 0x0f236f00, 0x02233f23, 0x14071b0c, 0x100e0900,
	0x09550210, 0x8207a245, 0x06a24508, 0x7b180920, 0x056a19a8, 0x182a8205, 0x2408b17b, 0x0c0cb4e4, 0x23458306, 0x0909b6f2, 0x6c210882, 0x0ca24522,
	0x3232fd25, 0x7ff6105d, 0x5d200556, 0x2106e043, 0x5149ed5d, 0x015d3305, 0x06070614, 0x11232306, 0x11331123, 0x17163233, 0x7b181616, 0x370810c1,
	0xdb4e3c46, 0xc6c6c697, 0x43c285cd, 0x34ce5e53, 0x5a803038, 0x9877a7c4, 0x03292c2f, 0x39a95c13, 0xbefe484b, 0xf2fed105, 0xaa352c2d, 0x236b487d,
	0xcdfd191e, 0x66292d29, 0x07ab5a18, 0x00140627, 0x00200013, 0xab5a18ec, 0x1e01351e, 0x0b090640, 0xffb8140c, 0x0c0cb6f4, 0x1b145502, 0xf0ffb800,
	0x18075741, 0x2719a25a, 0x0d0d1d40, 0x90005502, 0x14de6c18, 0x1cd26c18, 0x22053452, 0x46ffb80c, 0x08840527, 0x060f0f23, 0x46088255, 0x088305ff,
	0x0c0d4023, 0x2212820c, 0x82090906, 0x21882105, 0x180dc76e, 0x2009795a, 0x755a18ed, 0xd76c181b, 0x474e2314, 0x5a18b342, 0x07262075, 0x3fd4fdb0,
	0x5a18fe55, 0x26080c76, 0xdc000100, 0xb0053c02, 0x0300dc02, 0x11401e00, 0x020f5400, 0x05400201, 0x40053001, 0x00000205, 0x2f332f01, 0x41005d5d,
	0x212805e1, 0xb0052135, 0xd4042cfb, 0x0805d95a, 0x00230126, 0x04690569, 0x000b00af, 0xd7174026, 0x0208d802, 0xd70102a7, 0x020bd805, 0x05010ba8,
	0x02940284, 0x2f190202, 0x28083d82, 0x5d013031, 0x715d0071, 0x01090725, 0x37010927, 0x01170109, 0xfe6f6905, 0x6f4cfe4c, 0x48feb801, 0x01b4016f,
	0x48fe6fb4, 0x210d8cd8, 0x2182b801, 0x36088282, 0x36022301, 0xd5059203, 0x2e000f00, 0x50051840, 0x030c0606, 0x01aa030e, 0x0205050e, 0x0e0c0f0f,
	0x0310022a, 0x5d2f0301, 0x3239ed33, 0x2f332f2f, 0x32fd3f00, 0x4b2f333f, 0x270805e5, 0x35231133, 0x3e373632, 0x11333701, 0xfd920333, 0x2df2ea99,
	0x2c251e6c, 0x02dd8703, 0x38027a36, 0x100c0d70, 0xdbfc282c, 0x00216782, 0x086782cf, 0xef05c73d, 0x45001d00, 0x15242d40, 0x15361825, 0x104c1835,
	0x106d105e, 0x19661865, 0x1875107d, 0x0b0f0f0b, 0x02021352, 0x0e01521c, 0x021c0000, 0x10162a08, 0x2f021016, 0x2f2f3333, 0x863912ed, 0x33ed227c,
	0x22f2832f, 0x82352101, 0x013e2177, 0x080dc46f, 0x0614153c, 0x07010e07, 0xfdc70321, 0x33a76408, 0x5a6b4a83, 0x0d30ac59, 0xb457af47, 0x377361bb,
	0x2002429b, 0x3e9c3602, 0x6767296e, 0x3d4c4554, 0x231ab41f, 0x97637d9d, 0x29662b5a, 0xa3820100, 0x030f5908, 0x00f005bc, 0x4077002e, 0x39032a16,
	0x4a0c4503, 0x5c0c541f, 0x64086b1f, 0x74087d23, 0xb8270a23, 0x3940c0ff, 0x2c370e0b, 0x0f52152b, 0x160f0116, 0x164f161f, 0x16cf165f, 0x160616ff,
	0x521d2121, 0x02250616, 0x520e0a0a, 0x2a1a0f06, 0x11221628, 0x2816222a, 0x1009042c, 0x00225e82, 0x2c792f09, 0x2fed2105, 0x0021d082, 0x18c9823f,
	0x28070242, 0x3939ed71, 0x5d2b3031, 0x22bf8401, 0x4b262223, 0x2b250ab7, 0x32333501, 0x08e79136, 0x011e1586, 0x3842bc03, 0x5e599439, 0x290e4aa5,
	0x85645dc3, 0x808f7076, 0x68636b70, 0x0e2cc34d, 0xaf5aad4a, 0x5f596ec1, 0x4b310383, 0x21232271, 0x24b31c1e, 0x554b473b, 0x444d8d3c, 0x243e473d,
	0x88231bb2, 0x1a72596a, 0x006f1108, 0xab00ffff, 0xa3070000, 0x3600d505, 0x00923b02, 0xbb003700, 0x00003702, 0x3c021701, 0xc3fd0404, 0x15402000,
	0x02080e02, 0x600e400e, 0x0b01020e, 0x0b5b0b2b, 0x0b7f0b6b, 0x35115d04, 0x00220282, 0x4186353f, 0x41924120, 0x84033e22, 0x26304182, 0x02031940,
	0x02030810, 0x5f0e1f0e, 0x030e7f0e, 0x35204590, 0x47834682, 0x89828c20, 0xed05792a, 0x3d022600, 0x270000a6, 0x91208982, 0x07248982, 0xbc033e02,
	0x36264782, 0x02032640, 0x03820836, 0x3036103e, 0x03367f36, 0x31003101, 0x314b3134, 0x316b315f, 0x0006317b, 0x3f090009, 0x03094f09, 0x05829a85,
	0x30085784, 0x3c000100, 0x74040000, 0x1100d105, 0x46409f00, 0x51090f0c, 0x063f062f, 0x0b060602, 0x054f3402, 0x10050501, 0x1034010b, 0x01032003,
	0x03030808, 0x3830822f, 0x010e1300, 0x0c0c0a05, 0x0a55020c, 0x0b0e0f14, 0x020f0f08, 0x0d160b55, 0x2005820d, 0x2715831e, 0xeeffb80b, 0x0b0b1740,
	0x0a280f82, 0x55060f0f, 0x0d0d140b, 0x0c210583, 0x2e05820c, 0x40f8ffb8, 0x0609090a, 0x3f0b2f55, 0x700b020b, 0x2b20058f, 0x332c0082, 0x322bfd33,
	0x33112f32, 0x2f335d2f, 0x2105b748, 0x0782122f, 0x0484ed20, 0x31393926, 0x11210130, 0x20072361, 0x05bf4823, 0x74043808, 0x8a023efd, 0x4a0176fd,
	0xb6c0b6fe, 0x058203b6, 0xab55fe26, 0xfe8beffe, 0x8b3401cc, 0xff001204, 0xff7300ff, 0x08a205e3, 0x00360201, 0x0000002a, 0x00d90017, 0x827501cf,
	0xfe6c2617, 0x06430459, 0x3117828c, 0x0100004a, 0xfed90016, 0xb60b0000, 0x31370002, 0x9d4a231a, 0x00892607, 0x07d50200, 0x20238250, 0x2423822c,
	0xffda0017, 0x06974724, 0x520c0d21, 0x003906af, 0xfe860001, 0x05020559, 0x014700ec, 0x4600b94f, 0x10b4f4ff, 0x44550210, 0x200886b8, 0x21088245,
	0x1283b540, 0x830e2f21, 0x842e2005, 0x842d2005, 0x0c2c2105, 0x2b211183, 0x0805830a, 0x0a0b0b5c, 0x0036001f, 0x1b0b1b3a, 0x2f36131f, 0x291f2a0b,
	0x2436242f, 0x390b3f46, 0x3927341f, 0x3436342a, 0x441f4841, 0x432a4827, 0x443e4b36, 0x5a035f41, 0x57325205, 0x6b445536, 0x6a046f02, 0x64326430,
	0x60426636, 0x7a057946, 0x7036702d, 0x75417537, 0x2b298644, 0x100e4020, 0x04831f37, 0x1a020635, 0x31280006, 0x1d34063f, 0x343c3838, 0x21210234,
	0x821d3425, 0x53143f7b, 0x0f0f0d0c, 0x14092a17, 0x55020f0f, 0x153f3709, 0x09091631, 0xb8315502, 0x0f40f0ff, 0x09820d0d, 0x0015282b, 0x091d3731,
	0xb8002004, 0x089c7aff, 0x0c311c82, 0x0055020c, 0x490f4974, 0x20024970, 0xe610486a, 0x0f42185d, 0x2b2b2509, 0x2b2f2fed, 0x0b544d18, 0x0c823f20,
	0xa14c1120, 0x15403705, 0x3f572858, 0x3f672868, 0x3f762879, 0x3f862889, 0x3f992897, 0x7f185d0a, 0x50181346, 0x7f181abd, 0x2c352a5d, 0x03033e68,
	0x74259ab3, 0x521a092d, 0x03626838, 0x15251402, 0x6f7f18a1, 0x3723362a, 0x192c1611, 0x0c0eb19d, 0x4e1c0aa2, 0x12291858, 0x3b3c0201, 0x817f18f8,
	0x6e6a0821, 0xd70359fe, 0x4a007804, 0x59404101, 0x0c092008, 0x04020937, 0x17021932, 0x2b202432, 0x3a20343b, 0x4b20433b, 0x5c1c5a3b, 0x5337522d,
	0x6b495246, 0x622d6b1c, 0x62466237, 0x7c1c7c49, 0x79377428, 0x8b42743f, 0x85248801, 0x1d3f8731, 0x25000317, 0x3506402f, 0x0b40391a, 0x8055020b,
	0x39390139, 0x04353e3d, 0xc0ffb81e, 0x12831540, 0x221e1e31, 0x0d091a3e, 0x0953110d, 0x140c0c0d, 0x5cb8062a, 0x0883063b, 0x2505424f, 0x0d0c1206,
	0x0f825502, 0x09b6f823, 0x26088209, 0xffb82538, 0x832040fa, 0x0c40280b, 0x55020c0c, 0x824c1b40, 0x55022308, 0x1383102f, 0x830a2f21, 0x822f2013,
	0x6ff42024, 0x2528051f, 0x382f001b, 0x1d04061a, 0x16095f18, 0x35832120, 0x83140021, 0x8e002f35, 0x1f4c0f4c, 0x5f4c3f4c, 0x054c7f4c, 0xa183161d,
	0x4b861d26, 0x5d2be610, 0x2d051a5c, 0x10391711, 0x2b2f2bed, 0x2bed2b2b, 0x07832f2b, 0x270c3342, 0x33ed3f2b, 0x112b5d2f, 0x2305974f, 0x0614012b,
	0x28180e42, 0x33352726, 0x32331616, 0xfa5e1836, 0x6f7f2227, 0x9b4f1802, 0x2815230d, 0x5f187c17, 0x6b26280c, 0x36132aa3, 0x4f18a21a, 0x182407aa,
	0x02020f2d, 0x271e5f18, 0x00ffff33, 0x05e5ff73, 0x02010846, 0x00260036, 0x00170100, 0x0819568d, 0x0c2c2d22, 0x08494d18, 0xe7ff6926, 0x8c06f303,
	0x46202582, 0x16232582, 0x4bce8d00, 0x242305f3, 0x440f0923, 0x498f07a5, 0xa800df22, 0x2106a544, 0x4d182b2e, 0x498f0993, 0x85f6df21, 0x22252149,
	0x4d084986, 0x6c000200, 0xfb04e1ff, 0x1b001406, 0x04012800, 0x053b3a40, 0x223c0c38, 0x283e2432, 0x0c4a054b, 0x2445224e, 0x0859284f, 0x12700869,
	0x5114010d, 0x1017171a, 0x04130118, 0x10412007, 0x26080304, 0x160a0742, 0x16018800, 0x041c1317, 0xd479ffb8, 0x42088305, 0x04290532, 0x402a1a1a,
	0x55020f0f, 0x5e751801, 0x08012308, 0x0f820b0b, 0x15841020, 0x09090c22, 0x2a220b82, 0x05820c0c, 0x0d0d0a22, 0xe8202784, 0x2005c75e, 0x200f8201,
	0x20378306, 0x05f279ec, 0x2a920129, 0x2a3f2a1f, 0x830c2302, 0x1b23242d, 0x83180a01, 0xb80a2548, 0x1940feff, 0x0a214c83, 0x464c831c, 0x042006a2,
	0x0a224c83, 0xf94a2985, 0xed322106, 0x0be08b18, 0x322b2b23, 0x3f0382fd, 0x10323232, 0x3f002fe4, 0xed3f3fed, 0x3f393912, 0x3c2f3912, 0x30313cfd,
	0x1123015d, 0x06063523, 0x0c667118, 0x82213521, 0x15332201, 0x98991833, 0x044e080c, 0x4dbcb8fb, 0xedc66ead, 0xb6444452, 0x4c865960, 0x6b0195fe,
	0x8cfeb8bc, 0x9c49734f, 0x509787b2, 0xfbf404a4, 0x5242750c, 0x11012e01, 0x4c4ddb8e, 0xce27244f, 0xfb9a9a86, 0x22790299, 0xc3ccd618, 0x010047cd,
	0x8406fcff, 0xfc061a05, 0x7b180300, 0x272c14dd, 0xfa1a0521, 0x1e0505e7, 0x00788406, 0x5a2fd55c, 0xd92a1263, 0x75013100, 0x02b60b00, 0x635a1100,
	0xff68210a, 0x0dcb5418, 0x00d6d922, 0xa1082384, 0x260b343a, 0x352b0125, 0x00020000, 0x065ffe1a, 0x00d1052b, 0x001e001b, 0x0f9c40d6, 0x2e051f05,
	0x40053e05, 0x0608701d, 0x0e4a1c38, 0x0e590f45, 0x1d050f57, 0x0a1c1d1e, 0x09870977, 0x10140902, 0x1e1d100f, 0x870c770b, 0x140c020c, 0x570e0d0d,
	0x7d0f580e, 0x040f730e, 0x401e340b, 0x55021010, 0x0d0d401e, 0x1e305502, 0x1e701e40, 0x1e091e03, 0x0e0d031d, 0x171b1b03, 0x100d0353, 0x0d010d7a,
	0x14000008, 0x200f062a, 0x1d0f0e01, 0x0c0d0406, 0x39102410, 0x5a104210, 0x74106a10, 0x10100710, 0x1b82206e, 0x0d0a2a08, 0x0d360d2b, 0x0d550d4d,
	0x0d7c0d65, 0x1f640d07, 0x5d5de610, 0x5d2ff410, 0x5d391712, 0x2f33ed2f, 0x3c5d3f00, 0x2f32fd3f, 0x1810823f, 0x3519049a, 0x06015d00, 0x26222306,
	0x37363435, 0x23032103, 0x23012101, 0x56550606, 0x02093807, 0x4b342b06, 0x1ea98b2a, 0x7cfd7906, 0x1e02c992, 0x1e020801, 0x55070661, 0x6b080563,
	0xfbfe91fd, 0x79fefafe, 0x909d0c0e, 0x01156a40, 0x0561fe54, 0x1b2ffad1, 0x4e521b35, 0x3103081b, 0x25fddb02, 0x00020000, 0x055ffe68, 0x0078042e,
	0x0147003a, 0x0b5d4033, 0x1a2b0511, 0x2a2b1612, 0x5f224405, 0x65405425, 0x62256c16, 0x7b127b40, 0x70257f1d, 0x040c0f3f, 0x0539041b, 0x16691659,
	0x363a3a05, 0x0a0d0353, 0x303d3c10, 0x0805745d, 0x24102821, 0x283f2024, 0x10414504, 0x0809300a, 0x2a330000, 0x01250f06, 0x3b190625, 0x09094049,
	0x43095502, 0x08830790, 0x0c164023, 0x2d12820c, 0x13252f1a, 0x1010062f, 0x122f5502, 0x05820b0b, 0xe6ffb822, 0x2105a076, 0x3383182f, 0x0d1a2f23,
	0x2115840d, 0x2f83b4fc, 0xffb82f28, 0x0f0fb4ec, 0x08825506, 0x0f40f224, 0x09820909, 0x0f49912d, 0x3f491f49, 0xb8420349, 0x83b6f8ff, 0x1b42272e,
	0xfaffb813, 0x56832540, 0x830c1321, 0x08132156, 0x13211783, 0x2152831c, 0x0b840c13, 0x4f830620, 0x48851322, 0x20069243, 0x09fa742b, 0x2b2b2b26,
	0xfd103911, 0x32230682, 0x412f3232, 0x3c2206b0, 0x9518ed3f, 0x12220949, 0x8a183f39, 0x35240d8f, 0x35373634, 0x2320ed74, 0x11151616, 0x210ac141,
	0x31841101, 0x2a05d041, 0x4b342e05, 0x0da98b2a, 0x18551904, 0x201c437d, 0x07e0411d, 0x5634fe2b, 0x645144e9, 0xa4637774, 0x054f57fe, 0x77133b22,
	0x1c567d18, 0x0afd2b08, 0x521e321b, 0x01081b4e, 0x053701fb, 0x61171314, 0x4d616055, 0xc800ffff, 0xb2050000, 0x36020108, 0x00002700, 0xdf001701,
	0x93432800, 0x1e212206, 0x05e14508, 0x00030029, 0x06e1ff6c, 0x82140627, 0x17470809, 0x0f012400, 0xff0000b9, 0x0e3c40c0, 0x18013710, 0x02370d09,
	0x37100918, 0x1e3d073d, 0x243b2034, 0x1e4f074d, 0x244b2045, 0x0a6a0a5a, 0x020b1470, 0x01160302, 0x1c090615, 0x05041241, 0x09422208, 0x0200000a,
	0x42061816, 0x0883070f, 0x0c0cb735, 0x1a065502, 0xffb80402, 0x101740fa, 0x04550210, 0x820f0f10, 0x0d062205, 0x2005820d, 0x821e8322, 0x05cb501b,
	0x23520883, 0x0a042505, 0x55060f0f, 0xdc230f82, 0x840d0db4, 0xb4e82308, 0x08840c0c, 0x1a40f624, 0x09820909, 0x3f261f26, 0x0c1f0226, 0x1f294083,
	0x180c041b, 0x55020b0b, 0x08a6450c, 0x631c0c21, 0x04200a1d, 0x0c226b83, 0xa6452585, 0x093b6d0a, 0xfd332b28, 0x32322b2b, 0xa345332f, 0x33332e0a,
	0x5d30312f, 0x2b2b2b01, 0x13230301, 0x10a64501, 0x18331121, 0x270cfc7a, 0x7ffa2706, 0xbcfdfe98, 0x17017b18, 0xfe140627, 0xf9f90107, 0x097b18ec,
	0xffff211b, 0x08073b56, 0x00160245, 0x000000e7, 0xfec80001, 0x05cd045f, 0x002000d1, 0x0c0c40e3, 0x2d041c04, 0x04043d04, 0xb80f3512, 0x2040c0ff,
	0x55020f0f, 0x0f100f00, 0x090f0f02, 0x030b350e, 0x09163513, 0x1c202008, 0x000d0353, 0x49002a19, 0x08200a90, 0x0f84fe83, 0x0c0c1b3b, 0x06065502,
	0x0a03100c, 0x0f227314, 0x130f0122, 0x0e0a1414, 0x55021010, 0x073c560a, 0x3c560882, 0x56088205, 0x0882053c, 0x23063c56, 0x0909080a, 0xe6242a84,
	0x060f0fb4, 0x0c523383, 0x23218205, 0x0c0cb4e2, 0xf6231184, 0x820909b6, 0x216c2108, 0x20074858, 0x2300822b, 0x5d32fd32, 0x2908b36e, 0x002fed33,
	0x2f32fd3f, 0x3d563c3f, 0x2b712405, 0x453031ed, 0x21200a14, 0x21088a4d, 0x57431521, 0xcd042c0a, 0x8b2a4b34, 0xfd060ba9, 0x18d503c7, 0x2007a09a,
	0x083743fe, 0x0c0e7927, 0x33248f9e, 0x8247181d, 0x45b02007, 0x5e080613, 0x00020000, 0x045ffe6a, 0x007c0460, 0x0033002c, 0x0d4540d7, 0x261e1a1e,
	0x2b0d2904, 0x3a04341e, 0x3b1e3c0d, 0x4b044432, 0x59324b0d, 0x6c2a500d, 0x792b600d, 0x1232780d, 0x53151919, 0x3c010d1d, 0x30233333, 0x0f04293d,
	0x070b0b23, 0x1209233f, 0x0f0e202a, 0x2055020f, 0x40f8ffb8, 0x820b0b1d, 0x090e2209, 0x26058209, 0x0c1a1a20, 0x8340350c, 0x40352b0b, 0x55020c0c,
	0xf6ffb82d, 0x09843a40, 0x20001a22, 0x002a0783, 0x350f358f, 0x353f351f, 0xa4593303, 0x261b2206, 0x21428318, 0x36831026, 0x83082621, 0x04262824,
	0x55020d0d, 0x42348526, 0xfd3005ad, 0x105d322b, 0x2bed2bf4, 0x2f332b2b, 0x2f33113c, 0xed2d0882, 0x33ed3f00, 0x3f39122f, 0x2f3912ed, 0x07b344ed,
	0x200da779, 0x09524607, 0x2405b579, 0x37363435, 0x867c1826, 0x9b4a241b, 0x46030251, 0x34290565, 0xa98b2a4b, 0xfef80406, 0x947c18eb, 0x311f3a15,
	0x12301409, 0x081b4e52, 0x9e0c0e9f, 0x1232188f, 0x012a0112, 0x01120104, 0xa57c1842, 0x057f4407, 0x2a0cdd61, 0x012200df, 0xb60b0075, 0x620f0001,
	0x6a240a51, 0x6004e6ff, 0x0a675a18, 0x48fddf21, 0x23210513, 0x1f5a1820, 0x00c83209, 0x08760400, 0x00360201, 0x0100002f, 0xfe8d0017, 0x214986c0,
	0x9b620708, 0x00ab2409, 0x84510200, 0x864f2025, 0x828e2025, 0xb52f2f25, 0x03700270, 0xffb80302, 0x0c09b3c0, 0x07820237, 0x82114021, 0x04012908,
	0x049f044f, 0x06000102, 0x07365a18, 0x35115d25, 0x825d2b2b, 0x84002044, 0x0639086f, 0x00050014, 0x40a50009, 0x0b0c0716, 0x0808370d, 0x03020109,
	0x08013504, 0x0f0b0000, 0xb806010b, 0x1540eaff, 0x0837100e, 0x37100b0c, 0x04080606, 0x0e010814, 0x55021010, 0x07b45601, 0xb4560882, 0x08012306,
	0x18840909, 0x11ad9d18, 0x0fb4e424, 0x3383060f, 0x0db4ea23, 0x2308840d, 0x0c0cb4e6, 0xf8230884, 0x820909b6, 0x186c2008, 0x260af49c, 0xed322b2b,
	0x822f332f, 0x441120a7, 0x2c0806b0, 0x30312f33, 0x21212b01, 0x21113311, 0x13230303, 0x52fc7604, 0xc3e802c6, 0x05987ffa, 0x05dffad1, 0x0107fe64,
	0x000200f9, 0x030000bb, 0x27d38254, 0x00070003, 0x010d40a6, 0x0228d383, 0x01060302, 0xb8000805, 0x2320ca82, 0x0220ca82, 0x0025ca83, 0x1f020f00,
	0x21008202, 0xb4830c04, 0x0c0c0427, 0x0455020c, 0xce79181a, 0x05e97230, 0xffb80523, 0x82d884e8, 0x56ec2008, 0x05210530, 0x20d68304, 0xde791805,
	0x20ce820a, 0x21d982fd, 0xd9835d2f, 0x3f3f0023, 0x20d48533, 0x25ce8201, 0x33112303, 0xcc825403, 0xbcbcfc22, 0x82074745, 0x410220c5, 0x053005a3,
	0x000500d1, 0x40950009, 0x2f560722, 0x08080108, 0x2406a241, 0x07072d06, 0x05a74101, 0x41140421, 0xe0443395, 0xb8012205, 0x05e044ff, 0x80460882,
	0x41088205, 0xed281495, 0x2f33115d, 0xed2f3912, 0x2306eb5d, 0x3031ed5d, 0x82069341, 0x069341c0, 0xe9e99c2b, 0xdffad105, 0x0b015701, 0x06914100,
	0xcb826220, 0x0700033b, 0x24409100, 0x06065605, 0x01010201, 0x6f2d0708, 0x02067006, 0x0c000606, 0x092f5909, 0x29507818, 0x0c0cb424, 0xb1845502,
	0x88065942, 0x068041c3, 0x09100126, 0x01550609, 0x250d8041, 0x332b2bed, 0xbf825d2f, 0xc6833f20, 0xb782bd82, 0x03830120, 0xbcbc772d, 0xe7e7eb01,
	0xf4fb1406, 0x43000901, 0x052305d7, 0x18010838, 0x64081b61, 0x012307e9, 0x180b0c00, 0x26091b61, 0x040000b9, 0x828c065f, 0x4e512025, 0x0029055d,
	0xb60b0000, 0x18190001, 0xc75a180e, 0x00c82208, 0x22498c00, 0x5da200df, 0x499908c7, 0x851cdf21, 0x171a2749, 0x0125020e, 0x9383352b, 0x220f5765,
	0x828c00dd, 0xb70d2649, 0x29000203, 0x057e6526, 0x6a212784, 0x195c18ff, 0xd8dd230d, 0x25840000, 0x061a1d23, 0x844c8300, 0x20978325, 0x20e18498,
	0x05494435, 0x84f6ff21, 0x00022597, 0x0b062122, 0xe1827387, 0x84720321, 0x865520e1, 0x86382025, 0x131523e3, 0x6218120a, 0x4b8b0b49, 0x0a00df22,
	0x23214b86, 0x224b8920, 0x8c000092, 0xffdf224b, 0x234b8660, 0x030a1316, 0x415f4b87, 0x008d220f, 0x254b8414, 0x32330001, 0x25871f1a, 0x200f415f,
	0x06f75e8d, 0x06353623, 0x08238432, 0x00010040, 0x0459fe00, 0x00d105ee, 0x40a5001b, 0x1c070c2f, 0x3c072c07, 0x0c0c0407, 0x0d085310, 0x1a351801,
	0x08160203, 0x2a130b0b, 0x1f1d0f05, 0x031d4f1d, 0x01055b00, 0x02090902, 0x18140155, 0xdd76ffb8, 0x10182506, 0x55060f0f, 0xfc230f82, 0x840c0cb4,
	0xb6fa2308, 0x08820909, 0x18195b21, 0x2008e491, 0x21468219, 0x0f835502, 0x3e83b420, 0xf2200882, 0x11852c82, 0x0d0db728, 0x194f5502, 0xa9551901,
	0x2bf42106, 0xfd230082, 0x4be4322b, 0x3323069c, 0x4632fd3f, 0x112008dd, 0x13256118, 0x2111232a, 0xee042135, 0x0903ecfd, 0x240a6563, 0xfd320305,
	0x25de82ec, 0x1404fb21, 0x45512248, 0x361e2608, 0xb0210517, 0x3bfd8200, 0x0259fe3e, 0x009e05fd, 0x40ef0030, 0x0d080c30, 0x1e08191a, 0x2f082b1a,
	0x07083c1a, 0x3505dc52, 0x3e1c2520, 0x051f2022, 0x30181703, 0x183f2c30, 0x7f324f09, 0xf2520232, 0xb4ea2606, 0x5502100f, 0x20e38206, 0x82c183b4,
	0x52f42008, 0x062c05e0, 0x03062318, 0x328c001c, 0x0c25221d, 0x2530ee83, 0x020c0c0c, 0x1f1a2555, 0xffb81c1d, 0x101140de, 0x1c263782, 0x020f0f20,
	0x1f841c55, 0x14737a18, 0x82057b44, 0x05fc4a1a, 0xee200882, 0x2d059e6d, 0x0909021c, 0x1c4f5506, 0x1c021c7f, 0xb85c3188, 0x832b2006, 0x32322600,
	0x322b2bfd, 0x0862492f, 0x2f33ed2e, 0xfd3f005d, 0x39122f32, 0x33333f39, 0x47410882, 0x06252106, 0x2215e352, 0x18262223, 0x24179170, 0x02101c0c,
	0x66621804, 0xab14210c, 0x11a17018, 0x03070325, 0x41182c12, 0x1724086b, 0xcbb7102f, 0x11b17018, 0x00ffff22, 0x042f0082, 0x020108ee, 0x00370036,
	0x00170100, 0x42eeffdf, 0x0b2306c3, 0x42070608, 0x3608059f, 0xff3e0002, 0x077a03ea, 0x001b0005, 0x40d4001f, 0x1c040b51, 0x2a042a04, 0x3a1e2a1d,
	0x4a1e3a1d, 0x551e4a1d, 0x691c641c, 0x791c741e, 0x1f1f0e1e, 0x07100b1e, 0x180d1e3e, 0x2d09fd71, 0x02217f21, 0x1e1e1c1c, 0x8c000e10, 0x72180821,
	0x1a230d02, 0x1800080a, 0x2422f271, 0x020d0db4, 0x24278255, 0x0f0fb4e2, 0x055b6106, 0x840d0d21, 0x41ec2008, 0x0720058d, 0x26058d41, 0x02077f07,
	0x41208807, 0x8e410d8d, 0x32f62406, 0x412f3911, 0x3f26078a, 0xfd333333, 0x0f822f32, 0x01303124, 0x0350255d, 0x23112605, 0x33113335, 0x05721811,
	0x0313230d, 0x72181323, 0x7d231609, 0x18987ffa, 0x25150d72, 0x11fe5206, 0xcb69ef01, 0x00163d11, 0x005063db, 0x025b4079, 0x21000901, 0x50214001,
	0x0321a021, 0x012110ef, 0xbd012190, 0x50341182, 0x02218021, 0x4021108b, 0x03217021, 0x21c021b0, 0x900321f0, 0x02210682, 0x2a058359, 0x100321e0,
	0x90216021, 0x82310321, 0x21e0252b, 0x1f210f01, 0x34832a82, 0x02210523, 0xab661801, 0x00352608, 0x72715d11, 0x8302825e, 0x725d2206, 0x2302835e,
	0x35355e71, 0xb12d9183, 0x5704e1ff, 0x3602b107, 0x00005800, 0x24918201, 0x0d000000, 0x233d82b7, 0x1609171d, 0x6a087545, 0xdd240fcf, 0x75017800,
	0x24202785, 0x8806846a, 0x1881204d, 0x210a4561, 0x4d870add, 0x4d8a1820, 0x220f2364, 0x4207008d, 0x0d200767, 0x2206ff63, 0x6400ffff, 0x17240d23,
	0x68ff8d00, 0x20067745, 0x84258a0b, 0x5007214b, 0x3d20bf82, 0x1724bf82, 0x3900da00, 0x64094361, 0x05210d6f, 0x642582db, 0xda21056f, 0x05a74692,
	0x6f640b20, 0x01240808, 0x0000c800, 0xd1058a04, 0x81000500, 0x01030e40, 0x00030435, 0x070f0700, 0x03140201, 0xb4d2ffb8, 0x55021010, 0xfc230882,
	0x840b0bb4, 0x063e4a08, 0x09080323, 0x4d0f8409, 0x21820599, 0x8205474a, 0xb4d82408, 0x83060f0f, 0x05e44733, 0xa8481182, 0x45088205, 0x0322058c,
	0x985f066c, 0xed2b220a, 0x05384a5d, 0x30312f33, 0x23112101, 0x8a042111, 0x03c604fd, 0xfa2105c2, 0x209782df, 0x05a16c03, 0x00f00530, 0x00230017,
	0x40bd0027, 0x04000422, 0x9e180b06, 0x272020e1, 0x0921ba83, 0x3b058310, 0x26603525, 0x09262601, 0x15790976, 0x15341b02, 0x09342102, 0x2726270a,
	0x15180f26, 0xec59dc8b, 0x23118205, 0x0c0cb4e2, 0xf024de84, 0x0d0d2840, 0x732e0982, 0x01290f29, 0x291f290f, 0x1e03293f, 0x9e180f15, 0x682111df,
	0x22d38428, 0x845d5ded, 0xed2b3107, 0x2f393912, 0xed3f002f, 0x125ded3f, 0xed5d2f39, 0x29e09e18, 0x35210323, 0xe49e1821, 0xfdac2423, 0x1873028d,
	0x0828e99e, 0xb3060135, 0x69000300, 0x2406f0ff, 0x1d00e105, 0x37002a00, 0x1c408700, 0x322c1824, 0x2b062515, 0x09150932, 0x08031608, 0x32251e2a,
	0x0f6a0065, 0x00151e04, 0x56faffb8, 0x00370562, 0x000f1532, 0x18152b07, 0x14070425, 0x0c0c100f, 0x080f5502, 0x59f6ffb8, 0x0825055f, 0x020d0d0a,
	0x240f8255, 0x0a1140f1, 0x2d09820a, 0x1f383908, 0x6f393f39, 0x04399039, 0xfd82115d, 0x2b2b2b37, 0x17ed2bc4, 0x2fc41039, 0xed2b2fed, 0x3f2f005d,
	0x2f393912, 0x2e0385ed, 0x14013031, 0x06060706, 0x35231507, 0x77272626, 0x3626057f, 0x33353736, 0xe3621615, 0x11272109, 0x36211282, 0x09cb5236,
	0x16176b08, 0x59240616, 0x8af4554f, 0x57f686c5, 0x4c56594f, 0xc595f351, 0x4b4ff694, 0x3b40ce57, 0x5e6a8e3a, 0x4241329a, 0x8e6a8efd, 0x43413a3a,
	0x029b3140, 0x49d98cf3, 0xa6035d4f, 0x525a03a6, 0x888cd84a, 0x5e514ccc, 0x039b9b04, 0xd0494e62, 0x39a6637f, 0xfc023438, 0x2f390286, 0xacfeae3c,
	0x36017a03, 0x61aa3737, 0x2d3ab670, 0x2d58003c, 0x04433106, 0x0013007c, 0x40d90020, 0x2a032a16, 0x301a3c20, 0x0c838d18, 0xb8100a2b, 0x1540c0ff,
	0x1237100b, 0x8a8d1805, 0x0cb6271b, 0x0255020c, 0x1b58001a, 0x18002008, 0x261f7a8d, 0x0f0b40ec, 0x7555060f, 0xec240875, 0x09092f40, 0x92280f82,
	0x3f221f22, 0x101b0222, 0x1b2b5183, 0x0b16081b, 0x0855020b, 0x82090918, 0x83062005, 0x02082313, 0x0b820d0d, 0x0a638520, 0x0d0e5806, 0x2b2bfd24,
	0x07583232, 0x30312409, 0x52215d2b, 0x35201059, 0x200d5952, 0x568d1804, 0x2c4d0825, 0xb6fc3427, 0x1f227c02, 0xcfc7cadc, 0x02000047, 0xe1ff6a00,
	0x14067304, 0x28001900, 0x2940f200, 0x20051c03, 0x15261517, 0x0e3a0a3b, 0x213e1c3a, 0x0e490a4c, 0x214f1c4a, 0x0e6b1753, 0x207a0e7b, 0x3611217b,
	0x02264626, 0xe0ffb81d, 0x83cf83b4, 0x40210808, 0x371c121d, 0x110a181d, 0x1d171d37, 0x130f050c, 0x2601103e, 0x110a033f, 0x0c1d0011, 0xffb81a0f,
	0x832a84f8, 0x10402108, 0x1a26fe83, 0x0f14001b, 0x8018402a, 0x4121118f, 0xe0481810, 0x0f2a2d0a, 0x3f2a1f2a, 0x042a6f2a, 0x04230f0f, 0x6c596c83,
	0x18062007, 0x59176680, 0xa34c0761, 0xe4102205, 0x05cb552b, 0x11220e82, 0xcf443939, 0xfd3f2605, 0x33333f32, 0x3718822f, 0x5d30315d, 0x23001001,
	0x34110022, 0x36363736, 0x27262637, 0x21152135, 0x5509de42, 0xb9080a9f, 0xebfe7304, 0xebfef1ee, 0xb4454056, 0x66b44c5c, 0xcffd2a03, 0x965dde44,
	0x6e6ec276, 0x3f429142, 0x999caa55, 0xfe2702a6, 0x01cafef0, 0x8d06012f, 0x524840c5, 0x48873f11, 0x2e0a9eb3, 0xfb88549c, 0x56e487a4, 0x32353008,
	0xd0c97fae, 0x000100d3, 0x03e6ff6d, 0x007804ee, 0x4098003d, 0x26122643, 0x493b363b, 0x59184401, 0x6a185401, 0x640b6f01, 0x7a017918, 0x7918740b,
	0x0f357422, 0x2b3f2c0c, 0x1a16032b, 0x163e1e1a, 0x393d3d04, 0x1909033f, 0x0c09402b, 0x1b242b37, 0x2b0c1010, 0x00090419, 0x40c0ffb8, 0x37140928,
	0x7f3f0000, 0x023f803f, 0x0c0c1033, 0x1b335502, 0x07830809, 0x0b180929, 0x0955020b, 0x82090918, 0x3e862305, 0xfe82f610, 0x5d2bed33, 0x2b2f3311,
	0x2f391712, 0x2f2b2fed, 0x33ed3f00, 0x07e2562f, 0x3139ed23, 0x06794830, 0x2006f843, 0x07ff4335, 0x2d097c7b, 0x06060706, 0x17161415, 0x33331616,
	0x42182315, 0x67080b2d, 0x33373632, 0xce6bee03, 0x46a44f73, 0x79715745, 0x415f6c5b, 0x624fa240, 0x420d5aa4, 0x4e2d64c3, 0x3833232a, 0x35682d30,
	0x643e9e6f, 0x3431292a, 0x38652529, 0x0d47e866, 0x202a3040, 0x5e7f2728, 0x07269060, 0x595c8418, 0x20212275, 0x33cf1c21, 0x0f140b38, 0x443d2c43,
	0xa6030e0f, 0x4a111109, 0x154a353b, 0x3e481413, 0x0805bf42, 0x040f0532, 0x0011007c, 0x40a7001d, 0x35153a16, 0x45154a1b, 0x3f0e041b, 0x3e15050d,
	0x3f1b0409, 0xb80f0a03, 0x0b40c0ff, 0x0e370d0b, 0x0f0c090e, 0xb8120603, 0x82069142, 0xb6f42708, 0x55020c0c, 0x4b181b12, 0x3b260d68, 0x55021010,
	0x1a831a00, 0x1f90002f, 0x1f6f1f1f, 0x09041802, 0x18550209, 0x2013830c, 0xe8821818, 0x1e852119, 0x0a644b18, 0x2b2bf42f, 0x2b2bed2b, 0x33391712,
	0x3f002b2f, 0x220183ed, 0x4230315d, 0x102d0674, 0x16323300, 0x21152117, 0x34071616, 0x0bec6926, 0xe9e75408, 0x01ecfef1, 0x6a37ed1a, 0xfee0011d,
	0xc2443ee0, 0xa4a19aa4, 0xa8989ca7, 0xe7fe2e02, 0x3c01ccfe, 0x13011101, 0x09163b01, 0x7fc249a5, 0xcde0d6d7, 0x00d7dad1, 0x0a000100, 0xee030000,
	0x07005d04, 0x1e407d00, 0x3f040103, 0x00400506, 0x0002054f, 0x84020005, 0x0c0221b9, 0x0226c583, 0xb803051a, 0x4548eaff, 0xb4f42507, 0x55020f0f,
	0xe8231182, 0x840d0db4, 0x40f32408, 0x820c0b22, 0x362d8409, 0x0f0f0603, 0x03a05506, 0x030203b0, 0x0f080903, 0x4f093f09, 0x46097009, 0x5d200543,
	0x0282e282, 0x2bfd3325, 0x4c2f322b, 0xe182064b, 0x11214408, 0x35211123, 0xfeee0321, 0x6cfebc6c, 0xb803e403, 0xb80348fc, 0x020000a5, 0x64fe6800,
	0x7a04ea05, 0x24001d00, 0x1640b800, 0x0f741535, 0x09102102, 0x3e21370c, 0x050f041a, 0x17770322, 0xffb81701, 0x820f40f0, 0x3e173813, 0x0c050906,
	0x1e7a1475, 0xffb81102, 0x0d1c40c0, 0x11113710, 0x84041722, 0x067852cd, 0x12051a2c, 0x55021010, 0xf8ffb805, 0xc1831140, 0x1d840520, 0x0b040523,
	0x2215840b, 0x832640f4, 0x050527f5, 0x001b1e0c, 0xd8820c0a, 0x003a2008, 0x268f0001, 0x261f260f, 0x2660264f, 0x01260f04, 0x850c1b14, 0xedf61025,
	0xf4105d5d, 0x47ed2b5d, 0x2b32051d, 0x2b2bed2b, 0x2f333939, 0x3f005d2b, 0x5d2bed3f, 0x06833939, 0x20053744, 0x47e28205, 0x12330617, 0x06153337,
	0x16141502, 0x36361117, 0x03002033, 0x82232634, 0x05720809, 0xfea9feea, 0xdd82bbf3, 0x765e5551, 0x9488e585, 0x4b21bde1, 0x01300127, 0xc1e0c35d,
	0x4002d3ce, 0xc4fefdfe, 0x0172fe0f, 0x4551068e, 0x9f86c44a, 0x118a1201, 0xa7f6fe63, 0x0306e6bd, 0xfe0102e8, 0xb8fbfed5, 0x0ab2fcdb, 0x020000e8,
	0x59fefcff, 0xaeff1a05, 0x07000300, 0x0f402000, 0x01015002, 0x05500608, 0x0000040d, 0x2f020509, 0x2f331133, 0xe9550033, 0x30312605, 0x21352105,
	0x25038211, 0xe2fa1a05, 0x03831e05, 0xfe78ca32, 0xff0078ab, 0x002301ff, 0x05dc0300, 0x003600d1, 0x23083982, 0x04001701, 0x0000d901, 0x14401e00,
	0x0d200203, 0x0d6f0d5f, 0x00010d03, 0x05100500, 0x0503057f, 0x35355d2f, 0x00380383, 0x029a0001, 0x05c6032a, 0x001600f0, 0x1400b94d, 0x09b3e0ff,
	0xb815370c, 0x28080785, 0xf8ffb813, 0x1b171740, 0x13100137, 0x53080d0d, 0x030e0213, 0x00002a01, 0x2a0b1018, 0xc0ffb80d, 0x370a09b3, 0xfd2b2f0d,
	0x08a48232, 0x3f00ed54, 0x2f33ed3f, 0x2b333912, 0x012b3031, 0x1123012b, 0x2e272634, 0x06222301, 0x11231107, 0x013e1533, 0x15163233, 0x0eacc603,
	0x404d1615, 0xab418d41, 0x54a24bab, 0x2a02a69a, 0x6a461502, 0x43232424, 0x0345fd32, 0x453e68ab, 0x0200abb9, 0xe5ffc800, 0xcf82ca08, 0x004e2708,
	0x4035015d, 0x04180b21, 0x2e01194d, 0x554d2018, 0x66186a31, 0x794d6531, 0x79487513, 0x0d5a7352, 0x100e2005, 0xb2823d37, 0x82314021, 0x112d0808,
	0x04461a00, 0x403f033b, 0x3f370d0b, 0x3b3e433f, 0x3501354f, 0x371e353b, 0x24343e21, 0x2c033431, 0x29503457, 0x2b292901, 0x032c3456, 0x21c48207,
	0x29825740, 0x0e07073c, 0x2009033e, 0x4a4f3a2b, 0x3437024f, 0x20201a1f, 0x0606331a, 0x1d381a46, 0x01821a3e, 0x1a112008, 0x0f5f0000, 0x134f015f,
	0x0d083322, 0x3355020d, 0x020c0c12, 0x7f335f55, 0x33330233, 0x830c2a57, 0x0c2a2f0d, 0x55020909, 0x0e2b132a, 0x55021010, 0x5e72b82b, 0x4b088206,
	0x2b2106c7, 0x82208308, 0x05be4b0f, 0xea210882, 0x234c83b7, 0x2b012b70, 0x25060351, 0x2b2bfd2b, 0x0c833332, 0x5ded393c, 0xed2f3311, 0x2f2f3333,
	0xed393912, 0x12112f33, 0x39ed2f39, 0x2f005d39, 0x0e823f2f, 0x663f2b21, 0x122105be, 0x82168417, 0x825d2027, 0x622f202d, 0x2b2206ce, 0xc27a5d2b,
	0x35272505, 0x17161633, 0x2106bb62, 0xf2492726, 0x11232108, 0x06200182, 0x2009e26c, 0x27248332, 0x33353317, 0x36362115, 0x210a0d46, 0x18841415,
	0x01161623, 0x213d8334, 0xc76f2323, 0x08c90806, 0x6abee2ca, 0x17093dba, 0x61352d47, 0x43796645, 0x37622a55, 0x120f6e7e, 0x0c7cb5dd, 0xcc4d2f3b,
	0xf4bc30a0, 0x4748b486, 0xb5780a58, 0x73247f01, 0x3eb55531, 0x5bb14009, 0x563b7259, 0x722e642e, 0x365efa84, 0x57832f37, 0x9678112e, 0x01272f2f,
	0x3cc29b42, 0x3113d322, 0x4c1e1a16, 0x1644485a, 0x2610130b, 0x44256e95, 0x034efc26, 0x2f7945b2, 0xd5fd4d4d, 0x302dd105, 0xdc64932f, 0x301812dc,
	0x4935c924, 0x48464f4e, 0x0c180c17, 0x4f028e1e, 0x1f24754d, 0x2da3fd1d, 0x006d302f, 0x8900ffff, 0x3e06ebff, 0x3600d105, 0x00002c00, 0x2d001701,
	0x00005403, 0x0b403f00, 0x0101230f, 0x10100f21, 0xb8215502, 0x0fb4eeff, 0x2308840f, 0x0d0db4de, 0xfe240884, 0x0c0c1140, 0x1e220982, 0x05820b0b,
	0x09091022, 0x01210582, 0x050e452f, 0x835d3521, 0xfeaf2659, 0x053d0459, 0x205982db, 0x2259844c, 0x8228024d, 0x40183659, 0x60235011, 0x03237f23,
	0x0c500203, 0x0c7f0c60, 0x5d2f0c03, 0x21328235, 0x00820002, 0x27053c08, 0x16001406, 0x1f011a00, 0xff1700b9, 0x0d4540e8, 0x18183710, 0x19370c09,
	0x37100918, 0x15161503, 0x18031575, 0x10011718, 0x1342080d, 0x01050e04, 0x1717080d, 0x19011940, 0x830c0b10, 0x0c0b2190, 0x0b308a83, 0x0d30191a,
	0x0d700d50, 0x0dcf0daf, 0xffb80d05, 0x82051168, 0x84dc2008, 0x6d0882c9, 0x088205b1, 0xc985d220, 0x83080d21, 0x1e0d2538, 0x55060f0f, 0xe6241582,
	0x0c0c0d40, 0x1c220982, 0x05820909, 0xb8020d23, 0x059053ff, 0xf6220882, 0x46460d40, 0x04002705, 0x55021010, 0xa782b800, 0x0f0f1122, 0x2e220982,
	0x05820d0d, 0x87831c20, 0xf8241582, 0x0b0b0b40, 0x0e200f82, 0x0f822d83, 0x2f4bf020, 0xb6f0210e, 0x00225b83, 0x784e1c91, 0x2bed230a, 0x745d332b,
	0x465d2008, 0x5d2b0557, 0x3f002f33, 0xed3f3f3c, 0x5d3f3912, 0x21220871, 0x68421123, 0x07374405, 0x3336362c, 0x01151632, 0x05132301, 0x9218bc27,
	0xfc260ec9, 0x8af1fe72, 0x921802a5, 0x240809cf, 0x497c5d04, 0x03cdda52, 0x02d1fd3f, 0x0001002f, 0x026603d5, 0x00d10587, 0xb9270003, 0xe8ff0000,
	0x100d1440, 0xee471837, 0x0301280a, 0x02b10003, 0x8400ed2f, 0x2b012480, 0x82092b2b, 0x87022e68, 0xc288d6fe, 0x95fdd105, 0x00006b02, 0x21458302,
	0x45841804, 0x18000721, 0x2f274948, 0x01010046, 0x07030505, 0x3fb10403, 0x06060106, 0x33226684, 0x6a825d2f, 0x2f333c26, 0x0130313c, 0x83066347,
	0x88212070, 0x81022174, 0x7e847a89, 0x00042608, 0x08e3ff95, 0x00ed0507, 0x001f001b, 0x0037002b, 0x470c40ca, 0x561f481d, 0x681f591d, 0xb80b051e,
	0x1640e0ff, 0x20d5820e, 0x37048220, 0x071c1d1f, 0x021d171d, 0x1e1e291d, 0xffb8291f, 0x091240f4, 0x0c23370b, 0x4f2e0482, 0x7a1b400d, 0x0435752f,
	0xe8ffb817, 0x2c824a40, 0x82181121, 0x1f430804, 0x171b1b03, 0x4f032f51, 0x0d030203, 0x51110d03, 0x512f0209, 0x29402920, 0x35292902, 0x1e0a2351,
	0x011e4008, 0x2a321e1c, 0x26012600, 0x1c2a2c26, 0x2020061e, 0x01390f39, 0x0100200d, 0x2a140000, 0x82ed2f06, 0x5d3323d6, 0xa7443311, 0xed5d2406,
	0x465d2f2f, 0x5d25050d, 0x33ed3fed, 0x820e8233, 0x2b3f2222, 0x82f1822b, 0x10872af7, 0xc0875ded, 0x012b2b00, 0x0859785d, 0x21057044, 0x2e49012e,
	0x33372508, 0x09230109, 0x490b857f, 0x20080b4c, 0x931e2d03, 0xddd9c04e, 0x3f7f41bc, 0x39733c0e, 0x717b7f6d, 0x0e257a49, 0xf4fcf502, 0x020c03a5,
	0x10417f8a, 0x12be023a, 0xc9d2e632, 0xad2121f2, 0x9c953332, 0x23429896, 0x2ffa6802, 0xccfbd105, 0x080f327f, 0x0f000254, 0x8602e8ff, 0x1b00d305,
	0x91002b00, 0x1d530d40, 0x1c701d62, 0x0b181603, 0xb8053711, 0x3740f0ff, 0x00370f0b, 0x1c0b011a, 0x051b1b05, 0x0f121216, 0x25091652, 0x47030550,
	0x12120108, 0x4008291f, 0x2f371411, 0x1c080108, 0x001a001b, 0x2a0b0308, 0x8a591e01, 0x0c0b2811, 0x0155060c, 0x82090906, 0xffb82605, 0x1410b3c0,
	0x06674437, 0x3317ed28, 0x2f32332f, 0xc6552b5d, 0x08a16205, 0x2b391739, 0x5d30312b, 0x34113713, 0x16323336, 0x07021415, 0x33161411, 0x5d373632,
	0x352506e2, 0x36361307, 0x083e4335, 0x06066408, 0x7bb10f15, 0x787c606f, 0x1a1b1da5, 0x71376944, 0x4f6b5c39, 0x0d2f62f8, 0x0f190a0d, 0x0b06190f,
	0xeba6010c, 0x99e2c701, 0xfe5c6d82, 0x61fee6f7, 0x4a212b59, 0x722b2ca2, 0x0262e17f, 0x3780a92b, 0x0c11301e, 0x150e0c0d, 0x0200586e, 0x00009200,
	0xb0034204, 0x07000300, 0x15402500, 0x0101cb07, 0x8503cb05, 0x03002f06, 0x03300310, 0x5d2f0303, 0xed2f33ed, 0x05832f00, 0x13303131, 0x13211121,
	0x92112111, 0x50fcb003, 0x8318034c, 0x64033006, 0x1803e8fc, 0x00010000, 0x02bd0183, 0x828c0352, 0x4017384f, 0x0302020b, 0x02000000, 0x02020230,
	0x2f335d2f, 0x2f332f00, 0x82013031, 0x5202293b, 0x8c0331fe, 0xcf0131fe, 0x338a1e82, 0x23000728, 0xcb061340, 0x83820202, 0x00cb0425, 0x87cb0600,
	0x83818b3d, 0x82052041, 0x25458385, 0xc9fe8301, 0x4b853701, 0xc9fe4c22, 0xb1338182, 0x22048800, 0x0b00f903, 0x14402100, 0x030f0909, 0x824f032f,
	0x060629c4, 0x00900000, 0x000300a0, 0x8f828a85, 0x343acb82, 0x00323300, 0x23001415, 0x01b10022, 0x01b6b702, 0xb6fefe02, 0x02fefeb7, 0x0a83b740,
	0xfeb6b725, 0x830201fe, 0x017026a3, 0x036602aa, 0x335582a0, 0x40650017, 0x2310060b, 0x10063726, 0x00371a17, 0xb3f0ffb8, 0x07830c82, 0x82154021,
	0xcb122710, 0xcb0c0606, 0x1c830900, 0x0b100925, 0x8303370e, 0x83188221, 0x13402107, 0x15241082, 0x0f0303cb, 0x20272182, 0x60093009, 0x41090409,
	0x2b20055f, 0x63410082, 0x27088205, 0x0130312b, 0x14151632, 0x20065366, 0x71d71817, 0x34353207, 0x686b0126, 0x68689393, 0x49699293, 0x48486766,
	0x83958267, 0x2903830e, 0x4948674c, 0x48496666, 0xbd670067, 0x3c072207, 0x7b511802, 0x00d83007, 0x006b0131, 0x0002b60a, 0x07060b0c, 0x82352b25,
	0xff682623, 0x051d04e1, 0x282382d1, 0x01000044, 0xd9d80016, 0x23218400, 0x261d3736, 0x2b6a2185, 0x00d6240f, 0x827501a9, 0x00012523, 0x150f2b2f,
	0x296a2385, 0xf4d6350f, 0x40110000, 0x2640010c, 0x00022650, 0x0f062226, 0x355d2b25, 0x4d849383, 0x6a500721, 0xda2208c3, 0x4d86a800, 0x4d8d2c20,
	0x6adb0521, 0xda2108c1, 0x274d85f5, 0x24302420, 0x25240002, 0xc8244d89, 0x9d040000, 0x2820e184, 0x1724bd82, 0x3300d800, 0x0125e184, 0x020f0e00,
	0x249b8503, 0x04e6ff6a, 0x20e18460, 0x82238248, 0x85f720e1, 0x232223e1, 0x21850012, 0x08214584, 0x856f8201, 0x00d92245, 0x21938640, 0x458c0c12,
	0x828c0621, 0x2f458523, 0x0000fed9, 0x020a400f, 0x00012670, 0x15152026, 0x4b84df87, 0x0a234318, 0x4f00da22, 0x918f4b86, 0x09177b18, 0x8800da21,
	0x85182091, 0x0c817091, 0x00170125, 0x86d000d6, 0x25292345, 0x23850f07, 0x310f8d70, 0x0000fbd6, 0x020c4011, 0x35403530, 0x31350002, 0x7341231a,
	0x05e32209, 0x289384a2, 0x0100002a, 0x00da0017, 0x214d86ce, 0x4d8c2827, 0x93830520, 0x4105db70, 0x02280673, 0x33603350, 0x34330002, 0x00374d86,
	0xfe730001, 0x05a20559, 0x003800ec, 0x092040f7, 0x070e0606, 0x18061d26, 0x321669bd, 0xe0ffb82c, 0x0c092340, 0x36323237, 0x280d2e53, 0x18352203,
	0x2c107abd, 0x2a003131, 0xe6ffb82b, 0x020f0fb4, 0x76088355, 0x2b3905de, 0x02090912, 0x1f2b0f55, 0x762b022b, 0x10220109, 0x272b0422, 0x21100904,
	0xa1bd18b8, 0x04252909, 0x55021010, 0x0b0b1025, 0xb8220582, 0x4284f6ff, 0xffb82524, 0x3b83b4e4, 0xea240882, 0x0c0c1d40, 0x75251b82, 0x403a0f3a,
	0x8fbd183a, 0x3968270f, 0x2b2bf410, 0xd2645ded, 0x2bed2b06, 0x39171233, 0x2f5d2f2f, 0x16822b5d, 0x20058861, 0x05a04bed, 0x68ed5d21, 0x012f0745,
	0x34055d2b, 0x24222726, 0x35022627, 0x18210010, 0x201796bd, 0x12925b11, 0x03820333, 0xe0fead02, 0x01706766, 0x7f6c01a1, 0x12990901, 0xa8bd181f,
	0xd45a2412, 0x5b03015e, 0x6b2b0a9a, 0x5f0f2b15, 0x23016160, 0x186501c3, 0x2716b9bd, 0x462981fd, 0x16250e0f, 0x2207a95b, 0x42000300, 0x0035061f,
	0x00300023, 0x403f0134, 0x34322443, 0x20330232, 0x3d37100d, 0x459f1813, 0x342f3e20, 0x344f343f, 0x33343403, 0x05221e33, 0x28152112, 0x07041e40,
	0x40c0ffb8, 0x020d0d26, 0x489f1855, 0x31313609, 0x33603350, 0x00333302, 0x01060f18, 0x36242106, 0x020f0f40, 0x539f1855, 0x0a40230c, 0x12820c0c,
	0x06001a23, 0x3aaf5518, 0x1b40ee30, 0x55060909, 0x1f369200, 0x02363f36, 0x5483082b, 0x0c4c9f18, 0x79831920, 0x9f181820, 0x8521114c, 0xbf7f1835,
	0x3d9f1808, 0x32322812, 0x12115d2f, 0x415d2f39, 0x2b3108f1, 0x3912ed3f, 0x33113f39, 0x5d2f332f, 0x015d3031, 0x4b9f182b, 0x03133231, 0x43040123,
	0xf4fefefe, 0x0a52a959, 0x6064c82e, 0x4f9f187e, 0xb334291b, 0x7f1101f3, 0xf6fee4fe, 0x23549f18, 0xfe8e053c, 0x0076018a, 0xc800ffff, 0x3b050000,
	0x36020108, 0x00002b00, 0xd6001701, 0xdb437600, 0x0c102306, 0x29440b06, 0x00b92405, 0x845f0400, 0x864b2023, 0x82222023, 0x401a3323, 0x1b4f0112,
	0x1b9f1b6f, 0x26111b03, 0x171b0001, 0x2f820808, 0x5d2b0027, 0x00020035, 0x08578220, 0xd105e325, 0x17001300, 0x0eb73901, 0x04160112, 0xb80b5208,
	0x0f40c0ff, 0x55020f0f, 0x0f0c400b, 0x0c0b0b37, 0x83173505, 0x831c2013, 0x17003713, 0x17021710, 0x0317100b, 0x030c0704, 0x12000007, 0x0303150f,
	0x20821914, 0x0d0db42b, 0xb8025502, 0x10b4faff, 0x23088410, 0x0b0bb4f4, 0xe6200884, 0x0ea14118, 0x0b40ea22, 0x12222b84, 0x1f840c0c, 0x2940f62a,
	0x55060f0f, 0x0d0d0a02, 0x0c210583, 0x2105830c, 0x05820909, 0x0f197832, 0x50194019, 0x09090319, 0x03160e0b, 0xb8071406, 0x82066a5b, 0x18fc2008,
	0x7f17b4c6, 0xe6211141, 0x826083b4, 0x82ec2033, 0x550621a5, 0x66830884, 0x6a5b0882, 0x6c072205, 0x0c6a5b18, 0x33391722, 0x4e082f7f, 0xed200540,
	0x00271283, 0x17123f2f, 0x52712f39, 0x1382068e, 0x01303126, 0x11231123, 0x07a24e18, 0x15332808, 0x15333521, 0x21350133, 0xa8e30515, 0xc619fdc6,
	0x02c6a8a8, 0xfea8c6e7, 0x0419fd92, 0x02abfb55, 0x0427fdd9, 0x82f08c55, 0xfe2f0800, 0x00cccca8, 0x00130001, 0x065f0400, 0x011e0014, 0x031c4024,
	0x751d161d, 0x1417031d, 0x1111510e, 0x080d1812, 0x12041b42, 0x080d0101, 0x6b020f15, 0x0883079c, 0x18091959, 0x23086992, 0x0b1140fc, 0x2a30a118,
	0xf94de420, 0x0d082c06, 0x0055060d, 0x40ecffb8, 0x82090921, 0x20912a09, 0x2060201f, 0x17151402, 0x06b74e03, 0x2b05c34e, 0x0d0f111a, 0xb4deffb8,
	0x55021010, 0xe0200882, 0x2305d341, 0x09090c0d, 0xba4e0f84, 0xb4f62308, 0x11860c0c, 0x4106b64e, 0x33820573, 0xbf4eec20, 0x830a2006, 0x880d2168,
	0x0b165018, 0xfd323227, 0x32172b2b, 0x0c84415d, 0x2f2b2b22, 0x5108654e, 0x31220540, 0x644e5d30, 0x3523290e, 0x15333533, 0x11211521, 0x20056c4e,
	0x32a11804, 0xa6a6290a, 0xfe4101bc, 0x63bc58bf, 0x0c38a118, 0xf4042708, 0x869a9a86, 0x5249edfe, 0x0200cdda, 0x00002c00, 0xc8073303, 0x25000b00,
	0x00b9b500, 0x40d0ff1b, 0x37100b4a, 0x0482300e, 0x0c0c3b08, 0x1c0f5215, 0x1c021c1f, 0x22191c19, 0x010f7052, 0x04090f0f, 0x0a030632, 0x08013203,
	0x0c0f2825, 0x0c020c1f, 0x0c192818, 0x0b086d27, 0x05140a5a, 0x03195a02, 0x0210100c, 0xc2180355, 0x0843232b, 0x14032205, 0x05085e0f, 0x09b6fc28,
	0x03550609, 0xad46266d, 0x2b2b3306, 0x32ed322b, 0xe432edfd, 0x2fed2f33, 0x3f00ed5d, 0x028232ed, 0x0a823320, 0x23079a4d, 0x2b2b3031, 0x0b4fc218,
	0x0606132f, 0x27262223, 0x22232626, 0x36230706, 0x05fd7e36, 0x36323324, 0xc2180237, 0x71080869, 0x667d075e, 0x2d265334, 0x2d30203c, 0x7e038802,
	0x28513368, 0x2e1d432a, 0x04980131, 0xfb9898a1, 0x9830075f, 0x2b262497, 0x884b5b2a, 0x282524a6, 0x00475b29, 0x00f2ff02, 0x06410200, 0x0003003c,
	0x40c5001d, 0x73067c50, 0x04040213, 0x4014aa0d, 0x14370c09, 0x1a111411, 0x020707aa, 0x1d080105, 0x091204ad, 0x0455020d, 0x370f0940, 0x11ad1004,
	0x0d820d2a, 0x091a112c, 0x1155020c, 0x1f011f7f, 0x1e670492, 0x1811200d, 0x2028709f, 0x061f67b4, 0x2205d961, 0x64ffb801, 0x4a1805be, 0xec570a7e,
	0x822b2006, 0x325d2b00, 0x322b2bfd, 0x2b2f5ded, 0x0383ed2b, 0x3f3f0022, 0x23069453, 0x2f33ed2b, 0x22054a42, 0x41141333, 0x1522092f, 0x2f413423,
	0x35330809, 0xbcbc7701, 0x285067ca, 0x2d201e3a, 0x70212317, 0x322f4e68, 0x162c2120, 0x5d042124, 0x8281df01, 0x2223201a, 0x82814145, 0x22231f1b,
	0x00003e48, 0x825f0002, 0x07ff2e04, 0x000b003c, 0x408b000f, 0x0d530e15, 0x092c420d, 0x3f0f2f3d, 0x0e0f020f, 0x40c0ffb8, 0x370d0b1f, 0x6d110f0e,
	0x5a0b080a, 0x0503140a, 0x420e5a02, 0x0d2d2b33, 0x55020d0d, 0x0f0f0e03, 0x6d035506, 0x08314310, 0x32f43224, 0x0382fd10, 0x2f33e629, 0x005d2f2b,
	0x8232fd3f, 0x21f08202, 0x1f423031, 0x3521220c, 0x09094221, 0x60fd2a24, 0xf441a002, 0x0a062606, 0xff02009a, 0x20c382fc, 0x062f5136, 0x27408436,
	0x01015302, 0x7f050506, 0x02027000, 0x097f0200, 0x00920901, 0x200d5c6a, 0x395d6a02, 0xa418fc20, 0x3227112c, 0x322b2bfd, 0x822f5de6, 0x7f2f20c0,
	0x2e080839, 0x11230321, 0xfd360233, 0xbf3a02c6, 0x3705bcbc, 0x042ffa9a, 0x0002005d, 0x02000080, 0x00d307df, 0x0019000b, 0x0c1f408f, 0x12011270,
	0x43aa1612, 0x19350ba2, 0x0b400c29, 0x130c370e, 0xffb81229, 0x0b1d40c0, 0x0c12370f, 0x08ab431b, 0x77411220, 0x0db6272a, 0x0355020d, 0x9b431a6d,
	0x08994307, 0x2fed2b23, 0x099a432b, 0x2f33ed24, 0x7341335d, 0x06142c0e, 0x35262223, 0x33161433, 0x41353632, 0x0a29097d, 0x97999c93, 0x494d459e,
	0x06824148, 0xa83b0729, 0x86a8cfcf, 0x828a6e72, 0x820120dd, 0x06303fdd, 0x000d0068, 0x409a0011, 0x06060015, 0x0303500a, 0x0d0f0510, 0x0b400029,
	0x07003710, 0xd3850629, 0x06371032, 0x1301137f, 0x0c0e0092, 0x55020909, 0x0c0c0c0e, 0x1a250582, 0x010f7f06, 0x07b2450f, 0x54180882, 0xee210f5d,
	0x18d183b4, 0x6b0b6654, 0x118205f7, 0x22059941, 0x4212880f, 0x4c43085d, 0x5de62105, 0x0282ea82, 0x3f2f0024, 0xe9822f33, 0xe751e882, 0x08dc8606,
	0x11230334, 0x8b300233, 0x928e8a8c, 0x44414541, 0x06bcbc27, 0xbec09a68, 0x626b7a9c, 0x0498f983, 0x0001005d, 0x035ffe89, 0x00d1051c, 0x408d0020,
	0x09201c37, 0x2443370c, 0x010c3107, 0x13171708, 0x180d1b53, 0x1e2a1018, 0x22020b1e, 0x410a2243, 0x40202aa9, 0x700c2143, 0x204309cd, 0x12112207,
	0x23bc8339, 0x32fd3f00, 0xfd21c782, 0x2b078232, 0x212b3031, 0x11333523, 0x15213523, 0xbc70c282, 0x08836f0b, 0xeb740137, 0x4c02c3c3, 0x06c2c3c3,
	0x21584209, 0x24091341, 0x9a872251, 0x06bc4109, 0x1c982108, 0x50512629, 0x0a9e0b13, 0x228ca00b, 0x00020035, 0x025ffe8e, 0x00db0546, 0x001b0003,
	0x081c40b3, 0x3a08eb83, 0x0753171b, 0x0244010d, 0x370d0b40, 0x050e0302, 0x0404110d, 0xb80a2a14, 0x0c40c0ff, 0x0a37170b, 0x1d7f0e0a, 0x00921d01,
	0x40fcffb8, 0x020c0c1a, 0x0f600055, 0x0209090c, 0x830c0f55, 0x1a0f270d, 0x0e7f6001, 0xd6410e01, 0x41088207, 0xfb4106d6, 0xffb82106, 0x8205d641,
	0x05894718, 0x0f230884, 0x8255060f, 0x05d64108, 0x1c880e22, 0x2909d641, 0x2b2bfde4, 0x5de62be4, 0x947d3311, 0x332f2505, 0xed2b3f3f, 0x23051141,
	0x33352301, 0x25054f46, 0x37363435, 0x2a753311, 0xd483230c, 0xff82c3d4, 0x259c8527, 0x063cbc08, 0x05104107, 0x18052408, 0x0a99f8c3, 0x3f8e9e0b,
	0x0b04196f, 0x361aa3fb, 0x1350511b, 0x00ffff0b, 0x03ebff2c, 0x0201084d, 0x4a2d0036, 0xff28059f, 0x0075016c, 0x1a01b114, 0x3508fa83, 0x370e0b09,
	0x04161a00, 0x2b2b2515, 0xff020035, 0x0259fec2, 0x008c06af, 0x001c0015, 0x0a2940c5, 0x02011c01, 0x1b651b55, 0x18031b75, 0x1b1b1a16, 0x3e121a1a,
	0xa04c0515, 0x1a1a2a05, 0x1301134f, 0x0601067f, 0x0b904c16, 0x1740f222, 0x2d05904c, 0x03160613, 0x10100e15, 0x0c155502, 0x05820b0b, 0xdeffb822,
	0x2305bc48, 0x09090815, 0xe4200f84, 0x2105ba74, 0x31830215, 0xffb81526, 0x0d0db4f2, 0xec251884, 0x060f0fb4, 0x23118255, 0x0c0cb4f6, 0xe42e0884,
	0x09090a40, 0x15705506, 0x1e921501, 0xbd18f410, 0x2b2908da, 0xed32172b, 0x2f2f2b2b, 0x05634c5d, 0x2f32fd2c, 0x2f33ed3f, 0x39122f33, 0x4e185d39,
	0x2f080b60, 0x32331616, 0x36363736, 0x35231135, 0x03233721, 0x33132303, 0xa8c80902, 0x0a2c8328, 0x482d5f1c, 0x0d161658, 0xa6a501e9, 0x9bb8b99f,
	0xc41be3e4, 0x0dfca718, 0x01b42708, 0x0100ff00, 0xffff007b, 0x59fecd00, 0xd1057505, 0x2e003602, 0x16010000, 0x00fbdc00, 0x01b11500, 0xecffb81a,
	0xbf830a40, 0x0c1a0026, 0x2b250005, 0x2605656d, 0x0459fec1, 0x821406af, 0x824e202d, 0x0017302d, 0x007cffdc, 0x40110000, 0x1a30010c, 0x83021a40,
	0x250a242b, 0x82355d2b, 0x0021081c, 0x040000c1, 0x005d04af, 0x40e1000b, 0xd802285b, 0x0309db01, 0x0d0f0109, 0x021d011f, 0x012d0d1f, 0x5da8182f,
	0x01053221, 0x020b0805, 0x0a700a60, 0x000a0a02, 0x0d200d00, 0x53a81840, 0x181a200f, 0x242e47a8, 0x060f0fb4, 0x23338255, 0x0d0db4f6, 0x4e4a0885,
	0x06937005, 0x4c188920, 0x2b2708fe, 0x2bfd2b2b, 0x4d5d322b, 0xa81805da, 0x2e083c44, 0xd1fd5d04, 0xfcfd2f02, 0x00010000, 0x0459fec8, 0x00d10576,
	0x40b7001a, 0x09200c1d, 0x1111370c, 0x0d0d5315, 0x35040302, 0x10080107, 0x752a1810, 0xf222088f, 0x18821c40, 0x0e0a552f, 0x55020b0b, 0x05010a0a,
	0x1c0f1c05, 0x47cf7001, 0x4c086572, 0x012205bb, 0x2f4a1b6c, 0x2b2b2209, 0x05ce57ed, 0xdf502f20, 0xed3c2907, 0x32fd3f3f, 0x2b30312f, 0x2105d570,
	0x8e6d2115, 0xbf022812, 0x02c609fe, 0x6ce3fee8, 0x06270c2f, 0xdffad105, 0x6c2f12b0, 0x2d08091c, 0x01003e1e, 0x59fe0500, 0x1406e901, 0xa3001800,
	0x200a2e40, 0x0f370c09, 0x0b53130f, 0x0401020d, 0x0e0e0801, 0x16162a08, 0x011a7f01, 0x2948921a, 0x30e5490d, 0x28058e46, 0xfcffb801, 0x060d0db4,
	0x13ee4955, 0xf98a1920, 0x2bfd5d28, 0x125de42b, 0xed822f39, 0x2f3f0022, 0x2324f588, 0x33113311, 0x4e08f392, 0xbc8e4901, 0xae05016c, 0x28642585,
	0x284e1809, 0x0601525e, 0x1200fa14, 0xaca22437, 0x0ba00c0c, 0x15574f17, 0xffff0033, 0x59fec800, 0xd1053805, 0x31003602, 0x16010000, 0x00fedc00,
	0x0e401300, 0x30162001, 0x03164016, 0x040a1600, 0x542b2500, 0xb92605fb, 0x5f0459fe, 0x3b717c04, 0x8bdc2108, 0x002a2b85, 0x20231023, 0x23000323,
	0x2b850d17, 0x83055142, 0x00540857, 0x40480116, 0x6107001f, 0xa1077107, 0x070c0407, 0x071b0c0b, 0x07460736, 0x07650754, 0x01b00775, 0x070a07b0,
	0x40c0ffb8, 0x37110b43, 0x0f010676, 0x1f060201, 0x26061501, 0x34013601, 0x44014606, 0x53015606, 0x79066006, 0x0e067001, 0x5a010604, 0x02065501,
	0x2f069b42, 0x06080407, 0x04010a03, 0x10100108, 0x0201060a, 0x0c0eca18, 0x0c0cb627, 0x13075502, 0x078a5c0a, 0x0b230884, 0x8255020b, 0x40e22408,
	0x820f0f33, 0x09082209, 0x20058209, 0x23298312, 0x0d0d260a, 0x78270b82, 0x40180f18, 0x84020218, 0x0c022119, 0x02251983, 0x10100413, 0xf3c91810,
	0xb4e4212f, 0x2906297a, 0x0d0db4ec, 0xb8045506, 0x9182ecff, 0x6c210882, 0x0ad54117, 0x2b2bed22, 0x2307bc53, 0x2b2bfd2b, 0x29053566, 0x333f002f,
	0x123c3f33, 0xda423939, 0x014b0805, 0x5d5d7172, 0x715d2b00, 0x11013504, 0x01211123, 0x14113311, 0x26222306, 0x16333527, 0x04323316, 0xb901fd80,
	0x84023301, 0x27b4ceb9, 0x160b2551, 0x947f1e3a, 0xfa3e058a, 0xfbd105cc, 0xfa6004a0, 0x08d1bf18, 0x0a05a806, 0x41000100, 0x200806c1, 0x18012600,
	0x15031c40, 0x1516190c, 0x10041575, 0x1342080d, 0x0d050e04, 0x221e1e08, 0x1d0d1a53, 0x138f4f1d, 0xffb81722, 0x82058f4f, 0x059e5008, 0xf8280882,
	0x0f0f1740, 0x0c175502, 0x08220584, 0x0b820909, 0x0c0c2222, 0xb8220582, 0xfa82feff, 0x8e4f0884, 0x04172506, 0x55060d0d, 0xec243482, 0x09091c40,
	0x91260982, 0x60281f28, 0x495e0228, 0x0c894f0e, 0x22103d5e, 0x830b40f6, 0x089b4f5e, 0x2182f020, 0x82550621, 0x17894f33, 0x6f412720, 0x2bfd220a,
	0x10864f2b, 0x492f3321, 0x3f29052b, 0x3912ed3f, 0x045d3031, 0x14e85d35, 0x240c7241, 0x03363736, 0x0ef35da3, 0x27b4cc39, 0x160b264e, 0x614c1a3c,
	0x56251617, 0x874d4b02, 0x4c292a26, 0x5dbefc3b, 0xfd2b06fc, 0x07ccbf0f, 0x0a05a806, 0x58262626, 0xe13a0549, 0x4607da05, 0x32003602, 0x17010000,
	0x9b00d800, 0x0a007501, 0x260002b6, 0xfb570f27, 0x04e12408, 0x82d10571, 0x82522023, 0x00162423, 0x8400e3d8, 0x1b1a2721, 0x2b250006, 0x5918ff35,
	0xd92211b9, 0x45869c00, 0x8c242a21, 0x8c062145, 0xd9214588, 0x214585e4, 0x4587181e, 0x59fec824, 0x67849805, 0x67843520, 0x00f6dc27, 0x02b11f00,
	0x07714924, 0x402e0883, 0x0209090a, 0x20240055, 0x2b250d05, 0x28832b2b, 0x1b003208, 0x720359fe, 0x27005d04, 0x2d40d700, 0x0d100d00, 0x21030d20,
	0x370c0920, 0x130f090c, 0x0a431713, 0x091c050f, 0x02262608, 0x250d2253, 0x052a1f25, 0x051a650c, 0xb8130922, 0x82063057, 0x46f02008, 0x13290550,
	0x29402913, 0x0c022970, 0x2824841b, 0x0c0c0c1b, 0x1a1b5502, 0x070e4a09, 0x0e4a0882, 0x84092006, 0x4a0f8220, 0x08820505, 0x8205174a, 0x050e4208,
	0x0d231a84, 0x8355060d, 0x05494708, 0xbd820920, 0x88210f82, 0x0f0e4228, 0x2f33112a, 0x39112b2b, 0x32fd2b2f, 0x22060942, 0x823c3f2f, 0x1211260b,
	0x2b303139, 0x08a1625d, 0x33112323, 0x05725015, 0x50231521, 0x78450581, 0x4e3c370c, 0x01525e28, 0x70bca602, 0x2c3159ab, 0x4f2a0a2c, 0x4ba25736,
	0x82450184, 0x17fa3406, 0x3315574f, 0xa55d0423, 0x07054b5a, 0x4d090ac1, 0x45fbfc3d, 0x0021078d, 0x855418ff, 0x00d62311, 0xa55a014a, 0x31352205,
	0x06eb411a, 0x54186e20, 0xd62d0e83, 0x0f0000af, 0x7f010a40, 0x38000138, 0x25258334, 0x0000355d, 0x00820001, 0xee042a08, 0x0f00d105, 0x26405d00,
	0x32000a0d, 0x090f0303, 0x03063504, 0x1f110f0f, 0x03114f11, 0x080b020b, 0x000d095b, 0x04021409, 0x06a84414, 0x0cb4fa29, 0x0455060c, 0x4afcffb8,
	0x04320505, 0x01054f5b, 0xf45d2f05, 0x322b2b2b, 0x103939ed, 0xb94e33e4, 0x32fd2105, 0x2107af52, 0xf6652101, 0x21152305, 0x03822111, 0x1402233d,
	0x4c01b4fe, 0xee04ecfd, 0x4c01ecfd, 0x02c6b4fe, 0xae018fe4, 0x52feb0b0, 0x821cfd8f, 0x3e480897, 0xfd02eaff, 0x23009e05, 0x2140c200, 0x0d092004,
	0x07151837, 0x0e0a0a51, 0x0b140f03, 0x0e0f113e, 0x1f232305, 0x4f09033f, 0x02257f25, 0xc0ffb816, 0x0b092840, 0x07161637, 0x258c0013, 0x0c070909,
	0x15110e0a, 0x090c1804, 0x26091a69, 0x40070c1a, 0x7337100d, 0x40272238, 0x020d0d11, 0x83220755, 0x140723ee, 0x29550d0d, 0x83b62005, 0x880722f4,
	0x08344c24, 0x2b24ec83, 0x2f39172b, 0x1026e482, 0x391132f6, 0xa5182b2f, 0x11200b28, 0x2b20fb87, 0x23062973, 0x33352335, 0x220a2d73, 0x64211521,
	0x33230599, 0x18373632, 0x2c0937a5, 0x01bc7f7f, 0x017cfe84, 0x08d3fe2d, 0x3da51818, 0xa82b080b, 0x9e240186, 0xbffe4101, 0x86dcfe9e, 0x2b635853,
	0x091b2528, 0x00ffff00, 0x05e1ffb2, 0x02c80729, 0x00380036, 0x00170100, 0x426100d7, 0x2b23060f, 0x431d0d1e, 0xb12605fb, 0x5704e1ff, 0x23825306,
	0x23825820, 0xd700162d, 0x0a000006, 0x240001b6, 0x85160917, 0x20458521, 0x22458846, 0x866300d8, 0x21202145, 0x0521458c, 0x214588d1, 0x458501d8,
	0x8c1a1921, 0xab5d1845, 0x88d9200a, 0x8e242045, 0x888c208b, 0x86d92045, 0x851d2045, 0x004f088b, 0xfeb20001, 0x0529055f, 0x013400d1, 0x232e4010,
	0x3d182312, 0x39213d09, 0x4c094c22, 0x77224b21, 0x0a177713, 0x0c092033, 0x2a2e2e37, 0x1c0d3253, 0x030d0624, 0x0a063415, 0x2a272f2f, 0xe0ffb800,
	0x09090d40, 0x06005502, 0x0c032300, 0x5736141b, 0x1e280793, 0xb4f8ffb8, 0x55020b0b, 0xea240882, 0x0f0f1140, 0x0c200982, 0x1e232983, 0x840c0c16,
	0x05ef4c15, 0xf0201e82, 0x062f1e83, 0x36761e55, 0x361f360f, 0x0f033640, 0x18b80c14, 0x25321dc9, 0x0f0fb4ec, 0x3a825506, 0x8205ac4b, 0xb4f02308,
	0x11840c0c, 0x2205b34a, 0x44356b0c, 0x2b210a64, 0x09f855ed, 0x1712ed23, 0x058a4e39, 0x3fed3f22, 0x2708e047, 0x34055d2b, 0x06223736, 0x1805db54,
	0x20113fc9, 0x05187111, 0x260f397f, 0x05051403, 0x180f1909, 0x261056c9, 0x682d5147, 0x7f05043d, 0x8c2a0832, 0x271a74a8, 0x48490116, 0xc918e852,
	0x4e081066, 0xf1a285fc, 0x103b2c50, 0x52173c14, 0x9f081b4e, 0x009f0c0e, 0xfeb10001, 0x0467055f, 0x012a005d, 0x0b224009, 0x7a071906, 0x20270307,
	0x02370c09, 0x05091505, 0x0a054211, 0x22220801, 0x0d26531e, 0x2a1b2323, 0xc0ffb829, 0x371009b6, 0x48142929, 0xee241636, 0x10102940, 0x220e2448,
	0x820c0c26, 0x0d062211, 0x2605820d, 0x060f0f1e, 0x48081755, 0x1b22081d, 0x0f820909, 0x1f2c9226, 0x022c602c, 0x240da857, 0xe2ffb808, 0xafa718b4,
	0x05134828, 0xec203382, 0x21050446, 0x59830808, 0x2b870822, 0x49099f41, 0x5b4d0b82, 0x41322005, 0xfd2706a1, 0x3f3f2f32, 0x463c3fed, 0x04270507,
	0x06063537, 0x41262223, 0x36500c9e, 0x074c510d, 0x06950322, 0x0ebfa718, 0x42181e20, 0x3426070e, 0xa88c2a4b, 0xa7181d1d, 0xfb2411cf, 0x1b351ba3,
	0x39068241, 0x00248da0, 0x5c00ffff, 0x8d070000, 0x36020108, 0x00003a00, 0xd6001701, 0xbb436901, 0x0d112106, 0x2607b747, 0x06000056, 0x828c0636,
	0x855a2023, 0xbb002223, 0x05bd4300, 0x57182389, 0xd6220f69, 0x4786eeff, 0x05090d22, 0x18065946, 0x210f6757, 0x4585ddd6, 0x04080c22, 0x00392183,
	0x00b90001, 0x06080300, 0x0010001e, 0x0019407f, 0x0d3f0400, 0x00080900, 0xb5991800, 0x091a290c, 0xb4d6ffb8, 0x55021010, 0x231cab47, 0x0d0d0b40,
	0x14232282, 0x83060f0f, 0x05a44128, 0xec303182, 0x0c0c0c40, 0x096f5506, 0x0902097f, 0xf6101189, 0x25088050, 0x332b2bed, 0xf44c002f, 0x47012006,
	0x1522057e, 0x6f642311, 0x17240805, 0x1f0a0803, 0x67792664, 0x3fbfc2bc, 0x5e052a65, 0x8c6b1309, 0x82047dfb, 0x080cdac2, 0x1a000400, 0x5e050000,
	0x122eaa82, 0x21001e00, 0x4d012500, 0x202b9240, 0xa2182037, 0x0a250f2b, 0x0d170b18, 0x2ba2184a, 0x37400810, 0x02018701, 0x12001401, 0x03212000,
	0x04870437, 0x05140402, 0x06060605, 0x06261209, 0x06371229, 0x06461238, 0x12581249, 0x1275067a, 0x0c24240b, 0x25012570, 0x0ca05116, 0x06020cf0,
	0x3f0c160c, 0x04240882, 0x2134030c, 0x0a4da218, 0x210f6e08, 0x21022170, 0x12062021, 0x1c200504, 0x0c021c40, 0xc0ffb81c, 0x39396c40, 0x701c5037,
	0x011c021c, 0x40240805, 0x0f37100e, 0x02242f24, 0x40242222, 0x24370d09, 0x0f0f2913, 0x0f4f0f2f, 0x0f9f0f8f, 0x29190f05, 0x09200900, 0x09800940,
	0x09050990, 0x0601270f, 0x24120f09, 0x000c0505, 0x003a0024, 0x005a0042, 0x0074006a, 0x6e000007, 0x081c8227, 0x2b050a20, 0x4d053505, 0x65055505,
	0x07057b05, 0x10266405, 0x105d5de6, 0x125d2fe6, 0x2f5d3917, 0x0283ed5d, 0x2f332b27, 0x3f002b5d, 0x2005823c, 0x82178333, 0x822b2007, 0x82722018,
	0x39122203, 0x82a2182f, 0x34272129, 0x25095e70, 0x07020913, 0xa2183723, 0xd4080785, 0x3931f801, 0xa07373a1, 0x472a3039, 0x49483939, 0x7d483838,
	0xfdfefefe, 0x95f31d02, 0xfe9f0195, 0x1f570561, 0x906d4065, 0x65406d90, 0x4b36c41f, 0x4b39374a, 0x0266fc4c, 0x0535fdcb, 0x00cdcdb7, 0x68000400,
	0x1d04e1ff, 0x32003307, 0x4b003f00, 0xb3014f00, 0x190a0cb5, 0xb830020a, 0x5c40c0ff, 0x59370e0b, 0x5c21510e, 0x630e6938, 0x7b396f21, 0x74147a0a,
	0x0a387b20, 0x3d340802, 0x11401130, 0x49111102, 0x4e4f4f08, 0x06aa434e, 0x9f291629, 0x40290329, 0x29370d0b, 0x4923012f, 0x1f011f4f, 0x41181f29,
	0x413d0449, 0x08010a08, 0x100d404e, 0x4e4c4c37, 0x370c0940, 0x40264e4e, 0x40e7ffb8, 0x02090914, 0x2c294055, 0x020d0d10, 0x3f2c2f55, 0x2c2c022c,
	0x20188226, 0x2a1783b6, 0xb8462926, 0x0fb4ecff, 0x8255020f, 0xb4f02108, 0x08822383, 0x1940e222, 0x7f281d83, 0x02468f46, 0x0f004646, 0x11236682,
	0x83405134, 0x0c2e4513, 0x0c164034, 0x0255020c, 0x0b1f001a, 0x10100600, 0x12005502, 0x05820b0b, 0xe6ffb822, 0x2105d746, 0x33831800, 0x831a0021,
	0xb8002457, 0x83b4fcff, 0x4608822f, 0x002906d7, 0x060d0d0a, 0x0c060055, 0x05f25c0c, 0xf15cb720, 0x3a512605, 0x40f8ffb8, 0x2a34830e, 0x511f510f,
	0x3a03513f, 0x18b80b1b, 0x2107a47f, 0x63830c0b, 0x831c0b21, 0x140b2159, 0x0b202483, 0x02244082, 0x50850b55, 0x24061149, 0x102b5ded, 0x05255ee6,
	0x4a180583, 0x2f2308aa, 0x6239125d, 0x2b210567, 0x21078233, 0x0e822bed, 0x2b230982, 0x693f3f00, 0x1f82055c, 0x2f391127, 0x33ed5d2b, 0x0982622f,
	0x21058b60, 0x4a182321, 0x062b19bd, 0x35230706, 0x26373636, 0x68343526, 0x0626054d, 0x15161607, 0x1d751103, 0x4203200a, 0x03250b60, 0x1d041323,
	0xc74a18bb, 0x292e390d, 0x3a3f6d29, 0x50312a69, 0x69230a13, 0x9f251c31, 0x2e9e7373, 0xbb877d23, 0x08c54a18, 0x80424320, 0xf3952307, 0x4a189595,
	0x413c0ec9, 0x11181756, 0x1d0d0b14, 0x1409bf07, 0x2e531e08, 0x6d90906d, 0x221f5b33, 0x1dfe9aaa, 0x0acc4a18, 0x2c043508, 0x374a4b36, 0x024d4c39,
	0x01eefe62, 0x00ffff12, 0x0700000e, 0x0201086d, 0x00900036, 0x00170100, 0x01de018d, 0x40110075, 0x160f020c, 0x0002164f, 0x07061416, 0x26074d51,
	0x07e3ff68, 0x828c063f, 0x86a0202b, 0x00692a2b, 0xb60a0000, 0x54550003, 0x0697451b, 0x6eff7324, 0x4f84da05, 0x23859120, 0x82780021, 0x40132e4f,
	0x3a30030e, 0x3a603a40, 0x3b3a0003, 0x089f510f, 0x6cff5d24, 0x51847104, 0x2d82a120, 0x8d001624, 0x7b8300e2, 0x2e300329, 0x00022e40, 0x850c2f2e,
	0x01003629, 0x40035a01, 0x5d044902, 0x14000300, 0x56010a40, 0x2d030502, 0xa6731800, 0x31ed2e07, 0x11230130, 0xef490233, 0x014003ef, 0x1289461d,
	0x73014322, 0x20064146, 0x18894610, 0xc3004322, 0x0121cd84, 0x46238900, 0x8d200fd1, 0x2108d146, 0xd146100f, 0x008d2217, 0x894786bf, 0x21478423,
	0x19475007, 0x018e2208, 0x368f826c, 0x1302b120, 0x40c0ffb8, 0x37100d12, 0x0101130f, 0x135f1300, 0x84130002, 0x355d2459, 0x82352b5d, 0x005626c9,
	0x05360600, 0x082f47db, 0x5d848e20, 0x39861e20, 0x39881020, 0x378c3c82, 0x220f4347, 0x570a0043, 0x0a2005e1, 0x09207183, 0x00263782, 0x00050a0a,
	0x65842b25, 0x340f4d47, 0x0000ff43, 0x01104015, 0x0b300b20, 0x0b700b60, 0x090b0004, 0x078b4104, 0x03edff31, 0x068601e4, 0x00030013, 0x0300b932,
	0x82b7e4ff, 0x0101284d, 0xb8000103, 0x82b3aeff, 0x2b07820b, 0x0a0940e8, 0x0000370c, 0x0201027f, 0x078d4618, 0x088b4618, 0x86010128, 0x0f01f4a5,
	0x5b6e1306, 0xd0ff2705, 0x16058506, 0x4f82fd06, 0x01b61127, 0x00000250, 0x09771805, 0x0577080d, 0x05bafa16, 0x78850646, 0x89000100, 0x8b040000,
	0x2800ee05, 0x63409300, 0x12531241, 0x12631a5b, 0x12730273, 0x03b62490, 0x230924b6, 0x00510520, 0x20081008, 0x08080308, 0x51091c1f, 0x0c1f0c0f,
	0x0c4f0c3f, 0x14140c04, 0x010c4918, 0x28020210, 0x0f08014a, 0x022a1f2a, 0x1c022723, 0x0c05201f, 0x1d5f2108, 0x1d7f1d6f, 0x060a1d03, 0x1d080613,
	0x20020413, 0x82004000, 0x2f022889, 0x125d2f33, 0x832f3917, 0x2f332707, 0x32fd3333, 0x9d183911, 0x23821002, 0x3939ed2f, 0x295d3031, 0x013e3501,
	0x33352337, 0x21038335, 0x8d6d1234, 0x011d230a, 0x01841521, 0x07010e2f, 0x8b042115, 0x6267fefb, 0xa4a49d0e, 0x109d18a3, 0xfe6c3e0b, 0xfe6d0193,
	0x5a700f8f, 0x1bcf4503, 0x8c867b81, 0x01c8a786, 0xce112201, 0x90a5302a, 0x240e8294, 0x0b2c9f65, 0x08998200, 0xe6ffb151, 0x32051105, 0x22001800,
	0x13405f00, 0x1c390d38, 0x0d581c49, 0x217a216a, 0x0b100c06, 0xb807370d, 0x2a40f0ff, 0x19370a09, 0x260f291f, 0x790f6915, 0x3201050f, 0x1f0f2222,
	0x0b0b1532, 0x090f3307, 0x13190c0c, 0x00010026, 0x01222400, 0x822f1214, 0x2fc783d9, 0x3f002f33, 0x2f2f33ed, 0x2f3912ed, 0x2b2b5ded, 0x013bd582,
	0x17161421, 0x3233011e, 0x15333736, 0x2023010e, 0x00101100, 0x11003221, 0x74012e27, 0x4d080698, 0x66fc1105, 0xa33a3c42, 0x59ea7a60, 0x7fc0820d,
	0xadfec9fe, 0x13014201, 0xbe0c01ff, 0x28292602, 0xd59f5a87, 0x8478020d, 0x3b3c3eb5, 0x36d54856, 0x015b0137, 0x013a0141, 0xfecdfe76, 0x91542ae9,
	0xd43a3333, 0xffff00b1, 0xe1ffab00, 0x5b188307, 0x413c1289, 0xc6fdf203, 0x0c401600, 0x10020304, 0x400b010a, 0x020b7f0b, 0x0035115d, 0x3535353f,
	0x8c203782, 0xa4363782, 0x3600ed05, 0x00a63d02, 0xbb003700, 0x00009102, 0x41021701, 0x37821304, 0x26403822, 0x36213782, 0x3504820a, 0x20390039,
	0x80394039, 0x0539ff39, 0x31003101, 0x317b315b, 0x5b180003, 0x59881179, 0x59848a20, 0x5982da20, 0x97a43f21, 0x83322059, 0x00353359, 0x40352035,
	0xff358035, 0x2d010535, 0x2d5b2d00, 0x599c2d7b, 0x59829920, 0x83056f21, 0x86402059, 0x853120b3, 0xde0321b3, 0x3622b382, 0xae822440, 0x59830e20,
	0x116f113b, 0x11ff1180, 0x2b090103, 0x44093b09, 0x7f095b09, 0x04000509, 0x043f0400, 0x2b5c1802, 0x08b18509, 0x00010023, 0x0159fe61, 0x008800fa,
	0xb92c0003, 0xe8ff0200, 0x100d1740, 0x09180337, 0x1800370c, 0x0f371009, 0x08008201, 0x020d0021, 0x332f0002, 0x333f002f, 0x30315d2f, 0x2b2b2b01,
	0x0133011b, 0xfef4a561, 0x0259fef1, 0x82d1fd2f, 0xb769188a, 0x02012866, 0x030c0512, 0x828c0605, 0x40142eb1, 0x02030309, 0x03102d00, 0x5d2f0301,
	0x06be6eed, 0x03230336, 0x91310503, 0xfe8c0631, 0x00800180, 0x00010300, 0x18040c05, 0x28083184, 0x000b0007, 0x0615403f, 0x09af0a05, 0x00000209,
	0x062b0702, 0x370a0940, 0x0b2b0a06, 0x40c0ffb8, 0x370b090c, 0x2d00060b, 0x2252850b, 0x5f32fd33, 0x33210735, 0x0817522f, 0x01246082, 0x05333523,
	0x022c0382, 0x318031fd, 0xbfbffd01, 0xbfbfa7fd, 0x2a087085, 0xc3c38cfe, 0xffff00c3, 0x00000700, 0xd1055e05, 0x24003602, 0x17010000, 0xf5fd9d01,
	0x120045ff, 0x0e020a40, 0x1f0e0203, 0x420e4f0e, 0x2b820693, 0x2b820020, 0xd1059028, 0x28003700, 0x2d86f300, 0x2d82ee20, 0x404d2608, 0x030f010c,
	0x1110110f, 0x01031140, 0xecffb80c, 0x0c0b1640, 0x0c1f5502, 0x01000c01, 0x02100f06, 0x0d160155, 0x2405820d, 0xb4e2ffb8, 0x2f19820c, 0xf0ffb801,
	0x020b0bb7, 0x01014055, 0x2b5d2f01, 0x35200082, 0x35240682, 0x353f005d, 0x00249583, 0x2e060000, 0x2b206984, 0x4b20698c, 0x20206986, 0x4f83698a,
	0x05266984, 0x020f0f0a, 0x69840555, 0x69820520, 0x830e4021, 0x2805211a, 0x05226784, 0x67950501, 0x84c80321, 0x8c2c2067, 0x40522267, 0x20d18222,
	0x22568401, 0x82100602, 0x840220c0, 0x1a02275c, 0x55020d0d, 0x58832202, 0xe7830220, 0x5c831920, 0x093a0223, 0x25ca8209, 0x0f020102, 0x99821f11,
	0x60115024, 0x016c0511, 0x20d88505, 0x2fd68235, 0x0000ffff, 0x9906e1ff, 0x3700f005, 0xbf003200, 0x2c0a3f41, 0x02154061, 0x290f0327, 0x27270201,
	0x29ce8428, 0x00010127, 0xffb80f0f, 0x7b83b4e0, 0xe4210882, 0x82db83b4, 0x40f02208, 0x2182830b, 0x2783380f, 0x95670f82, 0x080f2106, 0x00278283,
	0x700f100f, 0x4a5d030f, 0x1125052b, 0x2b5d3535, 0x0c534111, 0xeb840120, 0x1b013c22, 0x5c367d8a, 0x09011140, 0x1f0e0f03, 0x030e2f0e, 0x01091f01,
	0xb8040009, 0x7984f2ff, 0xf6200882, 0x2105f94a, 0x76830a04, 0x83120421, 0x21158276, 0xf883b4e4, 0xf0220882, 0x79830c40, 0x40041f27, 0x03047004,
	0x05634104, 0x352b2b24, 0x78845d2f, 0x21053542, 0xf583d706, 0x00bb0123, 0x24778ab7, 0x0116405b, 0x2570822b, 0x002b012b, 0xe783221c, 0x83261c21,
	0xb81c21e4, 0x82066260, 0x40fa2208, 0x21708325, 0x6d83041c, 0xe3851c20, 0x1c101c33, 0x1c031c20, 0x2d202d0f, 0x2d602d50, 0x2d8f2d70, 0x096c4106,
	0x355d112e, 0x00353f00, 0xcbff0400, 0x67020000, 0x08084f43, 0xb6000f2c, 0x090a1140, 0x0c0caf0f, 0x06070706, 0x01050206, 0xb80a2a0b, 0x1740f4ff,
	0x55020d0c, 0x0f09400a, 0x040a0a37, 0x2a0e0004, 0x11830c0f, 0xffb80f25, 0x821f40c0, 0x0f0f2a15, 0x7f010707, 0x92110111, 0x26ea8400, 0x0c0c0c00,
	0x18005502, 0x2831744d, 0x0c0cb6f8, 0x88015506, 0x06d64b10, 0xfd5d2b22, 0x21064d5d, 0x08822f33, 0x2f331122, 0x00220784, 0x09833f2f, 0x2407c843,
	0x33112321, 0x0acc4313, 0xbc770137, 0x543804bc, 0xabb00138, 0xab0ffeab, 0x025d04ab, 0x0180fe2f, 0x08d14380, 0x43001a21, 0x162405d1, 0x00002400,
	0x2b06dd6b, 0x02d1052b, 0x00250016, 0x00020000, 0x862c1f83, 0x0300d105, 0x58000600, 0x05493c40, 0x0d5a8518, 0x1a001532, 0x2a002501, 0x4a004501,
	0x44024b01, 0x56025903, 0x086a8518, 0x03020e25, 0x18000305, 0x29236a85, 0x21010129, 0x86050209, 0x851894fa, 0x93851168, 0x849d0421, 0x84282093,
	0x827e20a3, 0x840820b3, 0x883d200f, 0x843b20b3, 0x842b200f, 0x8289200f, 0x84d520b8, 0x842c200f, 0x82cd200f, 0x8475202f, 0x822e200f, 0x840120d3,
	0x826220d3, 0x000635d3, 0x094e406c, 0x58023902, 0x01780302, 0x02020377, 0x14010203, 0x0236e882, 0x04041403, 0x46054905, 0x73057c06, 0x03050406,
	0x24000504, 0xa44f3900, 0x0f08230b, 0x02820108, 0x040a2208, 0x0436042b, 0x0455044d, 0x047b0465, 0x5d2f0407, 0x33115d5d, 0x2f005d2f, 0x0130313f,
	0xfd10875d, 0x3d0382c0, 0x5d01c008, 0x23215d00, 0x01230109, 0xd5620533, 0x2cfe2cfe, 0xf02c02cb, 0xfbfa0505, 0xe185d105, 0x84f60521, 0x883020a1,
	0x843820d1, 0x8231200f, 0x000326b1, 0x04000072, 0x08b182bf, 0x07000324, 0x51000b00, 0x063505b2, 0x40c0ffb8, 0x020f0f15, 0x09060655, 0x03023501,
	0x0809350a, 0x13094005, 0x19830437, 0x08831620, 0x05052708, 0x04020304, 0x0d720809, 0x0d1f0d0f, 0x0c680902, 0x105de610, 0x391711e4, 0x2b2b2f2f,
	0x3fed3f00, 0x2f3912ed, 0xa982ed2b, 0x21352123, 0x20038203, 0x2b038213, 0xb3fbbf04, 0xfc344d04, 0x34e5031b, 0x05280983, 0x08fdb021, 0xb077fcb0,
	0x2507bb5a, 0x1602f005, 0x97823200, 0x0b6e0120, 0x2d978205, 0x40eb0007, 0x06350309, 0x01050103, 0xea550914, 0x6d002007, 0x0882077e, 0x4fb4f421,
	0x0b20081b, 0x0020b583, 0x22059e43, 0x44eaffb8, 0x002505a2, 0x020c0c12, 0x22288255, 0x182340fc, 0x280a3345, 0x060c0c0a, 0x090a0055, 0x2c058209,
	0x090f0978, 0x09500940, 0x05140403, 0x06786db8, 0xfc200882, 0xed185984, 0xa86924b6, 0x522a8205, 0x088405c1, 0x08826083, 0x22050856, 0x6b086c05,
	0x08560cf3, 0x822b2009, 0x00ed2800, 0xed3f332f, 0x6d213031, 0x212e0561, 0xfdc63b05, 0x7304c619, 0xdffa2105, 0x3d43d105, 0x96043106, 0x1602d105,
	0x00003300, 0x76000100, 0x00050000, 0x53081a82, 0x40eb000c, 0x09040947, 0x540b4508, 0x6409640b, 0x930b660a, 0x960a9309, 0xa309a40b, 0x0d0ba70a,
	0x0b060806, 0x0b160816, 0x08270328, 0x0b340a34, 0x0b430a43, 0x0b550359, 0x0b760b67, 0x0499038b, 0x04b80899, 0x04eb08b8, 0x0b1508eb, 0xb3c0ffb8,
	0x0a372925, 0x09200786, 0x08200786, 0x40240782, 0x37292630, 0x0f649618, 0x64020327, 0x02028d04, 0x2f178304, 0x0801350b, 0x04030535, 0xb009a003,
	0x0309d009, 0x403f3c83, 0x371e1923, 0x09200910, 0x09720960, 0x09e009d0, 0x03070906, 0x08090b04, 0x00020607, 0x82001000, 0x020e2304, 0x074c112f,
	0x2b5d3507, 0x002f3371, 0xed2fed3f, 0x31391711, 0x10015d30, 0xc087ed87, 0x08230483, 0x822b01c0, 0x5d2c0800, 0x35012971, 0x21350109, 0x15012115,
	0x00052101, 0x6c0276fb, 0x4804a8fd, 0x4a02c0fc, 0x9a038afd, 0x025802b8, 0xfeb0b30e, 0xa3fd1a06, 0x3105f145, 0xd105ee04, 0x37001602, 0xffff0000,
	0x00000600, 0x0f84e604, 0x0f843c20, 0x00004423, 0x050b4305, 0x003b2308, 0x00010000, 0x060000b3, 0x00d10544, 0x40070123, 0x25152559, 0x061b021e,
	0x18011875, 0x48093834, 0xd3826f09, 0x09221931, 0x03100803, 0x23142208, 0x020c0c02, 0x84112355, 0x14112606, 0x10082310, 0x220f8210, 0x820f0f20,
	0x0d062205, 0x2005820d, 0x22218417, 0x820b0b2a, 0x0918220b, 0x25058209, 0x07181b07, 0xd3461014, 0x21088207, 0x2f83b4e0, 0xf7210882, 0x823283b4,
	0xb4e72108, 0x08823583, 0x83b4d421, 0x21088238, 0x3b83b5e4, 0xb8081022, 0x8206715f, 0x42f62008, 0x082105d8, 0x822b8312, 0x84f0200f, 0x2208822b,
	0x831b40e4, 0x08803c2c, 0x08b008a0, 0x50252003, 0x03257025, 0x24250808, 0x253f250f, 0x12115d02, 0x475d2f39, 0xc4200594, 0x23059a47, 0x103939ed,
	0x2f260a86, 0x2b2f2bed, 0xf86f00ed, 0xed5d3105, 0x3139395d, 0x14015d30, 0x06060706, 0x11231107, 0x2805947f, 0x14113311, 0x16161716, 0x20088217,
	0x05dd6536, 0x06336d08, 0x504d5144, 0x9ac597e1, 0x514e4be2, 0x35343bc6, 0x61c5629a, 0x3638359c, 0x9d8e03c6, 0x464543d7, 0x01befe0a, 0x42480b42,
	0x029cd645, 0x6da6fd43, 0x2f2d2c8e, 0xfce40307, 0x2e2d081c, 0x02718531, 0x0100005a, 0x00006c00, 0xf0052006, 0xed002700, 0x195b1240, 0x1a6c255b,
	0x21641d64, 0x1a79246c, 0x21082479, 0xb3c0ffb8, 0x1d370b09, 0x40210782, 0x2608823b, 0x0d0c4014, 0x84025502, 0x02302a05, 0x02401430, 0x19041440,
	0xad941825, 0x100c2210, 0x22268210, 0x18141219, 0x26298594, 0x02090917, 0x18222255, 0x2407df4b, 0x29a02990, 0x91941804, 0x5d5d2533, 0x2b2f3311,
	0xc4250083, 0xed393912, 0x053d6b2f, 0x3cfd3c32, 0x1712ed3f, 0x2b2b5d39, 0x2b2b3031, 0x1121215d, 0x20054841, 0x06285534, 0x16161728, 0x35211117,
	0x92753521, 0x20230805, 0x02141100, 0x06211507, 0x3cc0fd20, 0x342d2c77, 0xfedcdcfe, 0x762d2d34, 0x01c0fd3c, 0x01cb9d9a, 0x82310177, 0x77340801,
	0x9a019dcb, 0x58268301, 0x6a9f3b39, 0xcef9f9ce, 0x393b9f6a, 0x7dfe2658, 0x015a7cae, 0x1401c238, 0xa2fe5e01, 0xfec2ecfe, 0xff7c5ac8, 0x007e00ff,
	0x07e20200, 0x09d96718, 0x24ff8e28, 0x24007501, 0x7a180e40, 0x10340c63, 0x40f4ffb8, 0x020d0b0a, 0x0d100055, 0x2b250904, 0x355d352b, 0x18074743,
	0x20106f84, 0x183d832e, 0x240a6f84, 0xeeffb80e, 0x833c83b4, 0x60402008, 0x0e230530, 0x82000509, 0x3b478646, 0x04e1ff6c, 0x028c0643, 0x002e0136,
	0x01160100, 0x0000e29d, 0x020d4012, 0x09091424, 0x24227382, 0x45510821, 0xff6d2407, 0x84ee03e6, 0x85302029, 0x00cc3129, 0x09401e00, 0x50414001,
	0x03417041, 0xdeffb841, 0x41266186, 0x2519123e, 0xa7842b2b, 0x64feb924, 0x35845f04, 0x3585c620, 0x00001d22, 0x20053968, 0x232d86d6, 0x160e171a,
	0x35212d82, 0x20d58200, 0x202382a0, 0x212d8393, 0x1d4ad500, 0x8efe2b05, 0x16000000, 0xb80701b1, 0x2f86f2ff, 0x02040725, 0x51012503, 0xb12405d9,
	0x5c04e2ff, 0xd1205d84, 0x9e295d84, 0x190000fb, 0x010203b3, 0x212f8422, 0xc2820c0c, 0x071f2223, 0x255f8317, 0x00003535, 0x8f830002, 0x068d2208,
	0x00180014, 0x404f0137, 0x0d20163e, 0x0f073710, 0x26431b4a, 0x26563743, 0x2e062979, 0x370f0d20, 0x20168333, 0x08048305, 0x20151624, 0x01215f3e,
	0x2b032121, 0x35010c3e, 0x08090340, 0x0f12150c, 0x28200120, 0xffb8121b, 0x1010b4ec, 0x08825502, 0x76b4ee21, 0xe42406a5, 0x0d0d1540, 0x14211282,
	0x237c820b, 0x09091212, 0x12270b82, 0xb8190820, 0x83b6f8ff, 0x1b19220c, 0x07955900, 0xf4200882, 0x08823684, 0x56b4f821, 0xd0210647, 0x82b584b4,
	0x47b420bf, 0xf8220653, 0x38831a40, 0x39900026, 0x3201391f, 0x0d3e8318, 0x73b80821, 0x08820626, 0x18068d61, 0x5d1a52b4, 0x2a82052a, 0x2008885b,
	0x06885bf6, 0x09090627, 0x88085506, 0x0a1f4738, 0x9c63fd20, 0x2bed240b, 0x43393912, 0xed240549, 0x39125d2f, 0x35055656, 0x5d2f3912, 0x313939ed,
	0x2b2b2b30, 0x012b015d, 0x22230014, 0x085a2726, 0x16162708, 0x07061415, 0x71181615, 0x35250810, 0x37363233, 0x316d1836, 0x06062507, 0x16161115,
	0x86081282, 0xf3fe8d04, 0x3fb04fcd, 0x5adffdbc, 0x44393b95, 0xbc9f7f8b, 0x3b3a45c2, 0x24244992, 0x2e278242, 0x496d8a2d, 0x1e202168, 0x95489642,
	0xcabc01a1, 0x2a2cf8fe, 0xd20524fe, 0x2e2bfee0, 0x7f5b8a2b, 0x1a1125bd, 0x6f5997c7, 0xa016201f, 0x62221e1d, 0x35747055, 0x3e752c2c, 0x1f26a2fc,
	0x0001009d, 0x0464fe3d, 0x005d047f, 0xb9e00008, 0xf6ff0700, 0x020d0ab4, 0xffb80755, 0x0e4a40e0, 0x75550211, 0x06070107, 0x821a0807, 0x07340829,
	0x05041a06, 0x0c030505, 0x001a000a, 0x004a002a, 0x00690059, 0x00070075, 0x05150505, 0x05450525, 0x05660556, 0x05070573, 0x0c010100, 0x55020c0c,
	0x09090a01, 0x1a2f0582, 0xffb80405, 0x100b40fa, 0x04550210, 0x820f0f0c, 0x07b94c05, 0x2b831885, 0x4d0e0421, 0xf2200627, 0x2105026c, 0x8a660604,
	0x08ea6106, 0x1440f636, 0x55060909, 0x04a00490, 0x0a040402, 0x4f0a1f09, 0x030a5f0a, 0x57053446, 0xc43008f4, 0x102b2bed, 0x2f5d2fc4, 0x3f3f005d,
	0x87013031, 0x0806854a, 0x2b5d0027, 0x1101012b, 0x33011123, 0x7f040101, 0xfebc37fe, 0x5701cc43, 0x5d045a01, 0x2cfedbfb, 0x2504d401, 0x3c03c4fc,
	0x08e78200, 0x64fe6c3e, 0x1406d603, 0xaf002f00, 0x00461d40, 0x28650057, 0x2078117f, 0x1d06217d, 0x011b3e1a, 0x070f3f2d, 0x191a1a0c, 0xb8071c12,
	0x0c40e0ff, 0x00370c09, 0x1c070107, 0x03b40b07, 0xb4eaffb8, 0x08665218, 0x1182d083, 0x83055c59, 0x21402f08, 0x55021010, 0x0f310303, 0x02313f31,
	0x29830423, 0x07b74d18, 0x83181221, 0xb812252e, 0x1340e2ff, 0x12291783, 0x020c0c08, 0x0d041255, 0x2105820d, 0x7a423085, 0x45db8205, 0xed3507b3,
	0x5d2f3333, 0x39122f2b, 0x3f002f39, 0xed3fed2f, 0x5d303139, 0x05544225, 0x42352321, 0x23340546, 0x34352622, 0x36363712, 0x35213537, 0x06061521,
	0x15020607, 0x08051e47, 0x3316166b, 0x03163233, 0x5a1c209a, 0x4c5ab343, 0xe5912f3d, 0x4b4e5cde, 0x34fe6cc5, 0xe575e802, 0x0672595a, 0x27310a0c,
	0x56387924, 0x284b6647, 0xa954285b, 0x774f0e3f, 0xe84c3945, 0x00018ce5, 0x5ecd7077, 0x4e879e09, 0xfe7578ce, 0x48228fe8, 0x184b2628, 0x00340516,
	0xb9000100, 0x5f0464fe, 0x16007c04, 0x14400b01, 0x15161503, 0x7fd81873, 0x01052408, 0x5a080d0c, 0xb6200c47, 0x0222e483, 0x3b48001a, 0x20088207,
	0x09d943fc, 0x0f0f1726, 0x0c005502, 0x200a334b, 0x06fe4322, 0x8205ad67, 0x77e6202d, 0x0420063c, 0x21083c77, 0xd018091c, 0x1a2018f5, 0x212dad67,
	0x3777b4ee, 0x4417201e, 0x2b201710, 0xed240082, 0x3f002b2b, 0xed270082, 0x30313912, 0x6723015d, 0x247714a8, 0x58bc290b, 0xbeb563bc, 0x180464fe,
	0x080f8c67, 0x00030020, 0x04e1ff89, 0x00140675, 0x00240017, 0xb9040131, 0xd6ff2f00, 0x370d0ab3, 0xd6ffb829, 0x08821d40, 0x0b2a2125, 0x831b370d,
	0x66230804, 0x3e26012c, 0x241f240f, 0x06242402, 0xb8123e1e, 0x1c40e8ff, 0x55020d0c, 0x124a123a, 0x2c011202, 0x8318063e, 0x06352b0e, 0x06020645,
	0xb818250a, 0xe982fbff, 0x82550221, 0xb4f82308, 0x08840909, 0x0cb6f423, 0x2408820c, 0xffb8001a, 0x181384fc, 0x210d044e, 0x50181034, 0x0029098c,
	0x3f331f33, 0x26240233, 0x213b8304, 0x38830c26, 0x0c1a2629, 0x020b0b0c, 0x83140c55, 0x000c2113, 0x0c221383, 0xc745ffb8, 0x21088405, 0x1d820f0f,
	0xf4ffb824, 0x4a830a40, 0x900c8025, 0x180c020c, 0x420bbe49, 0xfd2907e7, 0x322b2b2b, 0x2b5d3f00, 0x270383ed, 0x5d2f3912, 0x30315ded, 0x2b201482,
	0x6205fa49, 0x342c0687, 0x36363712, 0x17163233, 0x26071216, 0x23077577, 0x05070606, 0x09d16118, 0x36365a08, 0x242e7504, 0x9898d23a, 0x2d253ad2,
	0xd339262d, 0x39d39797, 0x04bd2e25, 0x6c292031, 0x296c4f4f, 0x02042f22, 0x2e8efd72, 0x4f702824, 0x2428704f, 0xbe00032e, 0x898754fd, 0xfd548789,
	0x0701aebe, 0x8a8a8253, 0xfafe5482, 0x36d68f54, 0x46393946, 0xa18fd537, 0x453ee98e, 0x3002823e, 0xffff00e9, 0x0000bb00, 0x5d047701, 0xd5001602,
	0x080a8200, 0x00c100b4, 0x04a80400, 0x0118005f, 0x063b4042, 0x16020601, 0x45182618, 0x66185618, 0x021c0718, 0x0269013a, 0x0197027a, 0x18a602a6,
	0x020802c7, 0x01c60302, 0x01018601, 0x18001a01, 0x01080900, 0x080108f9, 0x09030a0b, 0xffb80901, 0x100b40ee, 0xb4093718, 0x03171802, 0xffb80317,
	0x103a40c0, 0x7f550210, 0x18090103, 0x05030208, 0x10100c01, 0x050c3f14, 0x01050506, 0x172a171a, 0x17801736, 0x150517a4, 0x77172517, 0xe9179417,
	0x0617f917, 0x02181709, 0x0f0f0501, 0xf0ffb800, 0x0e091d40, 0x1a000037, 0x1a1f1a0f, 0x08031a3f, 0x09090c03, 0x0c035502, 0x05820c0c, 0x20371070,
	0xa46018e4, 0x19892115, 0x2d0d2743, 0x33115d3c, 0x2f332b2f, 0x715d3917, 0x1e6e2f00, 0x12112105, 0x2b320d82, 0x87013031, 0x7ac0c010, 0x18712bf5,
	0xc004c0c0, 0x0f827271, 0x715dfd37, 0x5d01c008, 0x01232171, 0x11231107, 0x36011133, 0x16323336, 0x07d96833, 0x04036d08, 0x3dfef8a8, 0x01bcbc70,
	0x3f7f4880, 0x0b073c1c, 0x2f0d2f10, 0x01fb1d4d, 0x84fe6de9, 0xdafd5d04, 0x384fa101, 0x0202a602, 0xf1fe212f, 0x3d000100, 0x7f040000, 0x07001406,
	0x1f409400, 0x110f2202, 0x18025502, 0x55020b0a, 0x02050405, 0x01060302, 0x0000071a, 0x041a0302, 0xb8050504, 0x1c40f0ff, 0x2b37100c, 0x20042600,
	0x04050307, 0x3f081f83, 0x68060800, 0x05070107, 0x00040306, 0x40c0ffb8, 0x37100926, 0x001c000c, 0x005a004b, 0x0079006a, 0x098d0006, 0x0301090f,
	0x44041304, 0x65045504, 0x06047604, 0x10088204, 0x105d5de6, 0x112b5df6, 0x2f33ea82, 0x173f3f00, 0x01303139, 0x10872b5d, 0x8710c0fd, 0x8208c0fd,
	0x00013f01, 0x23212b2b, 0x01230101, 0x7f043303, 0xfeb8fecd, 0xd101c497, 0x3d03d3d7, 0x2004c3fc, 0x5f45f401, 0x04652e06, 0x0015005d, 0x121b40ff,
	0x370d0b20, 0x18048303, 0x2036b7a7, 0x05a94dfe, 0x09040025, 0x82550209, 0x45e820cc, 0x0620064f, 0x2f084f45, 0x0609091e, 0x17920055, 0x1760171f,
	0x0d031790, 0x2606cf6a, 0x020c0c0c, 0x181a0955, 0x222dc7a7, 0x180fb4f2, 0x640ef266, 0x0a2106eb, 0x1865830a, 0x2013c7a7, 0x06d947f6, 0x2b2bfd26,
	0x3f003939, 0x09c9a718, 0x212b2b27, 0x06063523, 0x05534923, 0x2c493320, 0x37270805, 0x65043311, 0x4e874aba, 0xbc54784b, 0x5b9e20bc, 0xbc36885d,
	0x363d4e76, 0x05f3fd50, 0x27bafcf9, 0x033c4352, 0x42ffff40, 0x5e080503, 0x16025d04, 0x00005900, 0x68000100, 0x110464fe, 0x46001406, 0x4140dc00,
	0x060f020f, 0x0e1b0e09, 0x28241e24, 0x1e361534, 0x28442836, 0x2d563c47, 0x17693c56, 0x190f1779, 0x323f3318, 0x21240c32, 0x3f01223d, 0x0c030c3f,
	0x32321c19, 0x12212123, 0x141c1b2b, 0x5502100f, 0xe8ffb81c, 0x840d0db4, 0xb4f42308, 0x08840c0c, 0x0bb4ea23, 0x2308840b, 0x0909b5f8, 0x04300882,
	0x40d6ffb8, 0x370c090e, 0xb4080404, 0x80121c23, 0xb8248582, 0x2940c0ff, 0x00241282, 0x043a4800, 0x3a212583, 0x233d830c, 0x06121b3a, 0x23480783,
	0x83182006, 0x85123319, 0x2bf41047, 0x2bed2b2b, 0x2f33112b, 0x39125d2b, 0x0782ed39, 0x12822f20, 0x122c1482, 0x332f2f39, 0x0039122f, 0x3fed2f3f,
	0x2209036b, 0x6014055d, 0x352305b1, 0x45232634, 0x36290739, 0x37363637, 0x35262635, 0x25068234, 0x15213523, 0x54182221, 0x0e8d0cbe, 0x16328708,
	0x04161617, 0xb4425b11, 0x2e3a4b5c, 0x3fb98c8c, 0x30324542, 0x7d4c892c, 0xe45a5796, 0x00ff3803, 0x2d306d44, 0x2d334136, 0xfeaa5076, 0x2f6942d9,
	0x404b332b, 0x1c5a993f, 0x1f216744, 0xa8556022, 0x784f0e3f, 0x364e3744, 0x58973c39, 0x3135844e, 0x1c0b1345, 0x875368a5, 0x9e9a063a, 0x6620221d,
	0x1a624f43, 0x28a51617, 0x3b6a2527, 0x19197266, 0x23252f07, 0xffff005f, 0xe1ff6a00, 0x7c047104, 0x52001602, 0xad4c0000, 0x94210806, 0x11007c04,
	0xe1001e00, 0x173a1840, 0x174a1e35, 0x0d561e43, 0x15030605, 0x1c040f3e, 0x08090340, 0xc854180c, 0xf07b180d, 0x0d212723, 0x3a55020d, 0x62824a00,
	0x1f209027, 0x02206f20, 0x19574c19, 0x0b40e226, 0x55020f0f, 0x2108574c, 0xf350b4f6, 0x05e56d06, 0xffb80828, 0x0f0fb4e4, 0x574c5506, 0x06f4420b,
	0x090a0823, 0x21188209, 0xe0671f88, 0x4c2b2009, 0x03510657, 0x2bed2305, 0xa9543f00, 0x30312405, 0x4c10015d, 0x3725093f, 0x32333636, 0x06596200,
	0x0805f942, 0xfe94047f, 0xa341deeb, 0x4247bc48, 0xf366bb3e, 0xa0c20001, 0x498d9e92, 0xb0a24b77, 0xfefe4102, 0x2b24abfe, 0x22042bfe, 0x3e42b97b,
	0xfedafe42, 0xc0ccdadf, 0x226dfeb6, 0x0000de1d, 0xfe690001, 0x04fa0364, 0x00290077, 0x0c1240b5, 0x20060c02, 0x36232513, 0x40233614, 0x081f7a23,
	0xe0ffb817, 0x100e1440, 0x4f193f37, 0x19190219, 0x04153f1d, 0x3f260c03, 0xffb8040b, 0x0c09b7d6, 0x18180437, 0x21df8204, 0xfa84b6f8, 0xc24db420,
	0x40e02414, 0x640d0d36, 0x0c220827, 0x0b820909, 0x202b0023, 0x23328306, 0x08121b20, 0xf34a1c83, 0x0b0c2606, 0x1255020b, 0x05e54216, 0x1c412a20,
	0x2bed2105, 0x3207ab50, 0x33332bed, 0x002b2f2f, 0x3f3fed2f, 0x5d2f33ed, 0x422b3031, 0x102513d6, 0x16322100, 0x06234617, 0x0805f44a, 0x3233336a,
	0x5efa0316, 0x4d56b13e, 0x755c2d3c, 0x53494bc6, 0x03013701, 0x0c43a054, 0xa6449d5e, 0x323239bd, 0x73644b81, 0xaa57608e, 0x794b0e3b, 0x3c4f3647,
	0x92d04243, 0x44010e01, 0x3ed31b25, 0x70c1ee32, 0x272c2d8e, 0x01000099, 0xe2ffb100, 0x5d045c04, 0x08011700, 0x050716b5, 0xb8033e0f, 0x0b40f0ff,
	0x55021010, 0x0f0e1003, 0x0f830582, 0xc3831220, 0x56030931, 0x79036603, 0x05038803, 0xb8150a03, 0x78b4f4ff, 0x634906ec, 0x1a152705, 0xeaffb800,
	0x3a831d40, 0x4a040021, 0x26280aeb, 0x55020c0c, 0x0d0d0200, 0xb8220582, 0xe84ae4ff, 0x09192a10, 0x00550609, 0x191f1991, 0x0d934501, 0xffb80622,
	0x8205766a, 0x42e62008, 0x0621059e, 0x8273830c, 0x059e420f, 0xf2210882, 0x825883b4, 0x05f64e08, 0x0d230884, 0x8355060d, 0x05f64e08, 0x830a0621,
	0x87062160, 0x0b8f4318, 0x182bed21, 0x820b9d73, 0x3f00270d, 0x2b2b2b5d, 0x7f7c3fed, 0x07815309, 0x32335208, 0x36363736, 0x04331135, 0xdfe2f45c,
	0x2014bcf6, 0x565c6b1f, 0x151d1e73, 0xda9701bc, 0x02ded7db, 0x5d7ffdc6, 0x2b2b2e78, 0x7b2c2c2c, 0x0081025a, 0xfe300001, 0x04880464, 0x000b005d,
	0x2a4940b3, 0x39082502, 0x4b083402, 0x79084402, 0x09100702, 0xf1cf181a, 0x02260811, 0x0a080b05, 0x0a060600, 0x4a060504, 0x6a064504, 0x7a066504,
	0x08067704, 0x05060c04, 0x02050b08, 0x000a0404, 0x1d5cffb8, 0x33088305, 0x100a1640, 0x0d000037, 0x06010d2f, 0x0b0b1604, 0x20045502, 0x04271182,
	0xc42b2b2f, 0x8333115d, 0x17122706, 0x3f3f0039, 0xcf18115d, 0x4b3910ef, 0x14405853, 0x070a030b, 0x0a030200, 0x04080106, 0x05000709, 0x01060904,
	0x2500820f, 0x015d0059, 0x02830123, 0x01332908, 0x04013301, 0xa6fed588, 0x01cba2fe, 0xd54ffebc, 0x53014f01, 0xfe4ffecb, 0xfd6b0264, 0x02020395,
	0x02a8fdf7, 0x0011fd58, 0xb03bf182, 0xe30564fe, 0x23005d04, 0x19401401, 0x1826061b, 0x18021875, 0x4909393d, 0x55090209, 0x052305cc, 0x74220c08,
	0x0882079e, 0x0cb4f225, 0x8255020c, 0x40f62408, 0x82090921, 0x3f1a2809, 0x02237f23, 0x830c1123, 0x0a112117, 0x11231383, 0x550e101a, 0xe62906b7,
	0x020d0db4, 0xffb81055, 0x058a74ee, 0x70103029, 0x23100210, 0x5cf4ffb8, 0x232105ad, 0x211f8318, 0x3c830023, 0xf6241582, 0x0b0b1840, 0x84060856,
	0x84072050, 0x1a072350, 0x45410810, 0x20088207, 0x213b85d8, 0x3b830a08, 0x27840820, 0xec221582, 0x7c831c40, 0xc0089029, 0x25500208, 0x55022560,
	0x012805d7, 0x251f250f, 0x5d03253f, 0x220cdd55, 0x552b2bed, 0x2f2107d9, 0x05c6465d, 0x825d2f21, 0x002b2614, 0x17123f3f, 0x230b8239, 0x3139395d,
	0x07665f18, 0x081cde55, 0x60e30582, 0x73c8524f, 0x53c773bb, 0x4bbc5f50, 0x43863834, 0x388643bb, 0x01bc443b, 0x35a872be, 0xfe053737, 0x06980168,
	0xa7363934, 0xfd9f0272, 0x2387719c, 0x03041e26, 0x0539fcc7, 0x7b28271c, 0x00640278, 0xff710001, 0x041106e2, 0x013d005d, 0x362d4026, 0x4432361f,
	0x5532441f, 0x6832551f, 0x690f6804, 0x7d37691a, 0x0c377d1a, 0x09283b28, 0x05160603, 0x3e300d21, 0x403a0a06, 0x18370e0c, 0xb3c0ffb8, 0x362c0782,
	0x40f4ffb8, 0x020c0c17, 0x001b3655, 0x24060e74, 0x0c00131b, 0x06574909, 0x2009d54e, 0x2d24830b, 0x0f0f1a00, 0xb8005502, 0x1940eeff, 0x09821010,
	0x09293a25, 0x830c290a, 0x8429201a, 0x1a292833, 0xffb81318, 0x831140f2, 0x16132740, 0x55020b0b, 0x1e830e13, 0xf4241582, 0x0d0d1240, 0x20200f82,
	0x13214383, 0x253f8312, 0xffb82813, 0x0983b4e6, 0xde200882, 0x21059f41, 0x25830e28, 0x83002821, 0x22158235, 0x831640f0, 0x2890304b, 0x28c028a0,
	0x3f282803, 0x3f3f1f3e, 0x513f6f3f, 0x6a570b41, 0x41c42006, 0x0e85069e, 0x2bed2f22, 0x2b2b0282, 0xed3f002b, 0x123f3939, 0x572f3917, 0x23240878,
	0x23272622, 0x25058449, 0x34352626, 0x59183712, 0x162107ec, 0x05ff4316, 0x33113726, 0x17161611, 0x08086b7d, 0x27023483, 0x12163335, 0x332f1106,
	0x60739d37, 0x270625a2, 0xa3716694, 0x722f3333, 0x9f87e490, 0x5d1a1e10, 0x14473347, 0xba061d16, 0x18151c09, 0x5e463a39, 0x9d16191b, 0x7290e489,
	0xc160f701, 0x6359504b, 0x5d624443, 0x61bf4c4c, 0xa71501aa, 0xccfe6c11, 0x3f7142b7, 0x11194937, 0x020f2c12, 0x11b8fd48, 0x1613112c, 0x7a373947,
	0x3401b641, 0xfea7116d, 0xffff00eb, 0x00000500, 0xdb052d02, 0x77001602, 0x240f8300, 0x04e2ffb1, 0x3c0f825c, 0x00d10136, 0x00160100, 0x0000fb8e,
	0x020a4020, 0x1d501d30, 0x01031d60, 0xf2ffb81d, 0x05595640, 0x55181d21, 0x5d210522, 0x07834835, 0x028c0625, 0x56520036, 0x1b290c11, 0x02090908,
	0x181b0055, 0x07115606, 0x200f7d55, 0x2261829d, 0x8201b60a, 0x834e8322, 0xff71244b, 0x831106e2, 0xd401214b, 0x17284b82, 0xb6009d01, 0x0a000000,
	0x41222382, 0x4682133e, 0x4e182383, 0x8e2d0fe1, 0x75015000, 0x02b21800, 0xffb81101, 0x20a182ee, 0x21758210, 0xf4550c11, 0x00352206, 0x08a38201,
	0x07060031, 0x2500d105, 0x2b40d900, 0x24762465, 0x1f341602, 0x1a1e061f, 0x09031b35, 0x2f180635, 0x4f073f07, 0x04077f07, 0x59170707, 0x150f010f,
	0x83101600, 0xffb82444, 0x460db4d6, 0xee24056b, 0x0b0b0b40, 0x10205782, 0xb838d384, 0x1940c0ff, 0x00370d09, 0x270f2700, 0x1d1f1a01, 0x1f1d1d01,
	0x1a181417, 0x18233683, 0x42f2ffb8, 0x1821056d, 0x253d8308, 0x0c0c1a18, 0x15825502, 0x0c40ee22, 0x18214383, 0x2043830c, 0x2010821a, 0x05d172f6,
	0x0d0a1829, 0x1855060d, 0x820c0c0a, 0xffb82505, 0x0909b4f6, 0x2f210882, 0x2000822b, 0x82038233, 0x32fd2502, 0x2f5d2f32, 0x27089b58, 0x39125ded,
	0x2f005d2f, 0x4208c84a, 0x2321097c, 0x08325535, 0x26275408, 0x11212326, 0x35211123, 0x11211521, 0x17163221, 0x07061616, 0xaf574953, 0x5b5d6e8a,
	0x34382f78, 0x95323531, 0xc6ebfe83, 0x680452fe, 0x53010cfe, 0x4c55bf98, 0x6ccc0149, 0x30453ab1, 0x282210b1, 0x734b4e6f, 0xfd132223, 0xb0210522,
	0x2468feb0, 0x5eae3b42, 0x2808059d, 0xed078a04, 0xeb013602, 0x17010000, 0x35008d00, 0x15006101, 0x30011040, 0x60084008, 0x04087008, 0x04070800,
	0x5d2b2505, 0x08208235, 0xff730023, 0x053905e5, 0x002a00ec, 0x3a0c408a, 0x581c491c, 0x79067605, 0xb811050c, 0x0b40e0ff, 0x0137100a, 0x3f048220,
	0xb81d3420, 0x4340c0ff, 0x55020f0f, 0x030f1d1d, 0x34262a2a, 0x13130903, 0x020f3417, 0x00131e1e, 0x39057a5c, 0x012c0f2c, 0x2c1f2c0f, 0x2c3f2c2f,
	0x6c201d04, 0x0b0b1209, 0x16095502, 0x05820909, 0x0c0c0622, 0x68300582, 0x2bf6102b, 0x32fd2b2b, 0x33115d5d, 0x33335d2f, 0x2105c167, 0xc56ced3f,
	0xed2b2c05, 0x2b2b3031, 0x0606255d, 0x18242223, 0x2107c9a2, 0x18493324, 0x06072509, 0x15210706, 0x08092351, 0x3905334d, 0xa991ec63, 0x6161eefe,
	0x5f626969, 0x8ca91201, 0x4e105ff6, 0xae6d8df9, 0x0f584648, 0xc2fc3403, 0xc44a4758, 0x50f78a70, 0x35274110, 0x01636368, 0x01afb720, 0x6c62661f,
	0x40df2734, 0x3b3b3a52, 0x8bad72ad, 0x494846d9, 0x7800434a, 0x05250729, 0x001602ec, 0x149f6036, 0x263de759, 0x02ebff2c, 0x82d105ea, 0x2d48085d,
	0x02000000, 0xfdff1200, 0xd105a208, 0x3d000e00, 0x46b3e300, 0xb830010c, 0x0ab3acff, 0xb81e3710, 0x1e40c0ff, 0x07370e0b, 0x16373734, 0x03353518,
	0x352c2828, 0x16340824, 0x16140837, 0x0210100e, 0xffb81655, 0x0f0fb4f2, 0x35470884, 0x23118205, 0x0c0cb4e6, 0x017f1184, 0x24118205, 0x0d0db4e8,
	0x242c8306, 0x0c1c40ec, 0x2209820c, 0x82090914, 0x35162605, 0x0a0f1500, 0x3a47820f, 0x0d0b0c0f, 0xb80f5502, 0x0c40f4ff, 0x0f37110e, 0x3f2f3f71,
	0x35131801, 0x4af8ffb8, 0x3522051f, 0x20820d19, 0xee220f82, 0x5d831040, 0x09123530, 0x00550209, 0x35350135, 0x2f332f28, 0x00822b5d, 0x415ded21,
	0x112005d7, 0x82065658, 0x32fd2d12, 0x2fed2f00, 0x3f2f32fd, 0x2f3912ed, 0x2205d841, 0x42263401, 0x213005f8, 0x36373632, 0x06143736, 0x23060607,
	0x06211121, 0x02200882, 0x02820b82, 0x26222323, 0x057b7d23, 0x12242282, 0x37123613, 0x08071f43, 0x32d307b4, 0x83903735, 0x0f01ecfe, 0x38368f85,
	0x4755cf34, 0xfd98c054, 0x03f0fdee, 0x2508030b, 0x2f491d1d, 0x15446530, 0x0a0e0c3c, 0x40240f1e, 0x0e434716, 0x03040b05, 0x98520191, 0x494c55c0,
	0x724bc901, 0xfd102523, 0x27251acb, 0xb06c5569, 0x05384237, 0x55d97121, 0x59ecfed6, 0x2c2b6b5a, 0x01c00326, 0x47171602, 0x2d014601, 0x87440162,
	0x4223b8fd, 0x0200ae3b, 0x0000c800, 0xd1058308, 0x27000e00, 0x21401f01, 0x34071e17, 0x1f162121, 0x3408031b, 0x0f561a16, 0x081f2001, 0x02090906,
	0x00140855, 0x02166f16, 0xf0ffb816, 0x10101140, 0x10165502, 0x05820f0f, 0x0d0d0822, 0xb8220582, 0x6f47eaff, 0x0c162305, 0x0f820b0b, 0x32830c20,
	0x0f0a1625, 0x8255060f, 0x05ee7631, 0xa6410883, 0x410a2006, 0x192505a6, 0x160f1500, 0x214b820f, 0xa641160f, 0x0e0d2e08, 0x710f3711, 0x01294029,
	0x1a14191d, 0x065e61b8, 0xfc210882, 0x825983b4, 0x4bda2008, 0x1a210545, 0x20638308, 0x2079821a, 0x828283b4, 0xb4ee2508, 0x55020c0c, 0xe2210882,
	0x827883b4, 0x82ec2008, 0x8306201a, 0x4bec2011, 0x1a200545, 0x1a247884, 0xf610286c, 0x2208a358, 0x4132fd2b, 0x2b2611df, 0x2bed5d2b, 0xe9443939,
	0x68332005, 0xe141089d, 0x23112517, 0x21113311, 0x32260383, 0x16161716, 0xcb41b407, 0xc6652516, 0xc69b02c6, 0x2919b241, 0x22fdde02, 0xb8fdd105,
	0x9f414802, 0x012f0806, 0x0000ffff, 0xd105fd05, 0xbe001d00, 0x0e002640, 0x17581748, 0x0f620e60, 0x0f700e70, 0x1a010807, 0x010b0b35, 0x04350307,
	0x13011303, 0x5b191214, 0xf22a06e2, 0x0b0b3240, 0x04125502, 0x05820f0f, 0x09091222, 0x06200582, 0x2105b450, 0x0b820d0d, 0x5f1f122f, 0x02067f06,
	0x07060306, 0x01031400, 0x2036831a, 0x083c4601, 0x83080121, 0x1a012124, 0x15823083, 0x1a40ee22, 0x01214c83, 0x2c46830c, 0x0c0c1401, 0x10015506,
	0x55060909, 0x0805697f, 0x00822b20, 0x32fd3324, 0x29462f32, 0xed2b2409, 0x50332f00, 0x122506ed, 0x5d303139, 0x070f4621, 0x33363629, 0x16171632,
	0x57111516, 0x02210a86, 0x060b4673, 0xf65f3708, 0x3daa6567, 0x16c6453d, 0x6479201e, 0x0566c36a, 0xfeb0b021, 0x32331f2d, 0x73a33435, 0x8c0111fe,
	0x2e2b8c4a, 0xff222631, 0x00cd00ff, 0x07750500, 0x013602ed, 0x0f4600f2, 0x3c3f0805, 0x10006101, 0x70010a40, 0x23000123, 0x25000521, 0x355d2b01,
	0x06000200, 0xe604f9ff, 0x1a008f07, 0xb9002800, 0xff1900b9, 0x0a5e40ec, 0x29550211, 0x46013803, 0x04145519, 0x181a1919, 0x83161714, 0x1a193301,
	0x00010013, 0x1a181716, 0x07000501, 0x350f0b0b, 0x77751b07, 0x753a0806, 0xaa250125, 0x1e011e0f, 0x2803001e, 0x1a221b1a, 0x21012170, 0x7000211b,
	0x360a010a, 0x65015601, 0x04017601, 0x03010a16, 0xffb80017, 0x091440e0, 0x00003710, 0x012a502a, 0x0a82402a, 0x83201721, 0x2b2f2104, 0x08cf6618,
	0x5d2f5d2d, 0x2f393911, 0xed2fed5d, 0x82333f00, 0x825d2007, 0x2f332f04, 0x112f32ed, 0x01391712, 0xc0fd1087, 0x0683c008, 0x31c0082a, 0x2b5d0030,
	0x06060101, 0x20054444, 0x08444427, 0x37373627, 0x01013301, 0x05f74903, 0xdb493320, 0x04710805, 0x22cafde6, 0x6134365d, 0x1072282d, 0x2d460f0e,
	0x201c4814, 0xfd24163f, 0xb301dbd6, 0x05218601, 0xc9a8a8c9, 0x6002b605, 0x025f5f5e, 0x1bfbd105, 0x191b624c, 0xb9010811, 0x0b060902, 0x4f32340c,
	0x92fc4f04, 0xbe016e03, 0xa6a8a8a6, 0x71626370, 0x00010000, 0x05affec8, 0x00d1053b, 0x40e9000b, 0x03020611, 0x00093404, 0x0c0c090b, 0x0955020c,
	0x22ef8213, 0x830a40fe, 0x0000250b, 0x07140602, 0x82077165, 0xb4f42508, 0x55020b0b, 0xe6240882, 0x0f0f1740, 0x08220982, 0x05820909, 0x0d0d2a22,
	0x12200582, 0x1b823283, 0x1b40fa2a, 0x55060f0f, 0x0d0d0a07, 0x0c210583, 0x2905820c, 0x0d400d78, 0x03020d70, 0x06440214, 0x44088207, 0x08820506,
	0x20060644, 0x824d8402, 0xb4ea210f, 0x08825083, 0x82050644, 0xb4e42108, 0x08825283, 0x83050644, 0x83b62008, 0x6c022258, 0x0aff430c, 0x2006dd45,
	0x6600842b, 0x2b2b0587, 0x332f2f00, 0x31333fed, 0x43212130, 0x113907d8, 0xfea40223, 0xe702c624, 0xbb24fec6, 0xdbfad105, 0x2ffa2505, 0xffffaffe,
	0x0cb96800, 0x08055145, 0x052c0521, 0x001200d1, 0x40c60021, 0x0111631b, 0x0c0c341a, 0x08350b07, 0x07341b03, 0x130a0a08, 0x49020015, 0xee2006e5,
	0x0224a282, 0xffb80055, 0x82050150, 0xb4da2108, 0x08936018, 0x0b0b1331, 0x00565502, 0x23710001, 0x2340230f, 0x181b0c02, 0x2649e853, 0x0c0cb6ee,
	0x18075506, 0x220c3e90, 0x185d32fd, 0x2207ba49, 0x672f33ed, 0xed200796, 0x2109e249, 0xcf491121, 0x45072009, 0x05210d0b, 0x05af462c, 0xe503e42c,
	0x5c01e1fc, 0x4c55c098, 0x0545cf49, 0x01e22905, 0x368f8519, 0xcd013438, 0x28059646, 0x68feb0d1, 0xae3b4223, 0x0ab14672, 0x2d11f169, 0x00c80001,
	0x058a0400, 0x000500d1, 0x7018407f, 0x6c4f3c59, 0x4e521805, 0x050d4208, 0xffb80328, 0x0c0cb4e4, 0x70185506, 0x02263657, 0xaffe0a00, 0x9f829e05,
	0x000d2408, 0x40fe0013, 0x1a12091b, 0x03114a12, 0x030a3410, 0x3407130c, 0x10050103, 0x020c0c0a, 0x0a131055, 0x48f4ffb8, 0x0a25056d, 0x020d0d14,
	0x230f8255, 0x0b0e40ec, 0x0a231b82, 0x8209090c, 0x070a280f, 0xf8ffb80e, 0x820c0d40, 0x140e2c1c, 0x10100a0c, 0xb80c5502, 0x83b4feff, 0x23088210,
	0x0b0bb4f4, 0xf4211184, 0x252f83b6, 0xb8010c0c, 0x2e82f2ff, 0x01214182, 0x114b4213, 0x22088f5d, 0x832340ec, 0x060e7881, 0x3b831c20, 0x0100202b,
	0x13150000, 0x04070713, 0x221b830e, 0x82051304, 0x0fb4219d, 0x08827182, 0x7184f620, 0x2b2f0529, 0x392bed2b, 0x4911ed2f, 0x0e850600, 0x00822b20,
	0x8405ac77, 0x2f003508, 0x32fd2f33, 0x31ed3f32, 0x23015d30, 0x23112111, 0x12363311, 0x2f080782, 0x21112133, 0x05070202, 0xe4fbbc9e, 0x9b8278bc,
	0xfe8d7203, 0x0e0efead, 0xaffe7694, 0xabfe5501, 0x02d60102, 0xfa9a01b1, 0xfe7504df, 0xbfaffd9b, 0x6b06fb41, 0xa2820959, 0x00203f08, 0x05a80700,
	0x013700d1, 0x092e4000, 0x29331833, 0x401d4033, 0x54354124, 0x7524541d, 0x731d7118, 0x13270b24, 0x1a353333, 0x0e0c0e13, 0x09160102, 0x13013710,
	0x07003700, 0xeaffb808, 0x0e825440, 0x13085d08, 0x270a0909, 0x2c031a1f, 0x07373222, 0x330e0c0a, 0x022c0735, 0x04352d14, 0x21150209, 0x00032c05,
	0x37200a2f, 0x37500a5f, 0x37600a6f, 0x012c2c06, 0x33270237, 0xc5000635, 0x0c040422, 0x0455020c, 0x15150514, 0x0c070a08, 0x09061a0e, 0xb8051fc5,
	0x1740f4ff, 0x55021010, 0x0b0b0e05, 0x16220582, 0x05820f0f, 0x09090822, 0xff480582, 0x0e052308, 0x0f820d0d, 0x38390529, 0x393f3910, 0x187f395f,
	0x2c09c270, 0x332b2b2b, 0x323917f4, 0x2bfd102f, 0x29088432, 0x3f2f005d, 0x32fd3917, 0x0582122f, 0xf1451120, 0xc02b2205, 0x831f8287, 0x28078204,
	0x5d003031, 0x23012321, 0x25018211, 0x26012301, 0x02842726, 0x35232322, 0x67054247, 0x37280b5b, 0x33333636, 0x06222315, 0x0805694a, 0xa807073a,
	0x69f4fdf2, 0xf4fd6bc4, 0x585102e6, 0x25132068, 0x3c531b1c, 0xb2a7473c, 0x0f1e0b3d, 0xc4568f2c, 0x122e915c, 0xb53c091d, 0x423c47a5, 0x251d1e4b,
	0x3e7d2a13, 0x57fda902, 0x54080384, 0x699c3afe, 0x1b1c573d, 0xad7fb118, 0x6924581e, 0x9d020866, 0x630661fd, 0x19552c70, 0x17b180ac, 0x3a5b1b1c,
	0x00278785, 0xff510001, 0x058504e5, 0x004000ec, 0x541440a2, 0x673b5801, 0x7f3b6901, 0x700c7f0b, 0x74327031, 0xb8320938, 0x4640e0ff, 0x0b37100b,
	0x08048220, 0x1d3d3e21, 0x09202034, 0x01307034, 0x34293030, 0x0d100234, 0x0d020d7f, 0x0934110d, 0x0b1e3d0a, 0x8317370d, 0x6c232b04, 0x0b0b143a,
	0x0c3a5502, 0x05820d0d, 0x3d1e1e2a, 0x170c033a, 0xffb80315, 0x08277418, 0x0a40f822, 0x032e2183, 0x31314273, 0x2f332f0c, 0x2b2bf610, 0x526c12ed,
	0x2bed2805, 0xed3f002b, 0x845d2f33, 0x79431804, 0x5d2b2209, 0x05946101, 0x47052d47, 0x35200944, 0x2305cd44, 0x32333523, 0x0c6e6218, 0x35230722,
	0x6408ae48, 0x6b080520, 0x3f301604, 0xe650465b, 0x4afb9385, 0x71f9630f, 0x3634a848, 0x33333c31, 0xb3c95991, 0x2e35d2ad, 0x4e4c6f2d, 0x64303b84,
	0xf84b0d17, 0x4bb17b7e, 0x7da3524e, 0xcd027634, 0x6966812a, 0x44443caa, 0x3bde1e37, 0x2d292a4b, 0x654f456f, 0xa91b1e1f, 0x5236787f, 0x1e151818,
	0x0d341114, 0x273620db, 0x5a88302c, 0x0f1bb07f, 0x00002f09, 0x0805d76c, 0xd1053940, 0x1e010900, 0x020b2340, 0x07190704, 0x15070703, 0x53025b07,
	0x62026c07, 0x70027f07, 0xc8087607, 0xe702e602, 0x0d07f607, 0xe8ffb807, 0x0f0b1640, 0x0c100237, 0x0607370f, 0x03040201, 0x02820308, 0x02070824,
	0x4f60ffb8, 0x20088205, 0x053b44fa, 0x10060227, 0x02550210, 0xef141914, 0x561f2016, 0x12280afe, 0x55020c0c, 0x0d0d2600, 0x78260582, 0x400b0f0b,
	0x6b82020b, 0x0f204782, 0x07214182, 0xe74a1814, 0xb4e62133, 0x10e74a18, 0x0c0cb42b, 0xb8045506, 0x09b6f6ff, 0x18088209, 0x200d2680, 0x09ec56ed,
	0x2b2bfd26, 0x3939112b, 0x08059d54, 0x312b2b23, 0x21715d30, 0x23011123, 0x01113311, 0xc5390533, 0xc5c81cfd, 0x04d1db02, 0x0557fba9, 0x0469fbd1,
	0x06954797, 0x8f07392a, 0x17000900, 0x32404d01, 0x2d214b41, 0x70100f0a, 0x10100210, 0x0d0faa14, 0x5a410d01, 0x41252005, 0x172f115a, 0x600a501a,
	0x110a020a, 0x100a101a, 0x41030400, 0x19244c69, 0x1940190f, 0x18636941, 0x410de65b, 0xed200969, 0x28056941, 0x39391211, 0x5d2fed2f, 0x077241ed,
	0x0b823320, 0x33200382, 0x4a0d7a41, 0x88410d84, 0x4ab52009, 0x96410c6f, 0x0d5f4a09, 0x1d71cd20, 0x00260805, 0x400b0120, 0x1f010983, 0x27012901,
	0x37013a20, 0x47014b20, 0x65015c20, 0x76206700, 0x0d207400, 0x0d0a201f, 0x04830c37, 0x03020236, 0x01c80188, 0x00b30102, 0x661e0020, 0x021b861b,
	0x0d12131b, 0x3f080182, 0x15041e1b, 0x2f320220, 0x08080108, 0x35160700, 0x03070315, 0x120d0005, 0x05201e1b, 0x01154f04, 0x220f1515, 0x00300020,
	0x50040040, 0x6e000100, 0x01224022, 0x09080408, 0x04550209, 0x100e0514, 0x6f050e47, 0x844418d1, 0xb8052205, 0x05744aff, 0xe8250882, 0x060f0fb4,
	0x0cd16f55, 0x0c0cb622, 0x6c211182, 0x0c6f6121, 0x105d3238, 0x325d5df6, 0x17125d2f, 0x2f2f0039, 0x11ed3f3f, 0x5d2f3912, 0xf04b39fd, 0xc05d2f06,
	0x87013031, 0x5dfd7a10, 0x01c00818, 0xfe452b2b, 0x6b332007, 0x372205f7, 0xe7453636, 0x053b080f, 0xa3fdfe75, 0x33c6c687, 0x4e28285a, 0x12230d1e,
	0x4fb4b945, 0x1f4e4553, 0x34172b1d, 0xa7025a6b, 0xd10559fd, 0x120164fd, 0x3e551719, 0xa62d521b, 0x1d19b186, 0x843b581a, 0x82002e7c, 0x122a08fa,
	0x1805fdff, 0x2100d105, 0x00b98a00, 0xb3acff1b, 0x09371009, 0x40c0ffb8, 0x370e0b16, 0x03203503, 0x17131301, 0x14010f35, 0xb34a0c00, 0x4af62006,
	0xf62207b3, 0xa2540db4, 0x40de2705, 0x020c0c1f, 0xa2540055, 0x23782405, 0x6201238f, 0x132206bc, 0x23831e20, 0xffb82023, 0x057344ec, 0x0916202e,
	0x20550209, 0x332f1220, 0x2b2b2b2f, 0x2e09d443, 0xfd2f00ed, 0x3f2f2f32, 0x2b3031ed, 0x5123212b, 0x05241f35, 0xe6fdc618, 0x201c1951, 0x1cff509b,
	0x72054d54, 0x3b2010eb, 0x240abd73, 0x05e1ff73, 0xb96372da, 0x42055f45, 0xb4240c91, 0x55060c0c, 0x5f451182, 0x4c637205, 0x00ffff2f, 0x05e5ff73,
	0x02ec0546, 0x00260016, 0x0f4f7100, 0x4f010021, 0x05250583, 0x001a00d1, 0x05814f8a, 0x814f4020, 0x0300212a, 0x241c634f, 0x011c501c, 0x17634f1c,
	0x2f3f0023, 0x32524ffd, 0x4f1e444f, 0x00201936, 0x3b277b18, 0x0c0c122e, 0x000f5502, 0x18152b07, 0x14070425, 0x30277b18, 0x3917ed24, 0x587bc410,
	0x005d2505, 0x39123f2f, 0xab277b18, 0x00ffff23, 0x0e657344, 0xfec82408, 0x05be05af, 0x010b00d1, 0x06124010, 0x080b0302, 0x08013504, 0x0a081405,
	0x55021010, 0xfcffb808, 0x840d0db4, 0x054d5f08, 0x230be072, 0x0909b4f6, 0xe22a1a84, 0x0d0d1a40, 0x14085506, 0x05820c0c, 0x09090622, 0x082c0582,
	0x400d1300, 0x0a370b09, 0xb4f8ffb8, 0x08824b83, 0x0fb4dc25, 0x8255020f, 0xa9561808, 0x0c162207, 0x220f820c, 0x820b0b08, 0x4d122005, 0x0d2405ab,
	0xb8011404, 0x82069654, 0x05234608, 0x8f500882, 0x08012106, 0x0f822683, 0x82051a46, 0x052c4608, 0x91430882, 0x20088205, 0x21b282e2, 0x08825506,
	0x83b4ec21, 0x75088290, 0x012005f5, 0x220c9850, 0x1811ed2b, 0x20086070, 0x097a56ed, 0x3f00ed25, 0x502f32fd, 0x43080c9c, 0x05231133, 0xc6c6fb02,
	0x8dc6dd02, 0xfad105bc, 0xfa2305dd, 0x0001fedd, 0x008e0001, 0x05ea0400, 0x001900d1, 0x351a40a6, 0x54114511, 0x74096c11, 0x0c020516, 0x05053514,
	0x030c1800, 0x14011700, 0xe6ffb800, 0x2705d455, 0x0f0f0600, 0x0a005502, 0x2006d845, 0x053a4fee, 0x0b0e0023, 0x2415820b, 0x40dcffb8, 0x2add830d,
	0x0f1b7800, 0x140d011b, 0x7bffb80c, 0x08820570, 0x1140f622, 0x0c273a83, 0x020c0c06, 0x4e100c55, 0xda2006b0, 0x0c283085, 0x06090914, 0x1a6a0c55,
	0x51070b47, 0xfd220974, 0xcc820032, 0x2f391222, 0x22059a6b, 0x4b112321, 0x2622059b, 0xbc603526, 0x112d080b, 0xc6ea0433, 0x6364dd81, 0x473f3fac,
	0x232314c6, 0xd6716b72, 0x7602c652, 0x35312a28, 0x0172a435, 0x5767fefc, 0x2f2f3079, 0xb1021e28, 0x05394b00, 0x82760721, 0x000b30f9, 0x0a1140ba,
	0x08030206, 0x09013404, 0x46060014, 0xaf8507c5, 0x84100021, 0x830420ea, 0xb80025b5, 0x0c40e7ff, 0xc62ae084, 0x04051408, 0xffb80114, 0xd583b4fe,
	0xf8210882, 0x822883b4, 0x46fc2008, 0x012105c8, 0x24288312, 0xb805c601, 0x05ea5dff, 0xda200882, 0x08822c84, 0x474ff220, 0xffb82705, 0x0b0bb4f8,
	0x11825502, 0x3b5ef620, 0x05052e05, 0x0d1f0c0d, 0x0d500d3f, 0x5d040d70, 0x20f68211, 0x2000832b, 0x220483f4, 0x84fd10ed, 0xed2b2707, 0x32fd2f00,
	0x7e52333f, 0x0733230d, 0xef82f976, 0x02c62e24, 0x7e52c62e, 0x05db2206, 0x23e98425, 0x0308affe, 0x0f24e982, 0x2340d300, 0x0c20e983, 0x0f24ea83,
	0x0800130d, 0x00207c83, 0x0024a884, 0x0c140900, 0xab41fb84, 0x20fb840a, 0x82fb840c, 0x20fb8615, 0x20fbb50c, 0x5ffb99f8, 0x052b0637, 0x1f101105,
	0x50113f11, 0x99117011, 0x2f3329fb, 0x00ed2b2b, 0x32fd2f2f, 0x2a110241, 0x23113311, 0x81f94707, 0x832e02c6, 0xbc8d2102, 0x26090841, 0x03fedbfa,
	0x82000200, 0x05230800, 0x00d105f4, 0x0021000e, 0x071340a4, 0x161b1b34, 0x03193518, 0x56163408, 0x081b010f, 0xffb81614, 0x5a10b4ee, 0xf8200561,
	0x21054858, 0xc2581e16, 0x05a84306, 0xf23a2182, 0x0b0b1540, 0x0e165502, 0x55020909, 0x167f164f, 0x19161602, 0xb80f1500, 0x3b84e8ff, 0xe0210882,
	0x823483b4, 0x43d02008, 0xc97e0522, 0x2c0f8205, 0x0e0a40f4, 0x710f3711, 0x01230f23, 0x2c671819, 0x11fd2208, 0x084f6d39, 0x005d3223, 0x05f17a2f,
	0x3031ed22, 0x2018345a, 0x07185a35, 0x58250521, 0xfe23154c, 0x58600266, 0x05221949, 0x4258b021, 0x00260806, 0x00c80003, 0x05950600, 0x000e00d1,
	0x0023001f, 0x441640f2, 0x3407010d, 0x17161919, 0x16340803, 0x56210322, 0xde84010f, 0x7fb4ec21, 0xda2106af, 0x064c7eb4, 0x83b3f421, 0xffb835cd,
	0x0c3d40c0, 0x0f0f3710, 0x0a201421, 0x55021010, 0x0b0b0020, 0x2f830583, 0x09002023, 0x220b8209, 0x820d0d19, 0x0c0e2205, 0x2005820c, 0x2a118420,
	0x250f2578, 0x19022570, 0x45161408, 0x08820731, 0x82053145, 0x06314508, 0x83081621, 0x450f822c, 0x08820531, 0x20088841, 0x218f82e2, 0x11825506,
	0x82053145, 0xb6ec2308, 0x11820c0c, 0x4b246c21, 0x57180b55, 0xfd230a99, 0x822b2f32, 0x5ded2700, 0x2f3f2f00, 0x9c5b3fed, 0x415d2005, 0x33211765,
	0x059c5e11, 0x11230125, 0x41530433, 0xae591567, 0xc6732208, 0x13655bc6, 0x6741d120, 0xc5fd2405, 0x4e00d105, 0x22200667, 0x22066b41, 0x411040a8,
	0x63410966, 0x41f62007, 0xee200763, 0x2b086341, 0x110e0f40, 0x21710f37, 0x2140210f, 0x463a2d41, 0x1622055f, 0xe154ffb8, 0x0a2d4105, 0x2d412020,
	0x5ded2212, 0x08204100, 0x411f1f41, 0x7d5c201b, 0x06174112, 0x0100003a, 0xe5ff6100, 0xec052905, 0xa4002a00, 0x1c3a0a40, 0x06641c49, 0x26040676,
	0x3907855f, 0x100a200b, 0x19341837, 0x40c0ffb8, 0x020f0f20, 0x28191955, 0x20242409, 0x17522834, 0x06092e05, 0x56031603, 0x241a0303, 0xb8031417,
	0x053f42ff, 0xd6230882, 0x190909b4, 0x240d5424, 0x0d1d40f2, 0x2012820d, 0x0cad5f73, 0x2418242f, 0x1f0c0f18, 0x2f0c020c, 0x2f33335d, 0x6385182f,
	0x39112308, 0x8018005d, 0x2b310b4d, 0x2b3031ed, 0x16015d2b, 0x02141512, 0x23040607, 0x295b1822, 0x37362707, 0x21353636, 0x7e532135, 0x6b222005,
	0x9a0805b7, 0x04043233, 0x69686061, 0xeffe6663, 0x57fe8da3, 0x8df75110, 0x4844cc7b, 0x03d3fc49, 0x475c0e23, 0x8966b447, 0x5d1157f0, 0x01ac85fe,
	0x602c050f, 0xacc2e4fe, 0x6a67dffe, 0xdb25366b, 0x4b574d41, 0xad80c950, 0x3939af77, 0xdc434d37, 0x00603527, 0xc8000200, 0xd307e1ff, 0x0b00f005,
	0x27011e00, 0x14783240, 0x06030901, 0x1a161509, 0x5916561c, 0x7616791c, 0x340c081c, 0x14131e13, 0x34031c03, 0x03100216, 0x091c3409, 0x0619130f,
	0x09080c15, 0x0c550209, 0x40f6ffb8, 0x820b0b2b, 0x0c142209, 0x2205820c, 0x820d0d04, 0x0f252205, 0x3705820f, 0x0210101a, 0x3f0c1855, 0x6f0c580c,
	0x0c0c040c, 0x1915000f, 0xb4d0ffb8, 0x08822e83, 0x82054e41, 0xb4e22108, 0x08823a83, 0x1740e722, 0x19213e83, 0x213e8314, 0x3e830419, 0x20731926,
	0x0f140e12, 0x8207ce43, 0x058e4108, 0xce430882, 0x08094506, 0x2245ea20, 0x05ce4307, 0xce432182, 0x42088205, 0x088305a0, 0x2705975d, 0x09090a0f,
	0x6c0f5506, 0x0c12bb18, 0x4232fd21, 0xed2107b5, 0x083d4512, 0x002c0a82, 0x3fed3f2f, 0x1712ed3f, 0x5ded2f39, 0x32078b6b, 0x00101100, 0x01003233,
	0x11231123, 0x12331133, 0x83202100, 0x08058212, 0xfe05072a, 0xfedddbff, 0xdc0301fe, 0xfb0101db, 0xc6c6f079, 0x6a0124f9, 0x3f011301, 0x90fe6c01,
	0xccfec5fe, 0xe80291fe, 0x35012801, 0x69080982, 0xfedbfed7, 0x013601c9, 0x0530fd0e, 0x01acfdd1, 0xfe46012d, 0xfe95fe63, 0x0166fe93, 0x02000089,
	0x00002c00, 0xd105de04, 0x1f001000, 0x0c40e900, 0x06350328, 0x075a1c47, 0x04051759, 0x40e8ffb8, 0x3710092e, 0x05130403, 0x0f060605, 0x40033411,
	0x55020d0d, 0x03010340, 0x34120003, 0x0500030f, 0x12091519, 0x55020f0f, 0x19831609, 0x32820920, 0x0c0cb422, 0xb8260e82, 0x1240f0ff, 0x09820b0b,
	0x03060429, 0x055f0409, 0x49120501, 0x1c840c98, 0x830c0021, 0xb800233b, 0x9777ddff, 0x0c002105, 0x0f824583, 0x82058868, 0x63f62008, 0x002905d8,
	0x060d0d0a, 0x0c0a0055, 0x2605820c, 0x40f6ffb8, 0x8209090e, 0x21782809, 0x2140210f, 0x18032160, 0x240c4f40, 0x5d2f32fd, 0x05604a17, 0x2f00ed22,
	0x0805d260, 0xed2b5d21, 0x30313912, 0xfd108701, 0x5d002bc0, 0x21112321, 0x26012301, 0x36343526, 0x33363637, 0x6e110321, 0x50080c89, 0xfec6de04,
	0xee43febf, 0xa596de01, 0xbe474e5f, 0xc6ea0173, 0x6856d2fe, 0x25342e2b, 0x56822d29, 0xb0fd5002, 0xd5336e02, 0x37a572b3, 0x24fd2832, 0x1d163202,
	0x5043701f, 0x1e2c296a, 0x00ffff00, 0x04e1ff68, 0x0278041d, 0x00440016, 0x00020000, 0x080f8274, 0x1d067c44, 0x39002700, 0x1640ce00, 0x04351f0c,
	0x3930293d, 0x294b0440, 0x12653940, 0x33731275, 0xffb8330a, 0x0b1d40c0, 0x0622370d, 0x2500412b, 0x25022510, 0x41190625, 0x3f370018, 0x31220a06,
	0x280c1818, 0xd66bffb8, 0x1b282305, 0x776ab803, 0x45088206, 0x08840581, 0x020d0d23, 0x23088255, 0x0c0cb4d4, 0xaf490884, 0x24118205, 0x092f40f8,
	0x28128209, 0x3b1f3b90, 0x3b023b3f, 0x21208340, 0x05841231, 0x080c1b22, 0x0c270783, 0x020b0b18, 0x83220c55, 0x860c2727, 0x2bf6103a, 0x926b2b2b,
	0x2bed260b, 0x122f3912, 0x07475b39, 0x12ed5d33, 0x2b303139, 0x1616015d, 0x23001415, 0x26272622, 0x054d4102, 0x36363722, 0x15210283, 0x07ba5706,
	0x33363627, 0x34131632, 0xab841826, 0x03b1080e, 0xfe4846ee, 0xb66cdbd4, 0x0e4f5040, 0x354d1419, 0x4fc2eb48, 0x81423688, 0x30cf8040, 0x4b083535,
	0xae5e65b3, 0x5792b20f, 0x030248a0, 0x6c2e353a, 0x03aa973e, 0x86c746b8, 0x49b6fefa, 0x21015f4c, 0x6c9b4bd0, 0x4935ac5d, 0x09071159, 0x0804ad04,
	0x313e0b06, 0x364dab35, 0x22fe3e49, 0x2e37b7b9, 0xae1c4319, 0x2d3640d8, 0x000300da, 0x040000b9, 0x005d0453, 0x00240015, 0x40fc0033, 0x05030a0c,
	0x15031a14, 0x05237614, 0xd6ffb80c, 0x0c092040, 0x2c111237, 0x011e4f3c, 0x1d071e1e, 0x2d05083d, 0x1608073d, 0x0f2c121b, 0x02101006, 0xffb80f55,
	0x07ea46f0, 0x4240e624, 0x12820d0d, 0x0b0b1222, 0x0c220582, 0x05820909, 0x25070f2b, 0x0f08001b, 0x0055020f, 0x211c8308, 0x1c830200, 0x0d10002d,
	0x90003710, 0x01350f35, 0x83082c1e, 0x0c2c2928, 0x55020c0c, 0xb8071a2c, 0x82063f7c, 0x84e02008, 0x21088258, 0x3a83b4ee, 0xf6200882, 0x70058649,
	0xb822061a, 0x2182ecff, 0x82550621, 0x05394818, 0xf6230882, 0x820c0cb6, 0x34882111, 0x0cb11819, 0x105d3224, 0x00822bf4, 0x8a4bed20, 0x39122207,
	0x07b141ed, 0x307c7120, 0x765d2005, 0x904906db, 0x06297c07, 0x80180320, 0x13200d3d, 0x71080e8d, 0x39415304, 0xfe7b9740, 0x7db00132, 0x3b3f387f,
	0x81634a5e, 0x2a201ffd, 0xebc44d69, 0x2624474a, 0x3d243b1d, 0xf14e5826, 0x2c7970b2, 0x52012b2c, 0x2f2a7e51, 0x115d042a, 0x486a211d, 0x0a227a53,
	0x7d018918, 0x15103a24, 0x0bcefe05, 0xfe411816, 0x1d453742, 0x93fe0712, 0x4819190f, 0xb9000100, 0xbb030000, 0x05005d04, 0x1a408300, 0x05043f01,
	0x15827003, 0x18070021, 0x200d3c85, 0x07324103, 0x32410882, 0x41088205, 0x08820532, 0x76063241, 0x3241066c, 0x5d188207, 0xec200820, 0x28059d45,
	0x09091403, 0x88035506, 0x09394106, 0xe9722b20, 0x005d3705, 0x31ed3f2f, 0x11210130, 0x03211123, 0xbcbafdbb, 0xb8030203, 0x998248fc, 0x09000226,
	0xaf04f4fe, 0x20080982, 0x0013000d, 0x3b2240cd, 0x02124a12, 0x3e100501, 0x130c050a, 0x10033e07, 0x020c0c0c, 0x0ac91055, 0x05574f10, 0xb80e0722,
	0x82069278, 0x05a87308, 0xb6200883, 0x0e241d83, 0xffb80c1a, 0x8305df4f, 0x05e34408, 0x0d0a0c29, 0x0c55060d, 0x820c0c0a, 0x21be8205, 0xa6830940,
	0x010c0c27, 0xffb800c9, 0x056b60e0, 0x70100021, 0x084d0ae7, 0xb8200805, 0x1240c0ff, 0x00370e0b, 0x152f1500, 0x1302153f, 0x0407071a, 0xed2f05c9,
	0x5ded2f39, 0x2b2f3311, 0x6f4f0083, 0x23e68207, 0x2f39122b, 0x0028ee82, 0x3232fd2f, 0x332fed3f, 0x0813ee5c, 0x0702065d, 0xfcafaf04, 0x7579afb8,
	0x87be0273, 0xaffebdfe, 0xfe53800d, 0xfe0f01f4, 0xc1ac01f1, 0x0301f901, 0x1f0343fc, 0x8662fefb, 0x00ffff00, 0x04e6ff6a, 0x027c0460, 0x00480016,
	0x00010000, 0x06000034, 0x005d0432, 0x40d80031, 0x3a0e3a12, 0x4a0e4a2d, 0x5f0c5f2d, 0x6f0c6f2f, 0x8226082f, 0x09b324cd, 0x8215370b, 0x1a402107,
	0x24260882, 0x2f2d2db4, 0xf85cb417, 0x821a2009, 0x05f85c39, 0x095e5d08, 0x1a083710, 0x240a0909, 0x2903171c, 0x07313c1f, 0x2f0e0c0a, 0x0229072d,
	0x043f2a11, 0x1d120209, 0x00052905, 0x31210a2e, 0x31510a5e, 0x31600a6f, 0x31700a7f, 0x01292908, 0x2d240231, 0xc700062f, 0x051a041f, 0x0a081212,
	0x170e0c07, 0x1cc70906, 0x32330505, 0x333f3310, 0x336f334f, 0x5c05b54d, 0xc35c07c4, 0x09c65629, 0x5c012321, 0xc25c06c5, 0x32320822, 0x5b9afee3,
	0x8afe51ba, 0x31af01d9, 0x4a1b1f4b, 0x7c453554, 0x1b092d96, 0x4067210a, 0x216940ba, 0x2c081b0b, 0x35457d94, 0x1c194b55, 0xfe012d4d, 0x038302fe,
	0x49024208, 0x5561601a, 0x7d64a242, 0x4c17431a, 0xe401043f, 0x40041cfe, 0x1942194b, 0x46a2667b, 0x19635951, 0x41000100, 0xc203e6ff, 0x3d007804,
	0x26b7bb00, 0x7d127534, 0xb82f033c, 0x2f40e0ff, 0x0837100d, 0x08048220, 0x3f1b3b39, 0x1cbf1caf, 0x061c1c02, 0x902d3f31, 0x032da02d, 0x3e292d2d,
	0x0a200431, 0x0a020a30, 0x063f0e0a, 0x232e1c09, 0x40f4ffb8, 0x020c0c0e, 0x371b2355, 0x3b371c2e, 0x83140904, 0x830d2012, 0x1b142112, 0x2108ae47,
	0x8c18b4de, 0xf03c0f42, 0x09091740, 0x90005502, 0x803f7f3f, 0x0980023f, 0x09020990, 0x370f0b40, 0x5d2b2f09, 0x29069d47, 0x17122bed, 0x2bed2f39,
	0xcc5c2f2f, 0xed5d220e, 0x05a84a39, 0x0e641420, 0x0bc95c11, 0x5c363721, 0xc95c0acc, 0x03640810, 0x444457c2, 0xd27452a4, 0xe2490d66, 0x276a326a,
	0x2a31322a, 0xa3307429, 0x28812871, 0x24303d34, 0x66235b25, 0x530d43c5, 0x9b4e5fbe, 0x6d544243, 0x017a675c, 0x28825e39, 0x2e2c2427, 0x134640ce,
	0x3a431815, 0x1212483c, 0x0d06a208, 0x2f443e11, 0x0c11113d, 0x1bcf3437, 0x22221c22, 0x85585675, 0x8919071d, 0x0805ab44, 0x04660427, 0x0109005d,
	0x0b134007, 0x02070402, 0x0301030d, 0x37100b38, 0x100e3802, 0xffb80737, 0x0c1640f2, 0x02550211, 0x2005830e, 0x05b55c07, 0x08030523, 0xca831808,
	0xb6f8230b, 0x22820909, 0xb8001a24, 0x4c61e0ff, 0x20002105, 0x200f7f7e, 0xbc7518ea, 0x091c2f10, 0x00550609, 0x0b1f0b92, 0x03020b60, 0x31830c07,
	0x21062346, 0x1d45041a, 0x45088207, 0x0882051d, 0x82051d45, 0x061d4508, 0x830c0421, 0x210f8276, 0xae5cb4f0, 0x051d4510, 0x830a0421, 0x88042263,
	0x0d1d450a, 0x465d3921, 0x2b250558, 0x2b2bfd2b, 0x07375b39, 0x2b303123, 0x0bac5c2b, 0x66042608, 0xaab7fdba, 0xb04302ba, 0xb9fc4703, 0xc5fc5d04,
	0x00003b03, 0x00b90002, 0x06660400, 0x00090015, 0x40360117, 0x1135411d, 0x100f0a2f, 0x14101001, 0x070d0d50, 0x40f2ffb8, 0x133f412b, 0x1fc91734,
	0x020a2f0a, 0x00c9110a, 0x20101010, 0x0a100310, 0x54410410, 0x7ae62030, 0x54411084, 0x1f192406, 0x41196019, 0x18205e54, 0x21105441, 0x00842bf6,
	0x2b2bfd24, 0x3b671239, 0x0b955c05, 0x945ced20, 0x0d644105, 0x410d965c, 0x6b2d0972, 0xa9a9b105, 0x01ab05b1, 0x5a59585b, 0x09804101, 0xb8012c08,
	0x94a6a694, 0x6b5c5e69, 0xc1000100, 0xa9040000, 0x1a005d04, 0x4d40ef00, 0x0e092001, 0x27021b37, 0x320e361a, 0x051a3516, 0x821a0102, 0x1b0a3318,
	0x020f2b0f, 0x1816b40f, 0x180f0a16, 0x1a120416, 0x795c3c02, 0x3f133106, 0x05070512, 0x56080501, 0x9600961a, 0xb600b61a, 0x1a203482, 0x12262383,
	0xc0ffb800, 0x4f821b40, 0x1c000027, 0x1c1f1c0f, 0x3cf67d02, 0x48087f5c, 0x052205ef, 0xef48ffb8, 0x89052205, 0x0eef481b, 0x2208ee7d, 0x5c3c3f00,
	0x7120107e, 0x24057e5c, 0x5d01c0fd, 0x0678622b, 0x6c113321, 0x5e6205ce, 0x0442080b, 0x30fef6a9, 0x5dbcbc66, 0x1b0e2872, 0x929c340d, 0x594f5356,
	0x32592824, 0x00fe0002, 0x1efe5d04, 0x3d1b4a43, 0xa270711c, 0x5d5e5443, 0x00010018, 0x04feff1d, 0x005d043e, 0xb9cf0021, 0xacff1b00, 0x655c0db3,
	0x820e2006, 0x3e023208, 0x13000521, 0x0f3f1713, 0xf4ffb801, 0x020c0cb4, 0x43088255, 0x012505f0, 0xffb8001a, 0x057763f2, 0x0b0c0029, 0x0055020b,
	0x820f0f0e, 0x090c2205, 0x21058209, 0xa256ffb8, 0x0d0d2108, 0xec200f84, 0x2406ae42, 0x060d0d0a, 0x203b8255, 0x844f82f6, 0x40ec2208, 0x050c4410,
	0x0c032323, 0x2a2b820c, 0xb8201a03, 0x10b4dcff, 0x82550210, 0x40ee2208, 0x21568312, 0x62830e20, 0x30202027, 0x20200220, 0x06006e12, 0xd76fed20,
	0x852b2005, 0x2bed2300, 0xaa5c002b, 0x06bb4b12, 0x26222326, 0x32333523, 0x08077073, 0x3736365d, 0xbc3e0421, 0x06035ffe, 0x1a200703, 0x22223b18,
	0x41113153, 0x1e080a0a, 0x1233180a, 0x040a3e33, 0x01030307, 0x9a53bf03, 0x42c7a73e, 0x1e1f4d3e, 0x02a4021e, 0xee32130e, 0x66e152e1, 0xb9000100,
	0xd9040000, 0x0c005d04, 0x13405501, 0x0b3a0935, 0x044a0345, 0x047f0370, 0x41400b06, 0x10200744, 0x34080882, 0x057b027b, 0x0a030a79, 0x370b092a,
	0xecffb80a, 0x11102440, 0x0a055502, 0x04090302, 0x37100e40, 0x0f0d2004, 0x01043f37, 0x0b070404, 0x07010509, 0x030b0a09, 0xfe431805, 0x066f4117,
	0x410b734e, 0xf220076f, 0x2105684b, 0x6f410e00, 0x40f6221f, 0x056f4121, 0x0e0f0e29, 0x05020e20, 0x820f0f04, 0x0c0c228f, 0x2105830d, 0x05820909,
	0x291fd24b, 0x020c0cb4, 0xffb80755, 0x2e83b4f0, 0xd44b0882, 0x05a14a08, 0x200ad44b, 0x09e4420d, 0x792bed21, 0x2b210c16, 0x3710822b, 0x00391711,
	0x333f332f, 0x5d2f3912, 0x17122b2b, 0x30312b39, 0x015d2b00, 0x2a082982, 0x01112321, 0x23110123, 0x01013311, 0xbad90433, 0xfe8ceafe, 0x01e3b0ec,
	0xe7260130, 0xc2fd7203, 0x8efc3e02, 0x8ffd5d04, 0x41007102, 0x6034068d, 0x0b005d04, 0x0d40ea00, 0x08083f03, 0x05070a05, 0x09080501, 0x25184941,
	0x02101011, 0xfc840055, 0x46220021, 0xac420fb0, 0x42062007, 0xec2106ac, 0x065b4540, 0x0d1f0d28, 0x08020d60, 0x31830c03, 0x1806a14b, 0x460c0842,
	0x052205b0, 0xb046ffb8, 0x46088205, 0x052206b0, 0x9066090c, 0x052c4105, 0x460cff5d, 0x052705b0, 0x0609090a, 0x6b880555, 0xe97c0b04, 0x05e14206,
	0x0d832b20, 0x413f0021, 0x5018052f, 0x33380966, 0x33112111, 0xfdbc6004, 0x02bcbcd1, 0xf701bc2f, 0x5d0409fe, 0xc4013cfe, 0x42100d7e, 0x603205b5,
	0x07005d04, 0x03b6dc00, 0x0005063f, 0xffb80105, 0x9a83b4f4, 0xb6200883, 0x0125d683, 0xffb8001a, 0x06775aea, 0x23262041, 0x091b40f0, 0x0029bc82,
	0x091f0992, 0x04020960, 0x4748830c, 0x1f4106a3, 0x05d0472e, 0x201a1f41, 0x0d7b4608, 0x25069449, 0xed2b2b2b, 0x51182b2b, 0x15410e80, 0x03440805,
	0xfcbb03a7, 0xff5d0445, 0xfeb900ff, 0x04900464, 0x0016027c, 0x00000053, 0xff6a0001, 0x04fd03e7, 0x00210077, 0x0f674084, 0x5f234f23, 0x012b0323,
	0x162a0e22, 0x013a1824, 0x163a0e35, 0x01491835, 0x0e440a4f, 0x1f9d2619, 0x0024f083, 0x06172300, 0x17290883, 0x0d08091b, 0x0955020d, 0x230d8308,
	0x0b0b0c09, 0x21089274, 0xbe852285, 0x112bed26, 0x3c2b2f33, 0x2308e754, 0x015d3031, 0x24058374, 0x26262726, 0x0f997d35, 0x0805c375, 0x0333373b,
	0x52a573fd, 0x4949cc7a, 0x01280151, 0x4ebb6101, 0x55b55d0b, 0xa8b6b7a7, 0x2630753b, 0x460b1051, 0x48472936, 0x0193dc48, 0x363f010b, 0x4447d127,
	0xdcc7c7e0, 0x3513181e, 0x21ed820d, 0x9318000a, 0x762307dd, 0x18031e40, 0x223bdd93, 0x180c0b1c, 0x2007dd93, 0xd79318a0, 0x1833201b, 0x2125d693,
	0x4b18ffff, 0x02240761, 0x005c0016, 0x3108a682, 0x64fe6f00, 0x14064b06, 0x30002300, 0xcf003d00, 0x22561040, 0x1b011d01, 0x04090c1e, 0x3f352706,
	0xffb81821, 0x0e1c40f0, 0x0418370f, 0x0f3f2e3b, 0x0a821006, 0x0b090633, 0x3624390c, 0x46244938, 0xb8240438, 0x2c40f4ff, 0x2fa7820c, 0x10001b24,
	0x55020f0f, 0x3109c800, 0x042b1e1b, 0x29061b6f, 0x0209090c, 0x0c1a0955, 0x24830c38, 0x121b3822, 0xb6205182, 0x12252783, 0xffb80cc8, 0x050043f6,
	0x39840c20, 0x0d020c23, 0x06c4550d, 0x0b0b183a, 0x0c805502, 0x0c020c90, 0x0f3e3f0c, 0x3f3f1f3f, 0x803f503f, 0x115d053f, 0x2c05c544, 0x2bfd2b2b,
	0xed102bed, 0x39172b2b, 0x270a8310, 0x3f3f005d, 0x32fd332b, 0x12240484, 0x313f3917, 0x07915118, 0x26222324, 0x585d1127, 0xf0261905, 0x3611240c,
	0x19323336, 0x080d8229, 0x261105a0, 0x06222326, 0x33161415, 0x4b063632, 0xa23e3f4c, 0x27634359, 0x544f3dba, 0x3f4ef0c1, 0x3c52a53d, 0x2eba3163,
	0xe2c63f7c, 0x378888c1, 0x3f2f3f4a, 0xfd9b8d3a, 0x31502776, 0x878fa187, 0x4c025b35, 0x4a4ae595, 0xfe132e4e, 0x1ecd0133, 0x012e0123, 0x4bdd8d0d,
	0x1e254d49, 0x1ffee101, 0xd5fe281b, 0xdebfecfe, 0x17fd1912, 0xaad91916, 0x1912e902, 0xe0c3d2ce, 0x00ffff1d, 0x0400003c, 0x025d0480, 0x005b0016,
	0x00010000, 0x04f4feb9, 0x005d04de, 0x401b010b, 0x05020609, 0x3f04080b, 0x46440501, 0x32088307, 0x0c0c0d40, 0x1a055502, 0x0f0f0808, 0xb8085502,
	0x83b4feff, 0x21088210, 0x1460b4fa, 0xb4f42306, 0x1a840b0b, 0x805df420, 0x0a082905, 0x55060d0d, 0x0c0c0608, 0xb8220582, 0x3450f6ff, 0x08082705,
	0xb80ac900, 0xf746ecff, 0x240a2105, 0x0a214583, 0x0af55f12, 0xc0ffb828, 0x0d091f40, 0x3e820a37, 0x0e094027, 0xaf0d8f37, 0x0e7d440d, 0x4e4c0120,
	0x45088207, 0x0882059d, 0x82059d45, 0x069d4508, 0x090c0125, 0x82550209, 0x05af490f, 0x210b0b60, 0x9383b6e2, 0x96450120, 0x2bed230b, 0x41185d2b,
	0xa155096a, 0x442b2005, 0x04600780, 0x2f043412, 0x02bc8afc, 0xaf87bc26, 0x45fc5d04, 0x45fcbb03, 0x600052fe, 0x1f3d0605, 0x16005d04, 0x16400101,
	0x061c060c, 0x0e75062c, 0x11090204, 0x0005053f, 0x00050915, 0x49888214, 0xf6200878, 0x2b05b35f, 0x0a001a01, 0x55021010, 0xe6ffb800, 0x2105285d,
	0xf3471a00, 0x40fa2406, 0x180c0c11, 0x20083e42, 0x06894918, 0x7949f220, 0x460c2006, 0x192008cc, 0x2505ab45, 0x01183f18, 0x31830c0a, 0x830a0a21,
	0x1a0a222b, 0x07386009, 0x8d550882, 0x22088205, 0x831140fe, 0x0609215f, 0x09252983, 0x020b0b0e, 0x831e8455, 0x96711832, 0x0c10260d, 0x0955060c,
	0x245d841e, 0x02091009, 0x075b5d09, 0x820e8155, 0x2bfd220e, 0x1560602b, 0x5d603520, 0x1f24080e, 0x62a65bbc, 0x10bcbeb4, 0x545e1a1a, 0xbc3ca245,
	0x221cad01, 0x9601a7b1, 0x6540cafe, 0x1b262425, 0x001d0212, 0x32050148, 0x5d044906, 0xe2000b00, 0x060a0a40, 0x04080502, 0x8208013f, 0x053f419f,
	0xf8200882, 0x20053f41, 0x093f4109, 0x3f41f620, 0x41042006, 0xf222063f, 0xc94a2a40, 0x23da8305, 0x0c08ca00, 0x0821f183, 0x230d8308, 0x04051a08,
	0x04200e84, 0x04260e84, 0xffb8011a, 0x9f75b4f0, 0x40fc2206, 0x2541830b, 0x0b0b1401, 0x18835502, 0x3283b620, 0x05ca0125, 0x84eaffb8, 0x22088223,
	0x832240f2, 0x0e052123, 0x05215383, 0x2b298300, 0x05a00580, 0x0d050502, 0x200d0f0c, 0x200a7960, 0x0979605d, 0x102b2b26, 0xf42b2bfd, 0x2b251083,
	0x002b2bed, 0x127f603f, 0xfa490626, 0xae01bc70, 0x5d420283, 0xbb032207, 0x05a74300, 0x04d00638, 0x000f005d, 0x0a1040ef, 0x0c050206, 0x013f0408,
	0xc90d0e08, 0x17410000, 0x08e07014, 0x21061741, 0xf544040c, 0x06174106, 0x830e0c21, 0x410c20d6, 0x24204f17, 0x05216583, 0x0b17410a, 0xa0059030,
	0x05050305, 0x110f1011, 0x113f111f, 0xe152116f, 0x19194105, 0xed2f3925, 0x603f2f00, 0x0623179b, 0x4198fa21, 0x82430622, 0x06864309, 0x0a00023a,
	0xc4040000, 0x0e005d04, 0xba002100, 0x010d75b5, 0xb81b3d07, 0x1440c0ff, 0x4f389783, 0x021b9f1b, 0x18161b1b, 0x0805193f, 0xb80f163d, 0x1f40f0ff,
	0x1b370b09, 0x280d1c42, 0x10100a16, 0x1e165502, 0x051a7b0f, 0x60b4f221, 0xfe2006ba, 0x2305954b, 0x0b0b0a16, 0xb8221e82, 0x1f5ae2ff, 0x1c162105,
	0x25118179, 0x060c0c1a, 0x81791655, 0x0f1b3008, 0x230f238f, 0x232f231f, 0x5d2f1903, 0x7afdf610, 0x2b260ae5, 0x2b2bfd2b, 0xae602b32, 0x2b5d2507,
	0x5d3031ed, 0x21062b5e, 0x2a481123, 0x05835206, 0x21112124, 0x12822135, 0x17163f08, 0x02041616, 0x6b2a2823, 0x64acb064, 0x2529286e, 0x423841c2,
	0x55fe7696, 0x0402b8fe, 0x458b7ef4, 0x57013a3a, 0x19184d33, 0x1184fe0a, 0x3a471a18, 0x32298451, 0xa5b8032a, 0x331a4dfe, 0x7958862b, 0xa2052305,
	0xad605d04, 0x17012d05, 0x230520b5, 0xb8193d07, 0x1540c0ff, 0x2408ed83, 0x199f194f, 0x16191902, 0x3d080517, 0x01007916, 0xf0ffb80f, 0x0b090f40,
	0x501b0037, 0x700f600f, 0x0f0f030f, 0x07474e23, 0x8e430883, 0x1a232b05, 0x0b0b0e22, 0xb8225502, 0x8e43eeff, 0x26222305, 0x0f840c0c, 0x5643fe20,
	0x19222305, 0x0f840909, 0x82055e7c, 0x053b4e28, 0x20313184, 0x55060909, 0x0f259222, 0x40253025, 0x04257025, 0x06984119, 0xb5430c20, 0x45162005,
	0x088207fd, 0x8205fd45, 0x05fd4508, 0x48830882, 0x82550221, 0xb4ec2108, 0x26109041, 0x060c0cb6, 0x60881655, 0x8b4b09d0, 0x832b200d, 0x5d2f230e,
	0xae5f2bed, 0x2b5d2407, 0x623f2fed, 0x86410838, 0x41332010, 0x13250684, 0x03231133, 0x13884169, 0x8541bc20, 0xbcbb2205, 0x128841bc, 0x415d0421,
	0x02230587, 0x52a3fbb1, 0x35200687, 0x21068b41, 0x8641b2a0, 0x091d2d20, 0x1b00370b, 0x0f218f0f, 0x02212f21, 0x20352241, 0x072241e4, 0x200fc560,
	0x09c56088, 0x41062241, 0x12410c14, 0x73032821, 0x6b2a2823, 0x42b6ba64, 0x4b220b97, 0x9442febc, 0x070b4117, 0x0001003e, 0x03e7ff53, 0x007704f6,
	0xb59c0021, 0x04420432, 0xffb81002, 0x0b0940d6, 0x2a15370d, 0x1d200482, 0x22250d83, 0x0837100b, 0x3e04822a, 0x13133d12, 0x1b1b1f06, 0x041f3e17,
	0x0a010a9f, 0x063e0e0a, 0x111c1409, 0xffb8031a, 0x5c0db4f4, 0x98480572, 0x22118205, 0x5c2240e8, 0x23300569, 0x0d094023, 0x132f1c37, 0x134f133f,
	0x131c1303, 0x2b061456, 0x09370c09, 0x335d2b2f, 0x2f5d2f33, 0x22058950, 0x563911ed, 0x11200911, 0x2005e362, 0x2700822b, 0x1616015d, 0x21001015,
	0x250ab660, 0x26213521, 0xb0602326, 0x16500808, 0x50495d03, 0xfcfec9fe, 0x0d43bf66, 0x9d6dc63c, 0xccfd0cc4, 0xbe143302, 0x57b45b8e, 0x67c23f0d,
	0xed03c87c, 0xfe90d246, 0x30b8feea, 0x492fce1b, 0x9e97bac0, 0xce433d9f, 0x00443a19, 0xb9000200, 0x4c06e1ff, 0x0b007c04, 0x44011e00, 0x0c1809b6,
	0xe822cc85, 0x09833140, 0x35033a2a, 0x45034a09, 0x3e0c0409, 0x3506a360, 0x1004163f, 0x1c3f0905, 0x19130f0a, 0x0c0c0606, 0x1a065502, 0xdf76200c,
	0x43fc2006, 0x0c210587, 0x06fe450c, 0x83b4ea21, 0xb80c3c20, 0x1340fcff, 0x55020b0b, 0x09090c0c, 0x0c2f5502, 0x0f0c0c01, 0xb8191b00, 0x83b4f6ff,
	0x25088239, 0x0f0fb4e6, 0x08825502, 0x83b4fc21, 0x6011843b, 0xd62106b3, 0x06ce60b4, 0x1c40f822, 0x19283e83, 0x202f2090, 0x1202203f, 0x0d058618,
	0xaf430f20, 0x01861807, 0x216f8324, 0xb8605506, 0xb48b1819, 0x0cbf430c, 0x220bba60, 0x6039122b, 0x2b250cbb, 0x0130312b, 0x096e4b34, 0xbc602520,
	0x36630806, 0x00323324, 0x23001011, 0x8a050022, 0xa19993a6, 0xa79292a8, 0xbce8d3fc, 0x0119edbc, 0x01e7c711, 0xebf2fe12, 0x02f5fede, 0xdfd5d72e,
	0xd5d7d4cd, 0x0406fea2, 0xe73bfe5d, 0xfec4fefd, 0xfef1feee, 0x002001c2, 0x00430002, 0x04130400, 0x0010005d, 0xb3de001f, 0x04011c72, 0x40e8ffb8,
	0x3710093c, 0x60b40403, 0x2e0805a0, 0x0003033c, 0x050f3d12, 0x09090500, 0x19020919, 0x020c0c0c, 0x701b1955, 0x04090109, 0x04090306, 0x051a050a,
	0x055a054a, 0x05900580, 0x4f120506, 0x40210cc3, 0x06c44f13, 0x10100a28, 0x14005502, 0x05820b0b, 0xeaffb822, 0x2205d441, 0x53090000, 0x9946059f,
	0x1e002106, 0x2608fb48, 0x060f0f0b, 0x530e0055, 0xf6240f9f, 0x09090a40, 0x92241882, 0x01210f21, 0x210d9f60, 0xa1602b2b, 0x05054505, 0x2005a060,
	0x099e60ed, 0x215d0124, 0x595a1123, 0x099e6005, 0x080c3b5f, 0xbc13043a, 0xdda6fedd, 0x86917801, 0x9c3c3d50, 0xbcae015c, 0x28444ded, 0x24172527,
	0x01416a25, 0x0145febb, 0x86a528cd, 0x26277c59, 0x01f2fd1b, 0x16160a78, 0x44372c4b, 0xff151d1e, 0x3206ad5b, 0x3602db05, 0x00004800, 0x8e001601,
	0x140000f9, 0x19030d40, 0x3d10cb0f, 0x13000100, 0x62046dfe, 0x35001406, 0x30402101, 0x261e1c05, 0x0559281e, 0x1d720569, 0x8e181706, 0x2f340dbb,
	0x012a2a3e, 0x0f150d2a, 0x2e6f2e5f, 0x2e032e7f, 0xb8000d2e, 0x83062151, 0x0cb62808, 0x0055020c, 0x49b8211a, 0x088206d9, 0x1140fc2a, 0x55020b0b,
	0x0f0f0421, 0x0c220582, 0x05820909, 0xfcffb823, 0x240886b4, 0x0d2740fe, 0x2012820d, 0x26398322, 0x1f379121, 0x18376037, 0x2342af8e, 0x0f0fb4ec,
	0x1c257f18, 0x26513620, 0xaf8e180a, 0x2bed3210, 0x2f39122b, 0x002f2f5d, 0xed5d2f2f, 0x12ed3f3f, 0x270f8239, 0x313939ed, 0x26005d30, 0x094ff118,
	0x11231123, 0xb28e1823, 0x1725080d, 0x14151614, 0x02060706, 0x23060607, 0x35272222, 0x13363233, 0x03353636, 0x010101a5, 0x591a1913, 0x4cac5046,
	0xcb8e18bc, 0xc1230807, 0x03bbb162, 0x03010203, 0xb9464754, 0x2a18176a, 0x099cbb44, 0x06020101, 0x80502b4b, 0x4d292b29, 0x18befc3a, 0x3809e08e,
	0x6b2fc9de, 0x3a703a4b, 0x50fffeb0, 0x9e024e50, 0x225001f6, 0xff002e4b, 0x05575fff, 0x02820639, 0x000b0236, 0x00160100, 0x00f69a8d, 0x0001b60a,
	0x05040709, 0x51352b25, 0x042f05c9, 0x0077040a, 0xb57c0021, 0x0a4b0a3b, 0x46b81b02, 0x16250609, 0x370d0b2a, 0x250d830e, 0x37100b40, 0x04822a01,
	0x3d192008, 0x0c031818, 0x3e141010, 0x2121040c, 0x09033e1d, 0x18301820, 0x18031840, 0x03101817, 0x458e001a, 0x1a2b05f3, 0x0b0c091a, 0x0955020d,
	0x8209091c, 0x05ba5105, 0x102bed27, 0x391711e6, 0x0da2662f, 0x3031ed23, 0x5100822b, 0x550817c1, 0x21152107, 0x32331616, 0x04333736, 0x7b9f4e0a,
	0x4c4cd17d, 0x012b0152, 0x45bb680d, 0x65c2400c, 0x0219c78f, 0x0ac1fd3c, 0xbd6ca4c4, 0x20300c3e, 0x49484729, 0x050192dc, 0x20364501, 0x9c4e32cb,
	0xc8b297a1, 0xff003244, 0xff6e00ff, 0x04d703e5, 0x00160278, 0x0f830056, 0x0000af26, 0xdb058301, 0x4c200f82, 0x49180f84, 0xff250ec3, 0x0259fec2,
	0x351f8415, 0x0000004d, 0xff1d0002, 0x04f406fe, 0x000e005d, 0xb909013d, 0xf3573000, 0xb81e2a05, 0x0db5c0ff, 0x3d073710, 0x22098237, 0x820d1c40,
	0x374f31f5, 0x3702379f, 0x3e181637, 0x28280535, 0x09243f2c, 0x2409d749, 0x370b0913, 0x29781837, 0xb8162b0d, 0x0b40f6ff, 0x55021010, 0xfd4a0e16,
	0x40ee2406, 0x820c0c1d, 0x0b06220f, 0x2205820b, 0x8209090e, 0x0f142805, 0x1655060f, 0x820d0d06, 0xffb82505, 0x0c0cb4e2, 0xec200884, 0x2a056544,
	0x00351616, 0xffb80f1b, 0x832d40f4, 0x0f892a39, 0x3f8f0f01, 0x18013f0f, 0x210e830c, 0x42830818, 0x20c9182e, 0x02353035, 0x0f0f2235, 0x0c355502,
	0x35245b83, 0xb6eeffb8, 0x35221b83, 0xc0742835, 0xed5d2805, 0x105d2b2b, 0x4b2b5df4, 0xfd270c37, 0x2b322b2b, 0x182f005d, 0x27092246, 0x31ed2b5d,
	0x002b2b30, 0x4b079e5d, 0x3720053d, 0x63083c4b, 0x062108fb, 0x12425806, 0x2106d349, 0xcf493206, 0x4be7200a, 0x5b580757, 0x05ed491e, 0x37200122,
	0x2009744b, 0x05734b81, 0x4a167458, 0x00200500, 0x4105fd49, 0x272b06c3, 0x17b43101, 0x213d071e, 0x68c0ffb8, 0x4f2b0514, 0x02219f21, 0x1c162121,
	0x4b1a0520, 0x26250a88, 0x21370b09, 0x0e1b4b1e, 0x10100a28, 0x24165502, 0x05820f0f, 0xb3411620, 0x50f62006, 0x16230543, 0x820b0b0c, 0x4b1a2015,
	0x19710f16, 0xb8162205, 0x08b041ff, 0xb0411a20, 0x41212006, 0x292808b0, 0x292f290f, 0x1d03294f, 0x2706b746, 0x0209090c, 0x1a1a1955, 0x8207da47,
	0x058a4b08, 0x8a4b0882, 0x20088205, 0x05294df6, 0x2c841a20, 0x88510f82, 0x5b088205, 0x08820538, 0x0d40ee2a, 0x55060c0c, 0x0909041a, 0x88210582,
	0x0cbf7728, 0x5d322b27, 0x2b5df610, 0x0b254ded, 0x2b2bed24, 0xee413939, 0x06625805, 0x3939ed22, 0x21198e4a, 0x46181121, 0x3325072d, 0x16171632,
	0x0cd54116, 0x25082e4d, 0xbcbcf3fd, 0xab4b0d02, 0x12a84b06, 0xfd100229, 0xfe5d04f0, 0x41b3014d, 0x012107af, 0x33951800, 0x11215e76, 0x4e339518,
	0x19a98518, 0x09090825, 0x490d5506, 0x83460c7e, 0x2b2b2510, 0x2b2bed2b, 0x60339518, 0x5effff21, 0x2d08052b, 0x36028206, 0x00001202, 0x8d001601,
	0x1b00f6f9, 0xb81d01b1, 0x0f40c0ff, 0x55021009, 0x1d401d00, 0x1c1d0002, 0x2b251106, 0x00352b5d, 0x8f560200, 0x06250805, 0x00070015, 0x40bd0015,
	0x3406044c, 0x50064406, 0x70066006, 0x03090606, 0x03190507, 0x01460517, 0x00580349, 0x83221957, 0x0f083b13, 0x0e0e010e, 0x0b0b5012, 0x04020300,
	0x150c0205, 0x0b4008c9, 0x0f08370e, 0x76830ec9, 0x0b821120, 0x0e080e2d, 0x01680204, 0x03020101, 0x83000403, 0x22220815, 0x0c371009, 0x4a001c00,
	0x7a006a00, 0x8d000500, 0x01170f17, 0x04130403, 0x04650445, 0x04050475, 0x5b181682, 0x11220c1f, 0x52763939, 0x3f002705, 0x3939123f, 0x675f2f33,
	0x5d012406, 0x82fd1087, 0xc0280802, 0x5d005d01, 0x13230109, 0x01093301, 0x23010e13, 0x33272622, 0x3233011e, 0x7f043736, 0xd0c974fd, 0x01cc43fe,
	0x085a0157, 0x2b0c715f, 0x07fa5d04, 0x2704d201, 0x3c03c4fc, 0x080c735f, 0xf4feb92a, 0x5d046004, 0x02010b00, 0x060a0f40, 0x01032005, 0x003e0803,
	0xc9020805, 0xf8ffb803, 0x10100f40, 0x033f5502, 0x037f034f, 0x05200082, 0x260b6452, 0x0909b6f4, 0x5a095502, 0xec21325a, 0x065a5a40, 0x23067b5b,
	0x020c0c0c, 0x07495818, 0x184f5a5a, 0x200c7f46, 0x096e7d2b, 0x2f492b20, 0xed2b2706, 0xed333f00, 0xe5755d2f, 0x11232306, 0x7d5b1121, 0xfe410806,
	0x83feae84, 0xbc2f02bc, 0x0c01f4fe, 0x44fc5d04, 0x0000bc03, 0x00c80001, 0x078a0400, 0x0007006b, 0x0600b9b9, 0x1340c0ff, 0x0637100d, 0x03350006,
	0x13050203, 0x10100c06, 0xb8065502, 0x0fb4f2ff, 0x4508840f, 0x1184050e, 0x840b0b21, 0x40f02411, 0x8209090a, 0x09062409, 0x18021401, 0x452d6f47,
	0x02210551, 0x6d471814, 0x45e6200f, 0x02200548, 0x06225882, 0x6c180255, 0x69670ed1, 0x2f002a08, 0x2f33ed3f, 0x0130312b, 0x2fe78511, 0x03c68e01,
	0x2105ba08, 0xd105dffa, 0xb6fd9a01, 0xb926df83, 0xbb030000, 0xdf82ce05, 0xdf85bd20, 0x840e0d21, 0x033f25df, 0xc9050205, 0xf020c782, 0x21054659,
	0xe0840c06, 0x0c0c1222, 0xce6bd484, 0x201e8205, 0x050c4eee, 0x0106702a, 0x0f090606, 0x0c010109, 0x8d572183, 0x821a2006, 0xb4de25ef, 0x55021010,
	0xe4210882, 0x824183b4, 0x055b5308, 0xf6200882, 0x0c22df86, 0x21840909, 0x1805114b, 0x20125648, 0x0a315c87, 0x2b2bed23, 0x21e2825d, 0x00832b5d,
	0xe391ed20, 0x02bc7524, 0x2a69ae54, 0x71012305, 0xe383eafd, 0x3c02cb33, 0xdc023507, 0x11000300, 0x025401b6, 0x01050000, 0x0842822f, 0xed2f006a,
	0x21013031, 0x35072135, 0x6a0696f9, 0x00a03c02, 0x00c80004, 0x05b90800, 0x000900ed, 0x00210015, 0x40800125, 0x1807083e, 0x49013a07, 0x46064401,
	0x54015807, 0x6f075606, 0x7f066001, 0x0d067001, 0x13060d09, 0x13160d19, 0x1f75197a, 0x3f532506, 0x02224f22, 0x401f2222, 0x1f371412, 0x010d3051,
	0xb8190d0d, 0x2440c0ff, 0x193f0f82, 0x02021351, 0x04070803, 0x01030601, 0x230f2200, 0x23222302, 0xc91c0a22, 0x000a1010, 0x18020106, 0x240c298d,
	0x020c0cb4, 0x24118255, 0x0f1f40fe, 0x2009820f, 0x06315813, 0x0b0b0a26, 0x08005502, 0x00211383, 0x0ea76110, 0x180d0a21, 0x200d4259, 0x06074e0e,
	0x2d40e230, 0x55060c0c, 0x16040000, 0x270a0ac9, 0x37830802, 0x830c0221, 0x04022161, 0x02213383, 0x214f8304, 0x42181302, 0xd8532b6b, 0x1a042805,
	0x55060f0f, 0x47ffb804, 0x088205e2, 0x20054574, 0x0fdc1804, 0x2bed210c, 0x11220082, 0x096c2f33, 0x210e8208, 0x4018fd2b, 0x178308ff, 0x2f2f392f,
	0x3f2f005d, 0x3f391712, 0x2f332bed, 0x3b04855d, 0x0130315d, 0x0123215d, 0x21112311, 0x01331101, 0x22230614, 0x36343526, 0x07163233, 0x080add4f,
	0x15210145, 0xf5ff0421, 0x01b472fd, 0xb4500233, 0xb2bdba03, 0xb2bebab6, 0x58b2bab5, 0x57576765, 0xfe586567, 0xfeb80162, 0xfa340548, 0xfbd105cc,
	0xfec00440, 0xdadae063, 0xdcdae0df, 0x8888acdd, 0x8787adad, 0x609ee8fd, 0x5b5f0a83, 0x590a2047, 0x5b5f08af, 0x01003ca2, 0x35021901, 0xd5058f02,
	0x21000800, 0x50031140, 0x03070404, 0x07030e01, 0x82032a00, 0x2f013f1c, 0x39ed335d, 0x3f3f002f, 0x31ed2f33, 0x11230130, 0x36323523, 0x8f023337,
	0x7e66d1a5, 0x3b828909, 0x75a93a08, 0x0000562c, 0x02ef0001, 0x059f033d, 0x001d00ed, 0x1100b943, 0x2540e0ff, 0x0f37100d, 0x13520b0f, 0x511c0202,
	0x00000e01, 0x2a08011c, 0x16361626, 0x16761666, 0x160f1604, 0x3d60860f, 0x5d2f2f33, 0x333912ed, 0xfd3f002f, 0x33ed3f32, 0x2b30312f, 0x3e352101,
	0x013e3701, 0x6e533435, 0x3e3f0806, 0x16323301, 0x07061415, 0x2107010e, 0x50fd9f03, 0x6d27865b, 0x464c5840, 0x410f298f, 0xa99d4d97, 0x8d316a52,
	0x02f20137, 0x6845943d, 0x526d6725, 0x203c4a46, 0x9e221bb3, 0x5e945d7a, 0x82296a2b, 0x02e624a1, 0x8273031c, 0x002e34a1, 0x6c0f4074, 0x7e226c09,
	0x04227e09, 0x1f5a0c55, 0x82b82602, 0x0b3b30b0, 0x2003370e, 0x2c370d0b, 0x0f51152b, 0x180f0116, 0x280f49d8, 0x25061651, 0x0e0a0a02, 0x49d81851,
	0x00002e0e, 0x2f332f09, 0xed391712, 0xed2f2f2f, 0x18c28300, 0x230e45d8, 0x5d015d2b, 0x2f48d818, 0x3c734d08, 0x4f7b3530, 0x11418f52, 0x544f9a25,
	0x8c5b646e, 0x525f577d, 0x25994257, 0x4f964011, 0x4d61aa98, 0x3a037550, 0x25227047, 0xaf1c1e20, 0x48493b23, 0x4c8b3b53, 0x3e473c42, 0x221baf23,
	0x7157628c, 0x6d10081a, 0xb3000200, 0xbd033d02, 0x2408f782, 0x000d000a, 0x6d1e403a, 0x02067e06, 0x0d010906, 0x050c0551, 0x03020703, 0x0b07000e,
	0x00092a04, 0x0101060d, 0x26c88306, 0xfd333339, 0x482f3939, 0x2f26059d, 0x323939ed, 0xbf823031, 0x15232808, 0x35213523, 0x33113301, 0x03011121,
	0xfe96a3bd, 0x95d2012f, 0xfecbfea3, 0xdc19039f, 0x1b02b9dc, 0x9001b1fd, 0x410070fe, 0x7538066b, 0x2a00da05, 0x17404800, 0x087f086f, 0x1a1d1d02,
	0x06252551, 0x031e5121, 0x31054241, 0xeaffb800, 0x0c090f40, 0x29211f37, 0x091e1f1e, 0x47412a14, 0x12ed2105, 0xed227b82, 0x47412b2f, 0x250d8205,
	0x2f32fd2f, 0x3f413031, 0x051e4211, 0x2e275c08, 0x06222301, 0x15211107, 0x013e1521, 0x17163233, 0x7503011e, 0x88302f32, 0x3c954e57, 0x4e922510,
	0x1d1c522c, 0x1e1d1f17, 0x6c3b3559, 0xfe550226, 0x0e311448, 0x37347654, 0x4563033c, 0x332b2a7a, 0x149f1a1c, 0x1d1c1736, 0x392a2743, 0x0e111514,
	0x8bf00106, 0x170202cf, 0x826f2422, 0x02f324c9, 0x82a50335, 0x063508c9, 0x25404100, 0x03010156, 0x2a010001, 0x63030202, 0x02007300, 0x51030000,
	0x0e020305, 0x10020003, 0x02371009, 0x00000402, 0x2f332f04, 0x2b2f3912, 0x3f003912, 0x08ba843f, 0x875d0170, 0xc087ed10, 0x01095d01, 0x35210123,
	0xfea50321, 0xf001b92a, 0xb202edfd, 0xe7fc4e05, 0x008b1a03, 0x02c50003, 0x0591031b, 0x001900ee, 0x00370028, 0x0f42405d, 0x1f150f0b, 0x2a151f0b,
	0x39042a02, 0x49043902, 0x0a2b582b, 0x251f250f, 0x10361026, 0x26092f04, 0x1d030416, 0x35021051, 0x1a0f0351, 0x2a20132a, 0x092a290d, 0x0416130d,
	0xb6827006, 0x2a32002d, 0x33ed2f06, 0x17125d2f, 0x822fed39, 0x3f002401, 0x82ed3fed, 0x415d200c, 0x5445054a, 0x35372305, 0x8318012e, 0x152409de,
	0x3403011e, 0x2c064055, 0x17011e17, 0x3413013e, 0x012e2726, 0xd5e51827, 0x03730807, 0xa79bcb91, 0x52595ebf, 0x9590b946, 0x615250b5, 0x4f57be5b,
	0x2d305d46, 0x392e4817, 0x42371826, 0x3a2a5817, 0x51507638, 0x7935036d, 0x4f789fa1, 0x29042678, 0x8d6a4764, 0x7d3f6887, 0x6b270423, 0x48336401,
	0x3d26363f, 0x0b1f0a14, 0x79fe4f25, 0x0a1e3b32, 0x5d200f1c, 0x4e5f4a30, 0x73000200, 0x8b06e1ff, 0x2800f005, 0xd6003400, 0x011878b3, 0x48ffb815,
	0x0931068a, 0x02101010, 0x09181555, 0x0955020a, 0x40e8ffb8, 0x3009830a, 0x15790976, 0xffb81b02, 0x092f40c0, 0x691b3710, 0x08f9824f, 0x03022324,
	0x090a091a, 0x091a1505, 0x095a1515, 0x2c061555, 0x32021534, 0x220a0934, 0x1526291e, 0x0f03001b, 0xf8781529, 0xb4e6230b, 0xf8780909, 0x40f0240d,
	0x820d0d2d, 0x0f363112, 0x80361f36, 0xbf369036, 0x0636cf36, 0x2f01360f, 0x146cbe18, 0xf610352a, 0xed2b2b2b, 0xd6105d5d, 0x2b360782, 0x391712ed,
	0x00c4fdd4, 0xed3fed3f, 0x3939125d, 0xed5ddd3f, 0x19835d2b, 0x5d303127, 0x15161601, 0x05855314, 0x0db55818, 0x17161622, 0x21055f6e, 0x22833335,
	0x01069808, 0x22230010, 0x00101100, 0x05003233, 0x631a1fa1, 0xa1fb5c59, 0x5afffe9d, 0x5c60615a, 0x9a050158, 0x1859ffa0, 0x434f1419, 0x0da00c16,
	0xf9fe780b, 0xe3e1fcfe, 0x0801fdfe, 0x0701dede, 0xa6584904, 0xddfeb863, 0x68666561, 0x20016363, 0x2101b6b9, 0x69686267, 0x21211b61, 0x24444004,
	0x2f09175b, 0x826c3246, 0x22018dfe, 0xc5fe3b01, 0xdbfedefe, 0x3701c9fe, 0x6a000200, 0xc304e1ff, 0x1d008405, 0xc9002900, 0x201a0c40, 0x27370c09,
	0x020d0c18, 0xffb82155, 0x832c40e8, 0x3a2d0809, 0x4a273521, 0x04274521, 0x0d691b15, 0x21030005, 0x2704093f, 0x140a033f, 0x09182910, 0x06031b0c,
	0x0c0c402b, 0xb81e5502, 0x09b4f8ff, 0x21088409, 0x1184b6f4, 0x6b181b20, 0x3f260d6b, 0x55021010, 0x1a831800, 0x2b90002d, 0x2b1f2b0f, 0x2b6f2b3f,
	0x83042404, 0x0c242135, 0x24291783, 0x0b16061b, 0x0655020b, 0x21138318, 0x13830806, 0x0d040622, 0x06258f82, 0xf6102a85, 0x0ba4602b, 0x0c82ed20,
	0x39171223, 0x067c41dc, 0x3f39122a, 0x2b5dcdfd, 0x2b30312b, 0x260a4d41, 0x32331716, 0x7a343536, 0x1524058b, 0x16070614, 0x080c5848, 0xfe71042c,
	0xfeedebe8, 0xed1701e9, 0x5d2b6033, 0x0c164a5a, 0x730b0da0, 0xc248456c, 0xa99997aa, 0xab9698aa, 0xeffe2e02, 0x3c01c4fe, 0x01821101, 0x100f3d24,
	0x50414741, 0x6a4b0806, 0xd94d1480, 0xd3d3d98b, 0xd7d9d2d9, 0xb2000100, 0x7506e1ff, 0x2b00f806, 0x2940f300, 0x0f09202a, 0x6a2b2537, 0x030d031c,
	0x06391526, 0x15760649, 0x06341504, 0x2920240a, 0x2801280f, 0x0200141b, 0x55021010, 0xeaffb800, 0x840f0fb4, 0x56f82008, 0x002105a4, 0x21fb830c,
	0xfb831600, 0xf2221e82, 0xff832c40, 0x0f0a0029, 0x0055060f, 0x830d0d14, 0x0c0c2105, 0x0a220582, 0x05820909, 0x2d0f2d2f, 0x2d6f2d40, 0x2d902d7f,
	0x0c140f05, 0x5b8f18b8, 0x05a25932, 0xf6213a82, 0x835e83b4, 0x83b62008, 0x6b0c2261, 0x0573412c, 0x2205894b, 0x18de105d, 0x2e09f957, 0xfd5dd4ed,
	0xed3f00c4, 0xfd3f3f5d, 0x183031c4, 0x620dc46c, 0x36230b1f, 0x41113536, 0x23380d83, 0x51472905, 0x8c89ce4d, 0x475147d0, 0x2c2721c6, 0x966b6a97,
	0xd821272d, 0x28067e41, 0x5602a0ac, 0x4c50f1a2, 0xa3581946, 0x087f4114, 0x84833608, 0x00010000, 0x05e1ffb1, 0x008405a5, 0x40200125, 0x19060b23,
	0x03077a07, 0x10092023, 0x6a241e37, 0x05020515, 0x42110509, 0x1d010a05, 0x210f2919, 0x02142101, 0x062858b8, 0x40280883, 0x020c0c0a, 0x401a0255,
	0xb8264782, 0x2340eeff, 0x7b4b1010, 0x09082208, 0x180b8209, 0x410bba64, 0xb8240580, 0x0b40ecff, 0x3c0a8441, 0x40faffb8, 0x06090925, 0x0f270055,
	0x02276f27, 0x2790275f, 0x27c027a0, 0x0b0527ef, 0x2143830c, 0x64830c0b, 0x181a0b21, 0x182f438f, 0x211d6b67, 0x99412687, 0x2b2b230b, 0x8e44715d,
	0x832b2005, 0xed712f00, 0xd4322b2b, 0x00c4fd5d, 0x3fed3f2f, 0xa1413912, 0x215d2705, 0x06063523, 0x44182223, 0x1f430f1c, 0x2323330c, 0x5fbc5704,
	0xc4b069ae, 0x1b1a10bc, 0xad495256, 0x9641d04b, 0x418f1809, 0x0d8d4111, 0x44fd4608, 0x7dfe1105, 0x16008c06, 0x29404200, 0x030103bf, 0x0c050606,
	0x05601450, 0xad040501, 0x05d005c0, 0x09400502, 0x0505370d, 0x11400911, 0x29093714, 0x0001000f, 0x5ddd2f11, 0x39122bed, 0xed5d2b2f, 0xd45d2f00,
	0x2c0a82ed, 0x30315dc5, 0x07061401, 0x36352315, 0x08174a36, 0x36364308, 0xfe163233, 0x6e42427d, 0x2126302f, 0x0318251f, 0x51264913, 0x40f80566,
	0x7944154e, 0x1827270c, 0x69090927, 0x00560c06, 0x17fd0100, 0xebfd82fe, 0x030045ff, 0x09401300, 0x028f4401, 0x15000201, 0x62832f01, 0x5c82ed20,
	0x33352331, 0xd4d4ebfd, 0xffc382fe, 0x057cfcff, 0x8222fe16, 0x00172ab7, 0x0028fb43, 0xfdffff00, 0x20118209, 0x2c1184af, 0x00ecfa8d, 0x01020000,
	0x05110536, 0x2f118214, 0x000a0006, 0x0600b94d, 0x1040f0ff, 0x0537100e, 0x082c0483, 0x08070102, 0xb8050304, 0x1140c0ff, 0x05211483, 0x27fc8260,
	0x07700760, 0x00090702, 0xb5201582, 0x2d481482, 0xd62b2305, 0xe5825dcd, 0x2b2f3326, 0x2f391712, 0x2e088882, 0x23012b2b, 0x1323010b, 0x23032133,
	0x9fe10313, 0xe49bb8b9, 0xda1702e3, 0x11057c81, 0x00ff0001, 0xf6fe7b01, 0x00000a01, 0x05030002, 0x86e10311, 0x914a2081, 0x09082181, 0x18208186,
	0x00298188, 0x097f096f, 0x04070902, 0x23128240, 0x332f0400, 0x2f207d83, 0x01237e95, 0x87330323, 0x61fe247e, 0x8cdfda81, 0x29ff847e, 0x5207c004,
	0x1d000600, 0x7d858e00, 0xff871220, 0x010abf29, 0x0c0d0d0a, 0x821b5013, 0x0b4021eb, 0x1b251682, 0x0c01020c, 0x05114103, 0x8f882a20, 0xad0b2008,
	0x0cd00cc0, 0x09400c02, 0x0c0c3710, 0x11401018, 0x29103714, 0x0701070f, 0x100c4018, 0x83001837, 0x0e09303e, 0x00003710, 0x04010460, 0x2f335d2f,
	0x422bd42b, 0x38410c1e, 0x2bd42106, 0x41082642, 0x25200840, 0x4c053042, 0xd4870f48, 0x42c30121, 0x60411038, 0x42322006, 0x0228113f, 0x11052501,
	0xde07f303, 0x2022ef82, 0xef856400, 0xef872020, 0x52100735, 0x171f170f, 0x170317a0, 0x0a521d14, 0x37110d40, 0x4102010a, 0x20260fff, 0x13000729,
	0xd4831429, 0x7f41b420, 0x2fed2308, 0x8041edd6, 0x39392506, 0x3ced2bd6, 0x3c20dd82, 0x540b0642, 0xe94a0603, 0x4a232005, 0x332307e5, 0x87373632,
	0x06f639c8, 0x49355f86, 0x193a181c, 0x8c05222b, 0x365f8705, 0x3b161c49, 0x04242a19, 0x0807b241, 0x89520152, 0x16192990, 0x88473e2d, 0x14192a91,
	0x00473e2e, 0x42010200, 0xd503e704, 0x0d00fb06, 0x3c001100, 0x10112540, 0x371a0f40, 0x06100010, 0x033faa0a, 0x0e600301, 0x0e020e70, 0x102a0d10,
	0x001f000f, 0x0003008f, 0x2f062a07, 0x395dd4ed, 0x5dcd2fed, 0xed26b382, 0x2f3939cd, 0xac82cd2b, 0x2205a74f, 0x82161433, 0x35220896, 0x13230337,
	0x98b2d503, 0x55a2b297, 0x5e555352, 0x067c81da, 0xbcbca346, 0x64647ca3, 0xf6feb57c, 0x7b910a01, 0x400f1022, 0x0f227b82, 0x7b860f00, 0x7f106f29,
	0x0e100210, 0xad0e2a0d, 0x2307237b, 0x7b8a3303, 0xda815223, 0x207b89df, 0x21798955, 0xf5821e07, 0x63002435, 0x14114040, 0x0f1a1314, 0x13220122,
	0x371a0940, 0x86130013, 0x82122081, 0x3710340f, 0x1f001313, 0x1f201f10, 0x28171f03, 0x0e600e50, 0x95030e70, 0xed5d2794, 0x2f395dcd, 0x1641cd2b,
	0x5dd42608, 0x2f3912cd, 0x0f1c41c5, 0x93422720, 0x092f4116, 0x37371230, 0x2228275c, 0x141e1c19, 0x213c1002, 0xc0895742, 0x43345b3b, 0x0a653812,
	0x1d192021, 0x06570708, 0x0000450a, 0x04250102, 0x07f303e7, 0x08cf82de, 0x58002723, 0x170e1040, 0x1f1e0f52, 0x1b1e021e, 0x11205224, 0xffb81101,
	0x092540c0, 0x0011370c, 0x06700660, 0x25dd8602, 0x061b291a, 0xca822927, 0x250e5e41, 0x10edd4ed, 0xc483edd6, 0x395ddd25, 0x42712bd6, 0xe141088e,
	0x1a92420c, 0xc020c789, 0x89189542, 0x980121d0, 0x2e119742, 0x05090201, 0x06420311, 0x0016008c, 0x46354052, 0x502c0835, 0x70146014, 0x09140314,
	0xc7010590, 0x200d4146, 0x1d414610, 0x5e5d5e24, 0x45465dd4, 0x1014440e, 0x0c444220, 0x12454610, 0x01024108, 0x03540636, 0x000108e1, 0x00200006,
	0x074a407d, 0x02021702, 0x20501d14, 0x100a010a, 0x176f0750, 0x70170f01, 0x01170217, 0x0d400502, 0x09053711, 0x03900320, 0x03b003a0, 0x03105904,
	0x03c00320, 0xd0340282, 0xd0310203, 0x0203e003, 0x0f010350, 0x02037003, 0x07282003, 0x3209e944, 0x00142813, 0xd6332f04, 0xd62b2fed, 0x5d2f00ed,
	0x835e7271, 0xcd5e2402, 0x8239392b, 0xed3c2f0d, 0x3ced71dd, 0x015d3031, 0x23072723, 0x8b413337, 0xe140081a, 0xa5aeafa9, 0x0becbbf8, 0x49255070,
	0x143e1b1c, 0x8606281d, 0x27526f0a, 0x30222143, 0x052b1b1a, 0x59595406, 0x520001ad, 0x0d0d196b, 0x4e2d201a, 0x1010176f, 0x002a2316, 0x42010200,
	0xd5034806, 0x3408e782, 0x0011000d, 0x503e405a, 0x02106010, 0x03ff500a, 0x01035f01, 0x067f0003, 0x100f0601, 0x6f02109f, 0x0210ff10, 0x01116f10,
	0x1170110f, 0x0e591102, 0x0e720e69, 0x1b344403, 0x5ddd712a, 0x3c5dd471, 0xed7271dd, 0x1805d347, 0x200ab8aa, 0x3bd08237, 0x9eabd503, 0x4ba2ac9e,
	0x4f4d5a5d, 0x076881c6, 0x99985838, 0x59583057, 0xd8d8c92f, 0x6426978e, 0x0e503340, 0x978f0e60, 0x0e9f0e29, 0xff0e6f02, 0x880e020e, 0x10562b97,
	0x107d1066, 0x0d0e1003, 0x415a0e2a, 0x370d2105, 0x20105944, 0x06d6442b, 0x0723a19b, 0x8a332723, 0x815623a1, 0xa189dfc6, 0x41d80f21, 0x243b0d39,
	0x62408e00, 0x13141411, 0x01226f1a, 0x2270220f, 0x133f2202, 0x1302134f, 0x44151140, 0x503a0569, 0x01039009, 0x590103b0, 0x31010370, 0x033f030f,
	0x03cf0370, 0x13120304, 0x21820940, 0x1f501327, 0x1f701f60, 0x05824403, 0x401f3029, 0x171f051f, 0x44010ec0, 0xcd231681, 0x44715dcd, 0x5e250682,
	0x715d5e71, 0x059f455e, 0x5d2f7123, 0x2d8a4471, 0x30088041, 0x4d2e2e2e, 0x151c1f23, 0x020e1a19, 0x361b320e, 0x30eb894a, 0x0f382b61, 0x1e09542f,
	0x08161718, 0x08054905, 0x0c9b4139, 0x00272108, 0x1b114092, 0x11df5024, 0x170e1101, 0x011e6f50, 0x1e011e0f, 0x40c0ffb8, 0x37100d52, 0x0a06001e,
	0xb023f983, 0x82f00203, 0x032031fb, 0x03400330, 0x03d003c0, 0x600603e0, 0x02037003, 0x02230b83, 0x8203a031, 0x03503420, 0x0f0203e0, 0xcf033f03,
	0x1a030303, 0x061b1b28, 0x440e2827, 0x3c2312b7, 0x8210ed10, 0x052f4303, 0x72715d22, 0x3226ff85, 0x715d2b2f, 0x31433ced, 0x47ac1805, 0x5b37200d,
	0x5647055a, 0xaed52a13, 0xa2af9b9b, 0x6b3c3c6c, 0x183a43a2, 0x5406072a, 0x2e57676a, 0xfb2e2828, 0x2e103e43, 0x06360102, 0x08100568, 0x00060001,
	0x4888001d, 0x1a20052b, 0x200e1b49, 0x3d0f8240, 0x0f50130c, 0xb81b011b, 0x3a40c0ff, 0x1b37100d, 0x0f030201, 0x02057005, 0x030f0505, 0x1c490301,
	0x00502719, 0x00700060, 0x15491803, 0x5dd42109, 0x230e1449, 0x3939125d, 0xed26fc82, 0x2f392bc4, 0x4f485dc5, 0x07272506, 0x05331323, 0x4a168146,
	0x13200769, 0x260f0845, 0xcece6806, 0x49444901, 0xff261013, 0xfe1a00ff, 0x8e180582, 0x02310a3b, 0x0036054b, 0xb60a0000, 0x0e0d0002, 0x2b250005,
	0x32238235, 0x0482fe68, 0x0278041d, 0x00440036, 0x02170100, 0x8292044b, 0x400f2a23, 0x367f020a, 0x37360001, 0x2227820b, 0x1800355d, 0x2107fd61,
	0x29820108, 0x29842420, 0x2f005637, 0x1a007501, 0x50021240, 0x1002011c, 0x701c401c, 0x1c00031c, 0x8259830b, 0x845d2031, 0xe1ff255d, 0x8c061d04,
	0x4a205d88, 0x112b5d84, 0x5f020c40, 0x02457f45, 0x8e34451d, 0xed07215f, 0x4e205f88, 0x612b5f82, 0x0b401100, 0x0f400203, 0x860f0001, 0x208b8458,
	0x20578268, 0x285788f4, 0xe04e0216, 0x40130000, 0x2529820d, 0x02385038, 0x56863829, 0x578ab789, 0x57894f20, 0x578e0f20, 0x8ce3ff21, 0x021622af,
	0x41579f4f, 0x1628080f, 0x002f5c02, 0x11401700, 0x0f278382, 0x0fb00fa0, 0x91040fc0, 0x07a022b3, 0x060b4152, 0x50021622, 0x57205baa, 0x0c235b82,
	0x860203b7, 0x41352051, 0x0721085b, 0x204f88de, 0x234f9b51, 0x5e0582fe, 0x29070341, 0xd6003700, 0x61012f00, 0x11421701, 0x82182006, 0x140025b5,
	0x25000515, 0x420c6941, 0x6941091f, 0x36002407, 0x42e0d600, 0x1e2a0925, 0x7f031640, 0x3d00013d, 0x3a830b3e, 0x210c7a41, 0xa3835d2b, 0x00001a24,
	0x23415e05, 0x8758200a, 0x0b1121c7, 0x2b206d82, 0x0621c789, 0x20c788fb, 0x41c78252, 0x3a2305f5, 0x413a2901, 0x4d8a10c9, 0x4da25920, 0x4da85320,
	0x4d975a20, 0x881e0721, 0xa854209b, 0x985b204d, 0x09b1414d, 0x4d995520, 0x4182fe21, 0x00270937, 0x00d90037, 0x4175012f, 0x1d3008af, 0x50021340,
	0x03110111, 0x051c1b00, 0x00022500, 0x23064d41, 0x1100352b, 0x2205ab43, 0x4382fe68, 0x00240977, 0xddd90036, 0x2a09b541, 0x03114018, 0x0001447f,
	0x820b4544, 0x0661413b, 0xaf413520, 0x82c82005, 0x059d2737, 0x003602d1, 0x31840028, 0x003a052b, 0xb60a0000, 0x0f0e0001, 0x06314401, 0x23826a20,
	0x7c046022, 0x48202382, 0x1b202386, 0x02252384, 0x1223221f, 0x05554418, 0x0000c826, 0x01089d04, 0x563c4788, 0x75012600, 0x14401c00, 0x011d5001,
	0x201d0001, 0x601d501d, 0x1d00041d, 0x2503020c, 0x00227a82, 0x7f6a355d, 0x8c062107, 0x4a225988, 0x5982cb04, 0x02b41832, 0x3101316f, 0x40c0ffb8,
	0x37110a09, 0x12203132, 0xaf868982, 0x07216783, 0x216787c8, 0x6784d700, 0x0b401225, 0x82195001, 0x84192067, 0x8b35205e, 0x6a53205d, 0xd72108dd,
	0x22d983f9, 0x842d0002, 0x827f834f, 0x3a0521b5, 0x4e20b58a, 0x162b4d84, 0x01020d40, 0x02011050, 0x85100001, 0x8650834f, 0x0d0521af, 0x1622af88,
	0x51824e02, 0x03b70c25, 0x85241e02, 0x20238352, 0x0e094129, 0x539d4f20, 0xfffcff22, 0x0c53e118, 0x924f0221, 0x20a78353, 0x26a78836, 0x265c0216,
	0x83130000, 0x101024a5, 0x86021020, 0x355d23a5, 0x53410035, 0x07b92206, 0x21f58752, 0x4f825002, 0x03252b82, 0x20240002, 0x86a98724, 0x0db5412b,
	0x57021622, 0x0c215782, 0x86f78ab7, 0x0760224f, 0x204f88de, 0x219f9351, 0xfd4182fe, 0x37002309, 0xf383d600, 0x02170137, 0x003a054b, 0x401d0000,
	0x50100113, 0x00020110, 0x03021615, 0x08554125, 0x00352b24, 0xb385115d, 0x60203f82, 0x24075741, 0xd6003600, 0x058b42f9, 0x3d821b20, 0x0e401429,
	0x2a291e03, 0x41250012, 0x2b210866, 0x2b978235, 0x02000089, 0x020108d5, 0x002c0036, 0x562c2d83, 0x750124ff, 0x0e401600, 0x01115001, 0x00240383,
	0x09041011, 0x20096b42, 0x202582ab, 0x206384e4, 0x222f84d5, 0x8267034a, 0xb60a255d, 0x08090001, 0x53859582, 0x0282fe25, 0x88d105d5, 0x044b2253,
	0x080d432e, 0x77834b83, 0x82feaf26, 0xdb058301, 0x4c202382, 0x4b224784, 0x23849803, 0x0a000223, 0x5947840b, 0x8d08053b, 0xec059805, 0x21001800,
	0x66409900, 0x14011726, 0x16250117, 0x01161701, 0x10261016, 0x010d0802, 0x2a01061b, 0x03240105, 0x01021401, 0x53012054, 0x1776011c, 0x01136701,
	0x5b010d69, 0x0d49010d, 0x01067901, 0x7901066a, 0x026c0102, 0x15190b01, 0x151a2300, 0x351a0a13, 0x36011377, 0x56134613, 0x12130313, 0x0a120a15,
	0x340f1e12, 0x341e0215, 0x3f000a04, 0x11ed3fed, 0x2f2f3939, 0x5d391211, 0x2f01ed5d, 0xd610edc6, 0x303132ed, 0x00895d00, 0x0a8a0120, 0x0607102a,
	0x26272021, 0x21352627, 0x79080482, 0x23072023, 0x20213635, 0x21031617, 0x33161716, 0x05363732, 0xfeae9d98, 0xb0d0feb8, 0x04182773, 0x8074184e,
	0xb6e5fec4, 0x0501db11, 0xa4b15401, 0x0677fcce, 0xe5e47764, 0xe8026376, 0xe6ceadfe, 0x83d085cb, 0x897cbff8, 0xda5cdc8c, 0xf281feca, 0x96b4b497,
	0x6a000200, 0x6004e6ff, 0x18007c04, 0x6d001e00, 0x1d4b4540, 0x011d3801, 0x26011035, 0x0c490110, 0x380c2801, 0xe782020c, 0x1b0a193e, 0x00010010,
	0x141a1a20, 0x0901090f, 0x14673c1a, 0x46021477, 0x02145614, 0x9f161314, 0x132b1282, 0x0e1c1309, 0x1c04163f, 0x8909043d, 0x875d20ea, 0x835d20eb,
	0x855d20ec, 0x20e386ed, 0x20df8301, 0x29dd8222, 0x27342135, 0x07222326, 0xe0820706, 0x20334208, 0x12210300, 0x04363221, 0xfe938b60, 0x747be8ff,
	0x69743703, 0x79725eb0, 0xb3df0a41, 0x37011701, 0x0280fdbf, 0xba8f2801, 0xfafe3a02, 0x848baca2, 0x6ac766ec, 0x3a282560, 0xd4fe5ecd, 0xcafe67fe,
	0x08a882a8, 0x00000e3d, 0xd1058a04, 0x2d000d00, 0x0f001640, 0x14020405, 0x0507090b, 0x020b3c08, 0x35010702, 0x0807030c, 0xed3f3f00, 0xc02f3911,
	0x2f01c0fd, 0xcdfdc0ce, 0x31c610c0, 0x11210130, 0x6e211521, 0x113a0513, 0xfd8a0421, 0xfe710104, 0xbabac68f, 0x2105c203, 0xfd8f52fe, 0x8fe4021c,
	0x61825e02, 0x00001326, 0x5d04bb03, 0x1a20618a, 0x51206184, 0x3f226184, 0x61a4050c, 0xfdbb0338, 0xfe4101ba, 0xa6a6bcbf, 0xb8030203, 0xfe869dfe,
	0x86cf0131, 0x61820802, 0xaffe2024, 0xc382ab07, 0x0136c408, 0x43a84009, 0x0a25010a, 0x17020a35, 0x034c010a, 0x01033b01, 0x71010318, 0x34520134,
	0x45023462, 0x34360134, 0x01037f01, 0x5e01036d, 0x03340103, 0x35140304, 0x35351434, 0x14023534, 0x01266936, 0x54013276, 0x26320132, 0x052d0304,
	0x7e071422, 0x0c5d010c, 0x39020c6d, 0x020c490c, 0x52010a70, 0x020a620a, 0x0a090a0c, 0x140c0b14, 0x660c0b0b, 0x0e79011b, 0x010e5b01, 0x03091b0e,
	0x0b071f15, 0x04320715, 0x2226352d, 0x1f1b202c, 0x15090e16, 0x34201635, 0x090c2204, 0x0934221f, 0x07080804, 0x0b0a0320, 0x03353507, 0x00010807,
	0xedd03f2f, 0x3fc0d010, 0xc02f3912, 0x11c5fdc0, 0x39121139, 0x86edd010, 0x39112107, 0x01310982, 0x10c6dc2f, 0x391711c0, 0x875d5d5d, 0x7d872b10,
	0x051142c4, 0xfd101824, 0x1584dcc0, 0x33edd622, 0x5d23188b, 0x4330315d, 0x01220517, 0x68181123, 0x27210a94, 0x26018326, 0x33352323, 0x84161732,
	0x33112601, 0x36373611, 0x27028237, 0x15333336, 0x06072223, 0x01250182, 0xbcab0733, 0x92681839, 0x9e2a0809, 0x26141d42, 0x3c3c2a41, 0x5559ad47,
	0x5327113b, 0x54c7c4be, 0x3a170d14, 0x47aa5b57, 0x2937743c, 0x01a4412c, 0xaffe89d2, 0x68185101, 0xa6080994, 0x245ed768, 0xb10c1342, 0x34a74144,
	0x0212c566, 0x0d61fd9d, 0x432730cc, 0xb14543a4, 0xcc8a2633, 0x00a4fd67, 0xfe340001, 0x043e06f4, 0x0031005d, 0x627840c5, 0x022f722f, 0x46012f55,
	0x2f37012f, 0x7d0c6d01, 0x0c5a020c, 0x010a7301, 0x36010a62, 0x560a460a, 0x036d030a, 0x2f02037d, 0x1a030403, 0x30142f30, 0x02302f30, 0x232d311a,
	0x05280304, 0x0c071a1f, 0x1a0a090a, 0x0b140c0b, 0x18090b0c, 0x1c13030e, 0x042d2f07, 0x1f233f28, 0x1c181d27, 0x090e0c14, 0x1d143f13, 0x093f1f1c,
	0x07080804, 0x0b0a051d, 0x413f3007, 0xc0251283, 0x11edd010, 0x05874139, 0x83391121, 0x2f012c0a, 0x3917dcd0, 0x872b87d6, 0x4101c47d, 0x72410675,
	0x30312108, 0x410b8344, 0x2324106f, 0x32333523, 0x200c6c41, 0x0c6a4136, 0xaf3e0623, 0x3d4d1840, 0x67250809, 0x28231b34, 0x80453553, 0x1a142b94,
	0x8fba8e3a, 0x2a141a3b, 0x35457f94, 0x1a242952, 0x38016531, 0x01f4fe82, 0x404d180c, 0x36890809, 0x241f54a5, 0x397869a2, 0x0109863b, 0x091cfee4,
	0x78393b86, 0x2024a269, 0xfe389d53, 0x01000053, 0xaffecd00, 0xd1057705, 0xa3002100, 0x1f516940, 0x1f711f61, 0x010f4803, 0x7a010c29, 0x04690104,
	0x01037d01, 0x036b035b, 0x01033902, 0x03011f34, 0x141f201f, 0x04140304, 0x20560304, 0x7a212001, 0x10690110, 0x01105a01, 0x1b051004, 0x163f051b,
	0x14021601, 0x21202110, 0x21502130, 0x0a232104, 0x10071405, 0x1b350a15, 0x2531821f, 0x08153f16, 0xd6422003, 0xd03f2609, 0x2f3911ed, 0x05c24239,
	0x10c0fd27, 0xc6ed5dd6, 0x2711825d, 0x5d393912, 0x33115d5d, 0x4208cc42, 0x5d2107ad, 0x08af425d, 0x20059742, 0x0d984236, 0x0706a508, 0x77053301,
	0xa3fd44bc, 0xa2c6c687, 0x111d2862, 0x615d4431, 0x77534fb0, 0x2f352a3b, 0x0264382e, 0xaffe9c19, 0xa7025101, 0xd10559fd, 0x6b0364fd, 0x77233d2b,
	0xb14442a6, 0x77862736, 0xfd33493b, 0x0001009f, 0x04f4fec1, 0x005d04ac, 0x408d001c, 0x011a5358, 0x36011a42, 0x1a24011a, 0x010f1801, 0x1a721a62,
	0x04031a02, 0x1a1b1a03, 0x1a1b1b14, 0x1b011b54, 0x0118261c, 0x03040e18, 0x1a021305, 0x1c601c40, 0x011c3102, 0x1c201c10, 0x0a1e1c02, 0x1a071a05,
	0x3f130418, 0x08120a0e, 0x04043f0a, 0x1b050807, 0x26095342, 0x2f39123f, 0x42d010ed, 0xfd230744, 0x82d610c0, 0xc6ed24f8, 0x92391711, 0x20fb8afe,
	0x42f78332, 0x33080c26, 0x4aafac04, 0xbc6630fe, 0x044bacbc, 0x87a33832, 0x2f525356, 0x70432229, 0xfe968601, 0x020c01f4, 0x0400fe00, 0x8d1efe5d,
	0x677a6d07, 0x502126a2, 0x51fe369d, 0x6718eb82, 0x4a0807a9, 0x40c10023, 0x01234678, 0x25012337, 0x23020123, 0x01215601, 0x69011288, 0x018a0112,
	0x01017d01, 0x2a01016e, 0x02013a01, 0x76010119, 0x1f39011f, 0x011f2401, 0x1f011f0b, 0x01145b02, 0x14391409, 0x101a1402, 0x23002301, 0x82010214,
	0x02300802, 0x01040f0e, 0x1a060404, 0x060b2500, 0x1f230814, 0x14351a05, 0x0b030d10, 0x0e0e0919, 0x05350b09, 0x04040502, 0x08050501, 0x01000309,
	0x3f000808, 0x2d05df44, 0x122f3912, 0x11ed1039, 0xd0102f39, 0x59431711, 0xc0fd2406, 0x82c6d610, 0xc05d2212, 0x055f43dd, 0x3911c025, 0x82125d5d,
	0x09c54403, 0x6705cb44, 0x232705b8, 0x33112311, 0x84373611, 0x101f4204, 0xfe75052d, 0x6e8610fe, 0x2c42c6c6, 0x42233286, 0x2d24101e, 0x7b01fffe,
	0x27051b42, 0x6a010c01, 0x4831e6fe, 0x210c1f42, 0x196e0100, 0x04630805, 0x011e005d, 0x84b1400f, 0x1e56011e, 0x011d1401, 0x7e011288, 0x015c0101,
	0x01013b01, 0x1901012a, 0x021c0101, 0x5b011299, 0x124a0112, 0x12180301, 0x12021238, 0xbe021017, 0x1ead011e, 0x011e9c01, 0x1e8b1e7b, 0x011e0e02,
	0x011edf02, 0x25011e68, 0x1603011e, 0x1e05011e, 0x0101b201, 0x0101a002, 0x82010194, 0x1a01291c, 0x00141e00, 0x0d021e00, 0x21054f41, 0x80829017,
	0x0b202e08, 0x08801a06, 0x08020890, 0x1e011e59, 0x3f17051c, 0x44011052, 0x10640110, 0x0d021074, 0x09160b10, 0x0b090e0e, 0x025b053f, 0x027b026b,
	0x086a4103, 0x6a410520, 0x415d2010, 0x3931076b, 0x71715d39, 0x393911ed, 0x5d2f0171, 0xd610c0fd, 0x0571415d, 0x3446cd20, 0x71712706, 0x5d5d715f,
	0x03825d5f, 0x00837120, 0x11c01023, 0x210e8439, 0x9a433912, 0x215d2609, 0x23150123, 0x057f4111, 0x11373225, 0x18361533, 0x2107e068, 0x01820607,
	0xf6a9042d, 0x6b86bbfe, 0x2f3cbcbc, 0x42330986, 0x67230ba2, 0x427401db, 0x0f25059e, 0x11e75a01, 0x07a1426e, 0x2208ec82, 0x05affec8, 0x00d105c7,
	0x4035000f, 0x0f14021b, 0x14040b0e, 0x050a110e, 0x350b0714, 0x0c070505, 0x440e0308, 0xc0260a4f, 0xed2f3912, 0xc1822f01, 0x0382d420, 0x31eddd24,
	0x8e830130, 0x94822120, 0x11332308, 0x11331121, 0xbcc70533, 0xc619fd96, 0xc6e702c6, 0x01affe8c, 0xfdd90251, 0xfdd10527, 0xfa4802b8, 0x6f8200dd,
	0xf4feb926, 0x5d04e604, 0x1a206f86, 0x1a206f83, 0x1a236f83, 0x843f0b07, 0x0e05216f, 0x890abe43, 0x96dc206f, 0xe604306f, 0xd1fd93af, 0x2f02bcbc,
	0xf4fe86bc, 0x18010c01, 0x21086a49, 0x981845fc, 0x3d2b1399, 0x7f0464fe, 0x16025d04, 0x8300c401, 0x0006248f, 0x82e60400, 0x102b08ff, 0x48407b00,
	0x60010f70, 0x0f50010f, 0x010f4001, 0x20010f30, 0x0f10010f, 0x0f100f01, 0x0014100e, 0x00001401, 0x0e0e0f01, 0x820c0d14, 0x090d3a02, 0x0004080c,
	0x08140501, 0x023c0508, 0x030c010f, 0x070b0b0d, 0x0e00100d, 0x05a9490d, 0xd0c02008, 0x391211c0, 0x3917122f, 0x01c0fdc0, 0xcdd0fd2f, 0xccd010cc,
	0x7d2b87dd, 0x1887c410, 0x82082b10, 0x09484b07, 0x15010122, 0x0805c549, 0x2135212d, 0x01330135, 0xfde60401, 0xfe7001f4, 0x96fec690, 0xf2fd6a01,
	0x019701db, 0xfcd1059b, 0xfe8a59bc, 0x8aaa0156, 0xfd590344, 0x189a0266, 0x080a0593, 0x90000e38, 0x0e7b5740, 0x010c7401, 0x64010e6b, 0x0e5b010c,
	0x010c5401, 0x44010e4b, 0x0d70010c, 0x010d6001, 0x40010d50, 0x0d20010d, 0x0d0c0d01, 0x0b1a0c0e, 0x0b0b140a, 0xd1820d0a, 0x013cdb85, 0x1a040200,
	0x07090a0b, 0x013d0407, 0x0a0a0b0d, 0x000e0b06, 0x06050b0c, 0x3f3f000c, 0xcd85ce87, 0xccc0cd28, 0xc0cccdfd, 0xcd931087, 0x21088c47, 0xd3880101,
	0x7f2cd284, 0x650137fe, 0xfebc9bfe, 0xfe5901a7, 0x3005e470, 0xdbfb5d04, 0x01b6fe8a, 0x25048a4a, 0x3c03c4fc, 0x36d18200, 0x05affe44, 0x00d10548,
	0x40be000f, 0x010b4883, 0x07480738, 0x4a054702, 0x3a080645, 0x0d0f1402, 0x0e09050c, 0x09060b0a, 0x060b070e, 0x0c040308, 0x72030805, 0x09630109,
	0x01095401, 0x16010925, 0x037e0109, 0x6d035d01, 0x032b0203, 0x01031a01, 0x03080309, 0x82090e14, 0x0e200802, 0x05630553, 0x16030573, 0x02052605,
	0x5b010b7d, 0x020b6b0b, 0x0b290b19, 0x060b0502, 0x050c140b, 0x0c310282, 0x0b080611, 0x0308090c, 0x0503350e, 0x00010806, 0x20fd822f, 0x240382ed,
	0xc62f01c0, 0x06834810, 0x00835d20, 0x0c8b1820, 0x0f201083, 0x18220082, 0xb243eddd, 0x23012206, 0x58851811, 0x3301250a, 0x3abc4805, 0x0dcb7819,
	0xfdd92d08, 0x888a01fe, 0x5101affe, 0x9bfd6502, 0xe902e802, 0x5d02a3fd, 0xbdfd20fd, 0x3c000100, 0x8604f4fe, 0x0f005d04, 0x47407200, 0x0e0f1a02,
	0x0324f793, 0x1a090e09, 0x0820dd82, 0xc283ae82, 0xc2841a20, 0x200c1028, 0x600c400c, 0xcb87040c, 0x3f0e0522, 0x5d20cb93, 0x2105f045, 0x8644c618,
	0x23bd8205, 0x1018010f, 0x2107d643, 0xbe820101, 0x01013322, 0x2b080283, 0x44af8604, 0xc1fec3fe, 0xfeb401db, 0x3b01ed50, 0xfedc3c01, 0x833a0149,
	0x0c01f4fe, 0x53fead01, 0x30022d02, 0xa6015afe, 0x6bfedafd, 0x0a4b6718, 0x001b2a08, 0x762e4057, 0x0b690112, 0x14170401, 0x19100606, 0x1d001402,
	0x0d001410, 0x15150d01, 0x190e1a14, 0x09341417, 0x09020407, 0x24018206, 0x01030e01, 0x06986a08, 0x112f3408, 0x10333333, 0x103232ed, 0x2f3911c0,
	0xed5d2f01, 0xc0fdde10, 0xc02f3912, 0x3031c0dd, 0x23215d5d, 0x11070611, 0x23221123, 0x35262722, 0x14113311, 0x82171617, 0x36320806, 0x04331137,
	0x7ea1c6ea, 0xd5130a86, 0x37c68679, 0x9a86b044, 0x7602c685, 0xd7fe1332, 0x71661c01, 0xfefc01da, 0x5c4bb567, 0xfe7e0102, 0x02310f88, 0xaf8600b1,
	0x5d041f35, 0x55001b00, 0x10772e40, 0x12150401, 0x190e0606, 0x820f1a02, 0x0e1d311c, 0x100b001a, 0x140b020b, 0x0c1a1214, 0x3f121519, 0x0122b086,
	0xaf89050c, 0xad8dae82, 0xae8a5d20, 0x1526ad84, 0x23223523, 0xab8b1120, 0x2c08ad84, 0x5270bc1f, 0xfe110a86, 0x2f2abc8e, 0x24118678, 0x01bc3855,
	0xc80e23ad, 0x015801bb, 0x8fcafe96, 0x0107423b, 0x02d6fe2f, 0x02110e06, 0x08ad831d, 0x0000c839, 0xd1052405, 0x35001300, 0x12671d40, 0x01117701,
	0x02010458, 0x0d150014, 0x080a1408, 0x0f0d3406, 0x030b0a0f, 0x00080a01, 0x123fc03f, 0xed332f39, 0xfd2f0132, 0x42de10c0, 0x8d82059a, 0x2105bf4e,
	0x8c822311, 0x33243508, 0x15161732, 0x37c62405, 0xbfdabb45, 0x0801c6c6, 0x8679d5ba, 0x4bb59901, 0x4ffd465e, 0x8afdd105, 0xda716652, 0x00ffff00,
	0x040000b9, 0x0214065f, 0x004b0016, 0x732a0f83, 0x9805e1ff, 0x1602ec05, 0x0f848902, 0x8206994f, 0x008a230f, 0xe8180000, 0x3b08094d, 0x0016000d,
	0x4053001f, 0x011e1934, 0x55011a16, 0x14160114, 0x01135601, 0x5a011159, 0x10190110, 0x010d7501, 0x0e01077a, 0x21001517, 0x06151816, 0x1818340e,
	0x0a34121c, 0x03341c02, 0x21078550, 0xc182ed2f, 0xde10c524, 0x1047c5fd, 0x015d290a, 0x20210010, 0x37101100, 0x20056650, 0x06954f26, 0x6f500520,
	0xda410808, 0xc2fe8afe, 0x8cfec1fe, 0x4201b5bc, 0xbcb93f01, 0x826b13d2, 0x6b81e3e1, 0xfcc40313, 0x7f73103b, 0x727fe1e1, 0x92fee802, 0x990167fe,
	0x6c016e01, 0xcecacad2, 0x82dbf3fe, 0xdb829d9d, 0x9a8ae8b3, 0x08ca829a, 0x6a000326, 0x7104e1ff, 0x0f007c04, 0x1b001400, 0x2a404500, 0x46011b49,
	0x13460118, 0x01114901, 0x001b1510, 0x1b16141d, 0x2d053348, 0x16903f10, 0x1a161601, 0x040c3f12, 0x5a503f1a, 0x5d2f2108, 0x5d21c082, 0x27c18afd,
	0x06071001, 0x26272223, 0x3328bd83, 0x07161732, 0x03202102, 0x2b08b985, 0x7f710420, 0x8afbfa8a, 0xfb8a7f7f, 0xc57e8afb, 0xfedefe1c, 0x7e021bdc,
	0x490c81fd, 0x24019853, 0xfffe2e02, 0x9eadad9f, 0x02010201, 0x9f290782, 0xfe6101b7, 0x5d9e909f, 0x0561476b, 0x10056422, 0x3808ab82, 0x40470019,
	0x01067928, 0x01010668, 0x15181a03, 0x1b181400, 0x901a0a0f, 0x0a0c010c, 0x110f4208, 0x15050d04, 0x080c173e, 0x013e0318, 0xfd3f000c, 0xedd03fc0,
	0xed333f3f, 0x05a24832, 0xddc0de2f, 0xcdfd10c0, 0x5d5d3031, 0x33352101, 0x09314211, 0x36153b08, 0x11112033, 0x11231533, 0xfd100533, 0x332ab1e2,
	0xbcb0928f, 0x01bcbbbc, 0xb1b1b173, 0x039864fe, 0x5345b580, 0x04befc87, 0xfe9b7c5d, 0x98c3fd59, 0x0100fcfe, 0x64fe0000, 0x97825f04, 0x00152808,
	0x7922403c, 0x04680104, 0x001a0101, 0x090b1117, 0x0e900c1a, 0x06080e01, 0x04131142, 0x0e09050f, 0x010c0c3e, 0x833f0008, 0x228f8692, 0x42cdfdcd,
	0xbc4207bd, 0x15332109, 0x33209783, 0x04228e84, 0x8684bc5f, 0xd2fdb923, 0x218984b9, 0x83837c02, 0x98bafb25, 0x83610598, 0x82002085, 0x02992c81,
	0x027d043c, 0x000300dc, 0x740c4018, 0x0f270536, 0x02051f05, 0x745d2f02, 0x04330b3c, 0x031cfc7d, 0xa03c02e4, 0xff020000, 0x03e403ed, 0x8213061a,
	0x074a0833, 0x35404f00, 0x05270517, 0x17030537, 0x37012701, 0x05720301, 0x50054001, 0x03056005, 0x04b10605, 0x72b10003, 0x01400101, 0x01600150,
	0x07020103, 0x0401044f, 0x04030205, 0xc03f0000, 0x2f01c0de, 0xcdd6cd5d, 0xcdfd5d5d, 0x0682fd10, 0x5d303128, 0x2303015d, 0x03822101, 0xa51a0327,
	0xfe0f01f4, 0x60ae18f6, 0xd1fd2409, 0x82002f02, 0x03002673, 0x05720466, 0x087d84d1, 0x7d000b32, 0x0b095340, 0x6e010a7f, 0x0a3f010a, 0x0a5f0a4f,
	0x08700a03, 0x01086101, 0x08500840, 0x05060802, 0x01040607, 0x01007003, 0x30010061, 0x50004000, 0x21083782, 0x6e01027f, 0x024f0102, 0x0202025f,
	0x61010470, 0x04300104, 0x04500440, 0x09060403, 0x03080502, 0x9d820307, 0xc0ddc022, 0xdd249f82, 0xd65d5d5d, 0x9d820382, 0x39395d27, 0x39391211,
	0x260e8910, 0x01013031, 0x86231323, 0x72042603, 0xc288d6fe, 0x2004836f, 0x25048371, 0x95fdd105, 0x03876b02, 0x00007e08, 0x00660001, 0x059f0400,
	0x002200f0, 0xc56e40ab, 0x16370116, 0x16b71647, 0x0112b903, 0x12481238, 0x010fc802, 0x0cb60ca6, 0x010c9702, 0x54010875, 0x02086408, 0x5c01046b,
	0x03790104, 0x1d0c0c01, 0x1d20221b, 0x0202181a, 0x24221f14, 0x1d061a14, 0x20023f18, 0x76010c87, 0x0c65010c, 0x560c4601, 0x0c34020c, 0x0d0a0c01,
	0x3f19100d, 0x0120901c, 0x1c201c20, 0x0a3f1021, 0x013f2102, 0x0acc5308, 0x11ed1024, 0xca4c2f39, 0x105d2305, 0xe482fdc0, 0xde10ed26, 0x2f3912c6,
	0x10210b82, 0x541b82c0, 0x5d3b0dcb, 0x26112121, 0x34352627, 0x32333637, 0x26231517, 0x06072223, 0x16171415, 0x19211117, 0x08082395, 0x87fd9fa8,
	0x726c75df, 0x9c9ddb7a, 0x9f9f900b, 0x52474754, 0xfe79029b, 0xfed1010d, 0x01f3012f, 0x859002f0, 0x958be6e3, 0x8085a256, 0x67a2a66d, 0x8d010376,
	0x78ebfe78, 0x030088fe, 0x52ff7300, 0x96068205, 0x2e002800, 0x57013700, 0x3266dd40, 0x01321701, 0x72013105, 0x2d66012d, 0x012c0701, 0x5b012079,
	0x10770120, 0x010f1701, 0x1701067c, 0x02016701, 0x01010703, 0x222f371c, 0x19231b23, 0x24252b2c, 0x011a761a, 0x1a671a57, 0x301a2002, 0x031a401a,
	0x79011a04, 0x23580123, 0x2f022368, 0x4f233f23, 0x230b0323, 0x2d821a01, 0x24ab3c08, 0x1a24141a, 0x2e170024, 0x16282729, 0x09081428, 0x0001070a,
	0x01157615, 0x15671557, 0x30152002, 0x03154015, 0x79011504, 0x28580128, 0x2f022868, 0x4f283f28, 0x0f020328, 0x82150128, 0xab400830, 0x00141500,
	0x0e030015, 0x1b0f1639, 0x15351b01, 0x1e011e00, 0x0307292b, 0x0127252f, 0x04220403, 0x0022342f, 0x22232428, 0x151b1a02, 0x120e1216, 0x2c2e370d,
	0x1c340a08, 0x12141719, 0x333f000a, 0xfd210082, 0x29008232, 0x103911c4, 0xc0d0c0dc, 0x0482dd3f, 0xc4fd1025, 0x82391711, 0x2f012902, 0x5dd4ed5d,
	0xd0d610cc, 0x21074949, 0x00855d5f, 0xc4c48729, 0x05c40ec4, 0x8310c4c4, 0x01c42409, 0x48dc1018, 0x1e8505ab, 0x845d5d21, 0x231c8516, 0x5d013031,
	0x1e843787, 0x16030138, 0x26231517, 0x33320127, 0x15333720, 0x23060706, 0x23072722, 0x04822637, 0x1126132d, 0x25363710, 0x16073337, 0x82033717,
	0x17162223, 0x08208213, 0x150607ac, 0x82051714, 0x0f210e6b, 0x5ffe3333, 0x1c01080a, 0x92460eda, 0x2e2f9092, 0x5245ad3a, 0x86ad5e44, 0x01bccabf,
	0x46b0413c, 0x94544e50, 0x5dfe524b, 0x46655837, 0x274cc137, 0xfe960649, 0xeb1007ea, 0xc6fb212b, 0x3821e8c4, 0xb497042e, 0x01f32817, 0x6e01ca5d,
	0xc0ce7001, 0x0cb5aa07, 0x80feda19, 0xc1fb0b1c, 0x9104222f, 0xe14e1609, 0x90c39574, 0x00010000, 0x05e5ff73, 0x00ec0546, 0x4099002b, 0x0118075e,
	0x55011406, 0x15590117, 0x01145a01, 0x78010a65, 0x06190106, 0x1a271d01, 0x21161a1a, 0x162d000e, 0x00180814, 0x38820901, 0x70042e08, 0x2b2b012b,
	0x25222728, 0x0e361f3f, 0x17020e46, 0x020e270e, 0x0e010e06, 0x7f0f6f0c, 0x0f0f020f, 0x1f1d2112, 0x12281c1c, 0x1a020c34, 0x05cd5728, 0x3f563220,
	0x32322c05, 0x5d2f3911, 0x5d5d3912, 0x89ed105d, 0x2f012b0c, 0xc0d610ed, 0x2f3912c0, 0x1643c0fd, 0x5d012808, 0x0706255d, 0x46202306, 0x213105a7,
	0x23150532, 0x07222126, 0x17101106, 0x33111716, 0x09284315, 0x24115008, 0x46053337, 0x90929246, 0xccbeb1fe, 0x4d01c3ca, 0x0f0601f3, 0xe3f4feeb,
	0x4a98928a, 0xa7cdbc6a, 0x500a4b3e, 0x01aa9a5f, 0x6c0ed718, 0xbc2e3821, 0x017c01ca, 0x83c7ce70, 0x9f96c5eb, 0xdbfed9fe, 0x02244fa1, 0x0ca5a5ab,
	0xfe8a13c1, 0x82c2027b, 0xb94108e6, 0x170738ff, 0x29004405, 0x6a40ad00, 0x3d010e7c, 0x020e5d0e, 0x10232203, 0x24250a23, 0x770f670f, 0x0f43020f,
	0x0f100101, 0x02020f20, 0x6d010f00, 0x4c030123, 0x1f010123, 0x02232f23, 0x01230f02, 0x082a820f, 0x0f24ab4c, 0x0f242414, 0x10201010, 0x10031030,
	0x1b1d0d10, 0x240d1a1a, 0x1a000c24, 0x111a0c01, 0x273f060d, 0x17232420, 0x1d04203f, 0x1a100f05, 0x00080d01, 0xdcc0c03f, 0xed3f3fc0, 0xd010c0de,
	0xc42f01ed, 0x12eddefd, 0xdc102f39, 0x0682c0ed, 0x21083553, 0x01835d5f, 0x87240485, 0x10c4c40e, 0x31250482, 0x5d5f0030, 0x08a4465d, 0x0707062a,
	0x03112311, 0x27260123, 0x82059c48, 0x0534410d, 0x33134108, 0x20333607, 0xbc170711, 0x50902e22, 0x502d1a4e, 0x01a9f4bc, 0x0d03029c, 0x85522a51,
	0xbbbcbcb0, 0xae55dfaf, 0x5d536dac, 0x7c026701, 0x275740b6, 0xfda91c0d, 0xfd400130, 0x3e7203f8, 0x15298221, 0x08066147, 0x7401ac3f, 0x59fe20e8,
	0x34000500, 0xd0050000, 0x1b00d105, 0x22001f00, 0x29002500, 0x6540ba00, 0x4b012345, 0x121c0121, 0x23251f1e, 0x26042311, 0x03212027, 0x66115621,
	0x03110211, 0x23140321, 0x08028411, 0x18021432, 0x02151a00, 0x07090d2b, 0x14052821, 0x65070b10, 0x23540123, 0x15212301, 0x08251114, 0x3c050104,
	0x1a1f2629, 0x1216200b, 0x273c220f, 0x0b0c191e, 0x07390182, 0x02031110, 0x08070603, 0xd0c03f00, 0x11c03fc0, 0x2f2f3939, 0xc0c0c010, 0x200382fd,
	0x860883c0, 0xc0d02709, 0x5d5d2f2f, 0x19842f01, 0xc0de1022, 0xc0200282, 0xfd210582, 0x06d443c0, 0x8505c843, 0x42012005, 0x0120057d, 0x0120ad82,
	0x2807d858, 0x11333523, 0x11211321, 0x05764833, 0x0c822120, 0x11030133, 0x25233501, 0x05112303, 0xfef598d0, 0xb943fefb, 0x3b008294, 0x01dd3301,
	0x9898b9a7, 0xfeaffe98, 0x55fe89ae, 0x74fe028a, 0xdf89defe, 0x14feec01, 0xa0270385, 0x01a00401, 0x835ffea1, 0xfea02403, 0x820401fc, 0x83a42003,
	0xe1fc2205, 0x081b82db, 0xfffcfe25, 0xffc800ff, 0x050109e5, 0x003600d1, 0x01000035, 0x05560017, 0x0000002a, 0x0002b60b, 0x00002626, 0x822b0125,
	0x00072616, 0x0700005c, 0x0825828d, 0x23001f2d, 0x29002600, 0x31002d00, 0x48013400, 0x1b68af40, 0x01095701, 0x19171410, 0x3433302f, 0x120f3418,
	0x0e171613, 0x1834180e, 0x820e1714, 0x34173402, 0x1a2e3132, 0x0c1b341b, 0x25262c2d, 0x0d250d1b, 0x821b3414, 0x34483902, 0x27253401, 0x1f1e2023,
	0x22281f29, 0x291c1d21, 0x2a2b241c, 0x0a250a0b, 0x142d0982, 0x25140a25, 0x04010a25, 0x00090805, 0x08218209, 0x09001439, 0x09000014, 0x46000307,
	0x25290129, 0x17181625, 0x0e34291b, 0x27283233, 0x0f080b0c, 0x2d30313c, 0x0522232a, 0x1e242612, 0x01191a1d, 0x2e2f3c16, 0x20212b2c, 0x82121304,
	0x1b0e2a01, 0x1b1c001f, 0x0d0a0903, 0x07bd410e, 0x11c0d023, 0x07c04112, 0xc441c020, 0x20078207, 0x8b038210, 0x2f24820f, 0x12c0d010, 0x2f190139,
	0x195ddd18, 0xc0d618dd, 0x21053f4e, 0x0082c487, 0x10188726, 0xc47d872b, 0x450a9f45, 0xdd2008c2, 0x20056f4e, 0x20258210, 0x241486c4, 0x87dd1019,
	0x202f8e18, 0x495d8201, 0x3329051e, 0x33032315, 0x23032115, 0x23038403, 0x23033335, 0x33230382, 0x83132113, 0x82032003, 0x27012606, 0x17230107,
	0x83218201, 0x074a080d, 0x8d071723, 0x439a7072, 0x7af9fedd, 0x80fe77df, 0xfe7cda74, 0x9e45e3f2, 0x6fcb7474, 0xc96d9101, 0x6d94016d, 0x41bcfe95,
	0x2f2cfec2, 0x7209022e, 0x41f7fe39, 0xfe5d40ae, 0x28be42bf, 0xd105376d, 0xfea049fe, 0x2afea0fc, 0x0383d601, 0x0401a027, 0xfeb701a0, 0x2e038549,
	0xfcfea9fd, 0xbabaa401, 0x01e7bcfd, 0x42040187, 0x3b080539, 0x0200dba0, 0x00009700, 0xf2041b06, 0x1f000f00, 0x22403d00, 0x14681458, 0x0f031478,
	0x1a1f0d1a, 0x1a1a0811, 0x081a0618, 0x07100710, 0x0e3f1708, 0x183f081b, 0x3f000805, 0xc02fedc0, 0x26055b5d, 0xdefd2f01, 0x82de10ed, 0x35f38204,
	0x06071401, 0x33112123, 0x37322111, 0x33113536, 0x34112301, 0x11822627, 0x11822320, 0x16176108, 0x721b0615, 0xdafde46b, 0x9f7501ad, 0xfead3a3f,
	0x403aad63, 0xad8bfe9e, 0x6ae52602, 0xf2bf0172, 0xfe02636a, 0x3e43c6fd, 0xfd2d0380, 0x81390102, 0xd2fb433d, 0x6a63f204, 0x010000f2, 0x00003400,
	0xd1057505, 0x83001100, 0x11074440, 0x010e1401, 0x47010e83, 0x0d0e010e, 0x0b0e0b0c, 0x0e0d140c, 0x0c2d0282, 0x11100d0c, 0x11020100, 0x00140102,
	0x38028211, 0x13000101, 0x02110b0e, 0x04060814, 0x080b090d, 0x0505023c, 0x00030904, 0x20c58304, 0x074a493f, 0xce2f0130, 0xc032fdc0, 0x32d61032,
	0x0587c100, 0x0583102b, 0xc4107d26, 0xd418c001, 0x3129118d, 0x5d5d0130, 0x21215d71, 0x06b45c01, 0x11332508, 0x21013301, 0x75052115, 0x1ffdfffe,
	0xc69999c6, 0xfdf0d302, 0xfdff0220, 0xfd980204, 0xa0980268, 0x67fd9902, 0xa0200383, 0x0024c582, 0xee040000, 0x3d08c582, 0x40700017, 0x0e11123f,
	0x0d700d30, 0x0d900d80, 0x030b0d04, 0x083f0704, 0x088f087f, 0x0804089f, 0x0a000206, 0x0f131514, 0x0d090c0b, 0x0e060f08, 0x11051007, 0x12021304,
	0x35140103, 0x38820316, 0x820b0d21, 0xddde2bc0, 0xfd3fcdde, 0x3911dcc0, 0x0382dd39, 0x0382de20, 0x0382cd20, 0xc02f012e, 0xcefdccc0, 0x5ddec0c0,
	0x10c0d0c0, 0xb7820584, 0x37112125, 0x82150715, 0x23b98203, 0x35373507, 0x11280382, 0x04213521, 0xf8ecfdee, 0xc6210082, 0x210082fb, 0x9e82ecfd,
	0xaefe2126, 0x9fc2a1c2, 0xfe270382, 0xc5530112, 0x829fc5a1, 0x01b20803, 0x0500b0ed, 0x6afe2900, 0xb606e507, 0x39001400, 0x5b004900, 0xdc006600,
	0x56758140, 0x01566601, 0x69014d69, 0x024c794c, 0x29014c3a, 0x3974014c, 0x01394501, 0x55011766, 0x17460117, 0x17170701, 0x2c330217, 0x3528032a,
	0x03504e38, 0x7f523636, 0x154a014a, 0x07420642, 0x0d0c0c0a, 0x68003a42, 0x5c015c18, 0x541d2826, 0x50612152, 0x70526052, 0x2e520352, 0x3536282f,
	0x2f2f2e33, 0x33382c4e, 0x24265403, 0x1d241958, 0x635e195c, 0x0d42191f, 0x463e1146, 0x08190406, 0x000a070c, 0x3f33332f, 0xdedd32d4, 0x393912cd,
	0xdeddd010, 0xcd393911, 0x0582cd10, 0xcd333f25, 0x822f3332, 0x0132270b, 0xcd32ce2f, 0x2183dc5d, 0x5d222482, 0x2d82d610, 0x332f3222, 0x102b2482,
	0x125dcddc, 0x39172f39, 0x56171233, 0x20080baf, 0x015d5d5d, 0x23060714, 0x06032722, 0x37362307, 0x36373613, 0x16173233, 0x02071001, 0x26272221,
	0x211a8227, 0x12833435, 0x12373628, 0x04373637, 0x21822707, 0x17240882, 0x01040706, 0x2205704e, 0x60141506, 0x0f83053a, 0x07062727, 0x07020306,
	0x22118316, 0x7a013613, 0x420905cd, 0x36373233, 0x5357e507, 0x4b566c8a, 0x16c6250c, 0x591e8024, 0x52817f5e, 0x87d0fd57, 0x71bafea7, 0x5b414168,
	0x4f6fc1a1, 0x1d1f3d50, 0x5c3a3045, 0x138ee3fe, 0xd5ae463e, 0x4232d847, 0x010c026a, 0x492d279b, 0x2f2d314a, 0x2e464732, 0x479efd29, 0x443cd657,
	0x3c404629, 0x584c5228, 0xfc5f7ae8, 0x2d40427b, 0x1f487141, 0x881f0108, 0xfe4d4c4f, 0x254639a0, 0x7e220262, 0x4c48524f, 0xa0fed301, 0x47dcfeed,
	0xb8b23536, 0xac266a4e, 0x9553018c, 0x50106db7, 0x34151f3c, 0x1c964d01, 0xfb258542, 0x423a4c63, 0x494c3b41, 0x3c43423d, 0x7ffda002, 0xca570e9c,
	0xfebdfe7a, 0x40228ed7, 0xd9170138, 0x3e2ca8fe, 0x1245642d, 0x00020000, 0x0359fe05, 0x001e06f2, 0x00300027, 0x496040a0, 0x02187918, 0x2c002f25,
	0x16161111, 0x12122815, 0x0f141515, 0x1b1b0c18, 0x211b282c, 0x1b0c0600, 0x13703200, 0x70141301, 0x022f802f, 0x18012f64, 0x3f2a162f, 0x1f11250f,
	0x01127f00, 0x124e123e, 0x2f121f02, 0x15120212, 0x01167013, 0x16611641, 0x01162202, 0x16011610, 0x08131411, 0x00043f0a, 0xc03fed2f, 0x825dcdd6,
	0xdd102100, 0x3f350683, 0xed393912, 0x5d393911, 0xcd2f015d, 0xfdd6105d, 0xfdd010cc, 0x281183de, 0x2f193911, 0x12112f33, 0x09058539, 0x30313901,
	0x0706055d, 0x27222306, 0x33163335, 0x27343732, 0x27070603, 0x17012307, 0x26033736, 0x36373635, 0x14112033, 0x13070607, 0x23340316, 0x17140722,
	0xf2033613, 0x8a535901, 0x5d0a5f62, 0x06018c41, 0x857a7385, 0x2201c469, 0xa7883081, 0x52590107, 0x47100184, 0x0dc24e3a, 0x01715cb4, 0xb0686105,
	0x133e4376, 0x17741bb2, 0xced70116, 0x02c5dec6, 0xff53f20b, 0x301a5f02, 0xfe414881, 0xaed685f5, 0x3135fd9d, 0x76818205, 0xaefe1224, 0x000400f4,
	0x04000048, 0x00d105cc, 0x0025001e, 0x0031002c, 0x2b554090, 0x022d3b2d, 0x2d012d19, 0x1f2b282b, 0x1f021f3b, 0x001b1526, 0x97191d17, 0x16850116,
	0x01167601, 0x03011665, 0x16571647, 0x1b011602, 0x06252a33, 0x1008142f, 0x0a0e080c, 0x30350508, 0x2a2e0109, 0x1f0c0f1d, 0x0c02020c, 0x25290d19,
	0x35241016, 0x08080311, 0xfd3f3f00, 0x83c0c0dd, 0x5d5f2102, 0xde310784, 0xde2f01ed, 0xc0d010c0, 0xc0c0fd10, 0x32dc10c0, 0x058f4c32, 0xdc323228,
	0x32ed10c0, 0x1082325d, 0x30315d29, 0x07062301, 0x44232306, 0x2e0805f6, 0x33352335, 0x17322111, 0x15331716, 0x14151623, 0x26013307, 0x23232627,
	0x27340515, 0x36211521, 0x33152107, 0x63cc0432, 0x9f6abc50, 0x8280c6c6, 0x014c0800, 0x6e8bfd94, 0x02385129, 0xc6fe3d07, 0x613b6c38, 0x043a02c4,
	0x3102cafd, 0x0bfe4509, 0x4003f1a7, 0xfd2745a9, 0x784003d5, 0x1501788c, 0x786f495d, 0x292e1d18, 0x18460401, 0x20b26b0d, 0xa0288c1a, 0x0300006c,
	0x9800f500, 0x80049705, 0x34065150, 0x04114025, 0x050d0800, 0x54090901, 0x5403050b, 0x05540701, 0x05904600, 0xcb82d382, 0xc0c0d622, 0x2123b882,
	0x86112135, 0x97052503, 0xa2045efb, 0x03240387, 0xbcfda0e0, 0x78080283, 0xc8000500, 0x2b0538ff, 0x18009906, 0x25002100, 0x34003000, 0x53408b00,
	0x69011b78, 0x1754011b, 0x56021764, 0x10070114, 0x01026601, 0x15010257, 0x0d1e1316, 0x22142c04, 0x3110070a, 0x90318001, 0x31310231, 0x00152633,
	0x130f1519, 0x36001301, 0x08143325, 0x221e1516, 0x33332c35, 0x35231d31, 0x03090b0d, 0x0635312d, 0x00080804, 0xedcec53f, 0x33ce3f32, 0x391132ed,
	0x2c05822f, 0x2f013939, 0xd610c0fd, 0x10ed5dd4, 0x211282ed, 0xbc48715d, 0x39122106, 0x26098d44, 0x06071401, 0x84231507, 0x153323c8, 0x01821716,
	0x07141532, 0x01161615, 0x27262734, 0x36373611, 0x11231105, 0x0e890c84, 0x2b05da08, 0xaee68e9b, 0xa6015afe, 0xcb2138ae, 0x99c62547, 0x4cb3feac,
	0x27884630, 0xe090fe13, 0x317dcf02, 0x91381843, 0x11fe6c44, 0xd7ca01e0, 0xc90a6f79, 0xc8d105c8, 0x1e0503cc, 0xc95e4482, 0xcb1f0863, 0x2c6b0402,
	0x61fe061c, 0xad2e6016, 0x52feae01, 0x41a848fe, 0x0203071a, 0x2f0bddfd, 0x2a02894a, 0x0300d6fd, 0x6affbe00, 0x2e049903, 0x2c002500, 0x8a003300,
	0x19225740, 0x16263104, 0x2b0d0d07, 0x8f1d2a2d, 0xaf009f00, 0x00710300, 0x60005001, 0x002f0200, 0x2b350001, 0x1280092a, 0x1d341201, 0x1d021d44,
	0x2f1e1f19, 0x261e021e, 0x04310e22, 0x51272132, 0x3b191617, 0x02094b09, 0x0a000709, 0x0a200a10, 0x320d0a03, 0x07040551, 0x333f0009, 0xc432fdcd,
	0x5d39115d, 0x2209832f, 0x84391711, 0x2f01270c, 0x10edc45d, 0x00825dd6, 0x11edc428, 0xc0c02f39, 0x0382ddc0, 0x41303121, 0x26250734, 0x16333527,
	0x071a5117, 0x41353721, 0x152f0540, 0x11272623, 0x25161716, 0x06070611, 0x41011415, 0x6b080548, 0x4e6a9903, 0x93a17679, 0xbfa08c08, 0x4e60333e,
	0x403e7682, 0x72083a54, 0xe4311c92, 0x243059fe, 0x2b95013b, 0x0190481d, 0x3c528006, 0x05787e10, 0x0f69b04a, 0x4c262301, 0x50795c3f, 0x787b1041,
	0x1e140f04, 0xfe1254a9, 0x340a05e2, 0x0804015c, 0x62422114, 0x1f3ea6fe, 0xf8fe1115, 0xffff0017, 0x82fe7300, 0xf005da05, 0x32003602, 0x22052f67,
	0x6900a505, 0x26210587, 0x8bd11827, 0x82fe2508, 0x7c047104, 0x52202382, 0x04212385, 0x232386e2, 0x00061b1a, 0x2605616a, 0x05e1ff73, 0x880108da,
	0x00562c47, 0x00750196, 0x020b4022, 0x82013450, 0x34702e03, 0xffb83402, 0x090940c0, 0x3400370b, 0x6a5a8324, 0xe1240a67, 0x8c067104, 0x4a225f88,
	0xf36eb004, 0x1d702506, 0x1c1d0001, 0x476b6383, 0x20658f05, 0x3265844e, 0x0314401e, 0x01285002, 0x28200203, 0x28802850, 0x84280003, 0x355d2360,
	0x03820035, 0x00ffff27, 0x04e1ff6a, 0x226188f6, 0x824e0216, 0x401932c0, 0x00020313, 0x501c201c, 0xb01c801c, 0x1c00051c, 0x20688518, 0x05071935,
	0x4f022112, 0x16226984, 0x69860d40, 0x61876286, 0x82e5ff21, 0x22c38961, 0x824f0216, 0xb70c2161, 0x55846083, 0x82353521, 0x22bd8f85, 0x8296005c,
	0x401522e7, 0x86b8930f, 0x07a222b5, 0x06174152, 0x50021622, 0x5720b5b0, 0x712261a2, 0x6188de07, 0x61a15120, 0x4182fe21, 0x002509e7, 0x00d60037,
	0x06096d96, 0xcb82a520, 0x13401d2f, 0x01285002, 0x2d000328, 0x25030f2e, 0x07254102, 0x2209096d, 0x4182fe6a, 0x002a09eb, 0xe2d60036, 0x02170100,
	0x7882044b, 0x40140029, 0x2100030e, 0x82000622, 0x058c4138, 0x412b3521, 0x06280637, 0x0201088b, 0x00460236, 0x00252d82, 0x0178008d, 0x2a2d8275,
	0x3650020d, 0x02023660, 0x82363600, 0x1863826c, 0x22089b9d, 0x828c06c3, 0x8247202d, 0x0016222d, 0x255a828d, 0x0002b60a, 0xab422b2b, 0x224f8c0a,
	0x71aa0043, 0x4f840739, 0x70365023, 0x20548736, 0x08ad6c5d, 0x8b04e121, 0x82432055, 0x40112755, 0x2b50020c, 0x5b872b60, 0x8b08a342, 0x5602235d,
	0x5d828f00, 0x0b40122a, 0x013a5002, 0x393a0002, 0x1724ab98, 0xba044a02, 0x21065943, 0xad8c2e2f, 0x88c80721, 0x00d722fd, 0x204f878b, 0x214f8242,
	0x4f903542, 0xfb885320, 0x00c4d733, 0x10401500, 0x20371002, 0x50374037, 0x37000437, 0x0a4d432a, 0x0682fe25, 0x87f0058b, 0x4b022159, 0x2108fb43,
	0xfb433837, 0x05c3220b, 0x41518684, 0x0a2507a9, 0x2c0002b6, 0x2aa1872d, 0x0582feb2, 0x02d10529, 0x44380036, 0x0521051f, 0x24c58462, 0x21200001,
	0x061f440c, 0x82feb126, 0x5d045704, 0x58202382, 0x04212385, 0x232386d1, 0x16091a19, 0x26054344, 0x05e1ffb2, 0x88010829, 0x00562247, 0x27e98562,
	0x01235001, 0x22230001, 0x002c4c84, 0xffff355d, 0xe1ffb100, 0x8c065704, 0x4a224f88, 0x4f86c704, 0x8a1b1c21, 0x7506214f, 0x02214f83, 0x06374248,
	0x37427c20, 0x50012905, 0x022e602e, 0x2d2e0001, 0x0521518d, 0x215183a5, 0x37424902, 0x00ee3305, 0x10401800, 0x01286001, 0x40283001, 0x28000228,
	0xcd820929, 0x82071142, 0x425d8cad, 0x1c2a0545, 0x50011440, 0x022d602d, 0x05824001, 0x032d8024, 0x64842d00, 0xb7823587, 0x4321658c, 0x2b658602,
	0x50010127, 0x02276027, 0x08272700, 0x02206599, 0x250a1341, 0x00010131, 0xc1983031, 0x41021721, 0x2b210913, 0x2353832a, 0x00ffff35, 0x0723b584,
	0x413602be, 0xd72b0613, 0x6b016200, 0x01b60a00, 0x412c3900, 0xff2108ab, 0x20a382e1, 0x41238253, 0xd7220509, 0x218400fd, 0x88263321, 0x82fe2545,
	0xf8067506, 0x02214587, 0x08f1414b, 0x0d2f2e22, 0x2309f141, 0x8405a505, 0x17224586, 0xf1414b02, 0x29282108, 0x063e4787, 0xe6040000, 0x36020108,
	0x00003c00, 0x43001701, 0x7501e4ff, 0x0a401b00, 0x600a5001, 0x0582020a, 0xffb80129, 0x0a0ab4d3, 0x46250104, 0x0020052e, 0x3d26c382, 0x7f0464fe,
	0x35828c06, 0x35825c20, 0x43001634, 0x130000dd, 0x096001b5, 0xb8020970, 0x09b4ddff, 0x41410409, 0x262b8205, 0x0482fe06, 0x87d105e6, 0x21858261,
	0xcd8500f6, 0x83090a21, 0x87352054, 0x5d04214f, 0xa9824f86, 0x82dc0521, 0x40123123, 0x0f0a010d, 0x4f0a2f0a, 0x7f0a6f0a, 0x115d050a, 0x0853b818,
	0x0223b189, 0x82ecff56, 0x401831b1, 0x0e500110, 0x0ec00101, 0x00020ed0, 0x02030d0e, 0xad90ae86, 0x4a021724, 0xdd46b504, 0x50012605, 0x0d00010d,
	0x25ab8a0c, 0xe6040000, 0x0d41c807, 0x84d72008, 0x40122d5b, 0x1650010b, 0x16000101, 0x25000509, 0x4107e544, 0x53200503, 0x21080341, 0xd585ddd7,
	0x83081521, 0x00353c4f, 0xfe6c0003, 0x06fb04bd, 0x001b0014, 0x012c0028, 0x3b424013, 0x3c0c3805, 0x19243222, 0x0812271c, 0x2bb52a2e, 0x1a511401,
	0x18101717, 0x07041301, 0x04104120, 0x42260803, 0x2b2c0a07, 0x0a012b2c, 0x16880016, 0x041c1317, 0xb4f4ffb8, 0x55020909, 0x40230883, 0x820c0c0e,
	0x1a1a2f09, 0x0f0f402e, 0xb8015502, 0x2340f6ff, 0x09821010, 0x0b0b0822, 0x10200582, 0x0c201584, 0x01212e83, 0x232a832a, 0x0d0d0a01, 0xec2a2784,
	0x0f0f0b40, 0x06015506, 0x05820d0d, 0xecffb826, 0x09091c40, 0x92260982, 0x3f2e1f2e, 0xb518022e, 0x0122070a, 0x4883180a, 0xffb80a25, 0x831940fe,
	0x820a204c, 0x55022326, 0x4c830c0a, 0x83040a21, 0x850a254c, 0x2bf6102d, 0x32230083, 0x865d2bed, 0x210f870a, 0x0082322b, 0x532fed21, 0x003d0585,
	0x3f3fed3f, 0x393912ed, 0x2f39123f, 0x2f3cfd3c, 0x5d3031ed, 0x23112301, 0x23060635, 0x9b6a1822, 0x2135210a, 0x33230182, 0x18013315, 0x200b8e6a,
	0x2a148213, 0xbcb8fb04, 0xc66ead4d, 0x194452ed, 0x27163a1c, 0x03b4fcea, 0xfbf4044c, 0x1d3f1c19, 0xe2fd4808, 0xffff0086, 0x1d050bfc, 0x53064aff,
	0xd7001700, 0x00001efb, 0x8a000200, 0x90049100, 0x23009804, 0x67002f00, 0x02063740, 0x080b292d, 0x1a1d2302, 0x17081114, 0x052f0206, 0x29270501,
	0x01170f05, 0x1f310f17, 0x89240231, 0x200e371d, 0x2a200120, 0x0e0f2029, 0x5d2f0e01, 0x5d2fed33, 0xed391712, 0x0b85005d, 0x5854432a, 0xb005a0b4,
	0x595d0205, 0x0e831683, 0x83278c23, 0x240e822d, 0x07013031, 0x3cff8327, 0x27072726, 0x35262637, 0x27373634, 0x36361737, 0x17163233, 0x16071737,
	0x06141516, 0x1ad11807, 0x0425080b, 0x2cec6e90, 0x572e344a, 0xe96dec24, 0x1a161817, 0x24eb6fea, 0x582c2d57, 0xeb71ea25, 0x17191818, 0x494b6965,
	0x0803836b, 0x6e010128, 0x19161aea, 0xea71ec17, 0x342b5925, 0x6eed2b49, 0x181917eb, 0xed6dea17, 0x2d305326, 0x49a92458, 0x4a4b6e70, 0xf9826d6f,
	0x016eb608, 0x054e0859, 0x000c00ec, 0x40e20034, 0x580b2895, 0x780b680b, 0x0977040b, 0x66095601, 0x09270209, 0x09470937, 0x65345503, 0x20690234,
	0x01205a01, 0x77010a82, 0x2113010a, 0x030d2f1b, 0x0503040a, 0x021a000b, 0x071a0509, 0x0d1b1927, 0x33013176, 0x27761731, 0x01276401, 0x27552745,
	0x34272402, 0x25270227, 0x281f280f, 0x79282802, 0x1d28011d, 0x111f1d01, 0x02253e2b, 0x79090b02, 0x136b0113, 0x5a134a01, 0x132b0213, 0x1302133b,
	0x10140011, 0x14140214, 0x07113e17, 0x0404030a, 0x05070109, 0x3f000309, 0x12c0dc33, 0x33c02f39, 0x32edd410, 0x39125d2f, 0x2300825d, 0x3f32c010,
	0x8805e14f, 0x39113412, 0x2f015d39, 0xfddec4ed, 0x33eddc32, 0x10391712, 0x5ac4fddc, 0x01200701, 0x5d223382, 0x71182301, 0x01200af8, 0x2805d251,
	0x33163335, 0x27343520, 0x20018226, 0x12315d24, 0x4e080424, 0x7218feba, 0x24080a20, 0x809b89fb, 0x0abcd5bd, 0x0801d5c2, 0x4a5b2538, 0x73f2fe94,
	0xa3d2d67a, 0x5fceab0a, 0x4bb35541, 0x01110195, 0x45721874, 0xfc39080d, 0x4e5eb1e5, 0xa692d35e, 0x1418264c, 0xe448210e, 0x5466608f, 0x291f7ec9,
	0x0e2a7755, 0x01003f20, 0x1602e9ff, 0xc502c105, 0x11000300, 0x010500b5, 0x00010304, 0x1001cd2f, 0x051971c6, 0x05213534, 0x0528fac1, 0xaf1602d8,
	0x7e020100, 0x2d0393fd, 0x2b824807, 0x02b30d3a, 0x00020300, 0x2f012f2f, 0x013031cd, 0x02113311, 0x93fdaf7e, 0x4bf6b509, 0x05212785, 0x295382c2,
	0xb6130005, 0x02050701, 0x2a820503, 0x2b83cd20, 0x15315584, 0x11231121, 0x6bfdc205, 0xafc502af, 0x32057dfb, 0x82878300, 0x872c205b, 0x03062533,
	0x00030400, 0x33888882, 0x82352121, 0x7d022634, 0x43036cfd, 0x218c82af, 0x3382cefa, 0x827e0221, 0x82c220bb, 0x2167838f, 0x96820705, 0xcd209284,
	0x67849382, 0x21219582, 0x21978215, 0x27829502, 0x7dfb3223, 0x236784af, 0x2c031602, 0x01243386, 0x05030006, 0x2f203682, 0x67839b89, 0x2c033326,
	0x9402bdfc, 0x04216783, 0x37338283, 0xdbff2500, 0x5305db03, 0x1c001e00, 0x0a090b40, 0x1e1e1911, 0x110a161c, 0xdd24a082, 0x32cd2fce, 0xdd3d6f82,
	0x3031cdde, 0x17323301, 0x16161716, 0x35231515, 0x26272634, 0x14112323, 0x22230606, 0x05a15326, 0xe6015408, 0x4f37ac26, 0x63342d3c, 0x59493839,
	0x5c9c401c, 0x7b987f6d, 0x5305604e, 0x2a39140e, 0x2b676699, 0x20195f44, 0x8779bdfc, 0x69647b51, 0x00002e8f, 0xff730002, 0x06a20552, 0x002b0096,
	0x405a0035, 0x22211631, 0x15060405, 0x33341306, 0x14070408, 0x82071514, 0x0e3c0801, 0x001a6c27, 0x152f3775, 0x2136680e, 0x2911342c, 0x162a2a35,
	0x24330211, 0x00030834, 0x32ed332f, 0x2f39333f, 0x32ed10ed, 0xedf61001, 0xed32f610, 0x2f393912, 0x1133112f, 0x32391712, 0x31250483, 0x04062530,
	0x05df5d23, 0x0229b682, 0x21001035, 0x33371732, 0x23cc8207, 0x26231517, 0x272f1382, 0x32331603, 0x23113736, 0x22012135, 0x82101100, 0x137708e7,
	0x7aa20526, 0x4a87dffe, 0x25802044, 0x67509e3f, 0x01a10170, 0x241a1a6c, 0x29292780, 0x1f129985, 0x6b483976, 0x60332ff9, 0x019548bf, 0xfabcfd59,
	0x5198ddfe, 0x6e18f571, 0x9a095338, 0x484a0eb1, 0xc3230161, 0x9d016501, 0x06b9ab01, 0xeb491e0a, 0x231a4e18, 0x0660fb16, 0x6d011e26, 0xfe5602ae,
	0xfeeefebf, 0x2856a1df, 0x00019204, 0x001a0003, 0x055e0500, 0x821700d1, 0x001e3a09, 0x0b5340a2, 0x09060507, 0x050e0d0a, 0x1d1e030e, 0x040e191a,
	0x05140419, 0x3602820e, 0x16121905, 0x17141310, 0x02000f00, 0x19181c1b, 0x0119010f, 0x820f0014, 0x19003e02, 0x02061719, 0x141b3403, 0x181d1e09,
	0x341a0d10, 0x1d0a131c, 0x0e0f051d, 0x04000103, 0x07c55905, 0x2f391222, 0x2106fe50, 0x0886de10, 0x19012f23, 0x0666592f, 0x210b7b59, 0x7d59c0d0,
	0x33168b08, 0x31c0d010, 0x03232130, 0x13230321, 0x37333523, 0x13213521, 0x3e080182, 0x33172115, 0x03012315, 0x21270103, 0xd35e0507, 0x927cfd92,
	0xd59797c9, 0x01edfe3e, 0x0801cd51, 0xfe5101cd, 0x97d53eed, 0x8c8c7cfe, 0xfe3d9101, 0x9f013d6f, 0x9f0161fe, 0x02aaaaaa, 0x82ccfd34, 0x01b50806,
	0xfe8701fe, 0xaaacfe79, 0x000100aa, 0x05e5ff2e, 0x00ec054a, 0x40f1003d, 0x6631569c, 0x105a0231, 0x01054601, 0x3c323c22, 0x013b3202, 0x30013b20,
	0x39240139, 0x3c3b3901, 0x3d320303, 0x011d2b34, 0x03191b1d, 0x15222012, 0x320c3336, 0x01151e3f, 0x172c1503, 0x3b891214, 0x3bb93ba9, 0x013b7b03,
	0x5a013b69, 0x3b49013b, 0x3c393b01, 0x2c751d36, 0x012c6701, 0x2c012c56, 0x012b7f2e, 0x3420332b, 0x19861976, 0x01194502, 0x1bb71b97, 0x171b1902,
	0x693c171d, 0x0c58010c, 0x010c4901, 0x0c010c3b, 0x700b600e, 0x140b020b, 0x3c3c3401, 0x2e342607, 0x0e340702, 0x064d620a, 0xc0fd2f25, 0x45115dce,
	0xdd220642, 0x09833911, 0x10211288, 0x391085c0, 0x2f015d5d, 0xedc43333, 0x10c0de32, 0x3333c4d4, 0x171132ed, 0xc0de5d39, 0x06821211, 0x00825d20,
	0x21055545, 0xd5562101, 0x37242e06, 0x21041533, 0x35262720, 0x35233734, 0x05fc5633, 0x21352124, 0xfc563536, 0x23072e06, 0x32213635, 0x15071617,
	0x06231533, 0x08018307, 0x4a052169, 0x8705fffb, 0x018b9767, 0xfe0e6b25, 0xfee5fef4, 0x019aa9ee, 0xd54a7749, 0x222bfe80, 0xeb039ffc, 0x86607a02,
	0x5e918686, 0x1901ef0e, 0x03a19df4, 0x21168961, 0xcf69c561, 0xc7011e03, 0x42881f1b, 0xf8596b33, 0xc07c8877, 0x7eaa130b, 0x0a341738, 0x0f13aa0d,
	0x2a333f7a, 0x68ea502d, 0x0fba7977, 0x67232caa, 0x43291029, 0x463806c1, 0x1c009606, 0x92002700, 0x0d095c40, 0x0a020d19, 0x02091a09, 0x56012665,
	0x39080282, 0x225a0125, 0x69215901, 0x04120221, 0x070f1e18, 0x14241d1d, 0x15242900, 0x0114460b, 0x16011437, 0x02142614, 0x157f1214, 0x1e151501,
	0x0f103418, 0x00490212, 0x01003801, 0x5d830019, 0x1c700432, 0x1d1c1c01, 0x06073419, 0x3f000a04, 0x32ed33cd, 0x22079446, 0x89cd333f, 0x0599600c,
	0x5e391221, 0x9946053e, 0x0625320a, 0x15070607, 0x27243523, 0x37101126, 0x33352536, 0x05f96115, 0x37361125, 0x83110533, 0x062e081d, 0x16171015,
	0x92464605, 0xfe76757d, 0xcacca9e2, 0x761c01ad, 0xd40fefdb, 0x0ec4f8e7, 0x4051c0fd, 0x98274cc1, 0x38216c74, 0x95940627, 0x9260a812, 0xb13b0805,
	0x0aabac14, 0x12b1eb78, 0xb01251fb, 0x07ad04c1, 0x74e14e1a, 0xa1dbfe95, 0x00ffff7b, 0x0559fe86, 0x02ec0502, 0x00360026, 0x03070000, 0x0034018e,
	0x00ffff00, 0x0359fe6e, 0x827804d7, 0x85562017, 0x97002117, 0x00261784, 0xee0459fe, 0x1782d105, 0x17863720, 0x1784e820, 0x59fe3e26, 0x9e05fd02,
	0x57201782, 0x06231782, 0x83208e03, 0x00a42645, 0x074a0200, 0x351582cc, 0x0100004c, 0xfe8d0007, 0x00400187, 0x020a4012, 0x5e02020a, 0x117a080a,
	0xde102605, 0x00010034, 0x364182c4, 0x008dff05, 0xb5320003, 0x10091003, 0xffb80137, 0x111540f0, 0x82693715, 0x003a081d, 0x00031001, 0x40030280,
	0x03370c09, 0x2f2f0002, 0x2f18012b, 0x5e5fcd1a, 0x5d30315d, 0x03052b2b, 0x05021323, 0x736492af, 0x3401ccfe, 0xc800ffff, 0x39050000, 0x36020108,
	0x7982f001, 0x4300172f, 0x75019600, 0x01b60a00, 0x050a0b00, 0x05ef4e09, 0x0000b92a, 0x8c066604, 0x10023602, 0x2005c74c, 0x05c34b1e, 0x00292186,
	0xfe71fd02, 0xff8f0252, 0x329382ba, 0x40200007, 0x0603070f, 0x06400502, 0x02400180, 0x82020250, 0xcd5d2d85, 0xcd1ade1a, 0x2f332f01, 0x05303133,
	0x25065456, 0xe2fa8f02, 0x03831e05, 0xfe78be25, 0x82007898, 0x82af2047, 0xb0512047, 0x56512047, 0x47860798, 0x00033008, 0x0964fe73, 0x00f00580,
	0x00280014, 0x403c0030, 0x2d2d2e1f, 0x03031515, 0x32292930, 0x2f0d151f, 0x30322c2c, 0x0c2b052d, 0x0212341a, 0x43083424, 0x3f2305ee, 0x8211333f,
	0x2f012301, 0xa78211ed, 0xed2f3922, 0x8608ad84, 0x15121601, 0x06060214, 0x26262223, 0x12343502, 0x32333636, 0x2e341316, 0x0e222302, 0x1e141502,
	0x3e323302, 0x23010102, 0x01330113, 0x4e710401, 0xda9b5553, 0x9ada8786, 0xdb995154, 0x20d9898a, 0x598e6436, 0x35648f5a, 0x588f6437, 0x36648e59,
	0xbafd3c05, 0x73febbc8, 0x012901ca, 0x64260528, 0xbbb9dffe, 0x66c5dffe, 0x2001c667, 0x1f01b4ba, 0xfd696cc9, 0x9ae29061, 0xe19b5051, 0x9ae19291,
	0xe299504f, 0x18fa0602, 0x2f080760, 0x6a000300, 0x520864fe, 0x13007c04, 0x27001f00, 0x253ddd83, 0x1b142424, 0x20270000, 0x1b1a2920, 0x2323260a,
	0x05242729, 0x3f170c22, 0x3f1d040f, 0x21dd9c05, 0xc8820e14, 0xd8822e20, 0xc8823e20, 0x07021e22, 0x072c5618, 0x36323322, 0x0d3bd488, 0x6aac7942,
	0x417aac6b, 0x6aad7942, 0x4279ac6a, 0x81808fc2, 0x7f828e8f, 0x8a070590, 0x2e022acc, 0x5299da88, 0x88da9952, 0x2a078489, 0xd3d988db, 0xd8d3d9d3,
	0x8a0303d7, 0x3abf82be, 0x07e5ff73, 0x0068086c, 0x0064004a, 0x405d0070, 0x1a556330, 0x6f706d56, 0x82566f6b, 0x0a200801, 0x1e41152d, 0x6a6b0a15,
	0x6f6e196a, 0x3c52646f, 0x3c635b5b, 0x19326455, 0x020f3c34, 0x34232528, 0x3237d084, 0xed333f32, 0xed32d432, 0x11ed2f32, 0x11cd2f33, 0x01cd2f39,
	0x482fed2f, 0x102a0729, 0xed10cddd, 0x253031c4, 0xb941030e, 0x1517230c, 0x11822e23, 0x2507ba41, 0x33163337, 0xfe823e32, 0x2705cf41, 0x36352307,
	0x16323336, 0x0808f341, 0x13022ef9, 0x23042e22, 0x23070622, 0x3233033e, 0x3333041e, 0x0e140515, 0x36350702, 0x33352335, 0x4922ef03, 0x74416956,
	0x3f4e8cc3, 0x4e6dad76, 0x1e083e7d, 0x25403a39, 0x2848623a, 0x447c5f39, 0x930993bf, 0x5f7c44bf, 0x62482839, 0x3a40253a, 0x3e081e39, 0xad724e7d,
	0x8c4e3b75, 0x674174c3, 0x37d04a56, 0x363a4657, 0x33301f36, 0x2c068507, 0x32315644, 0x39343d4a, 0xfea12c42, 0x463019cc, 0xbf5f5d2e, 0x28351e77,
	0x01bf5d17, 0x01b6c422, 0x1269c71f, 0x2319df14, 0x964b0a16, 0xe29f98e3, 0xc4c44492, 0x9fe29244, 0x4b96e398, 0x1a231609, 0x691214df, 0xb6e1fec7,
	0xbfdefec4, 0x3528175d, 0x1e14fd06, 0x4b141e23, 0x45694641, 0x211e1323, 0xbe8f131e, 0x1f364729, 0x5b0c5602, 0x0003009a, 0x06e2ff72, 0x00f40611,
	0x006b0051, 0x405f0077, 0x1a5c6b31, 0x7677745d, 0x825d7672, 0x19260801, 0x052e1a42, 0x7172191a, 0x76753d71, 0x3c596b76, 0x3c6a6262, 0x0a6b6b5c,
	0x33143f3d, 0x47004c04, 0x000a293e, 0x8a41ed3f, 0x2f332205, 0x208b4133, 0x22116941, 0x4215021e, 0x27250681, 0x23030e23, 0x07894222, 0xa7411620,
	0x023e250e, 0x031e3337, 0x081c8b41, 0x4a66044b, 0x1e13335c, 0x1b2e4c36, 0x1728292c, 0x3d5a3007, 0x2d5d8f63, 0x6fa06732, 0x3c4b5932, 0x3a160616,
	0x6f335648, 0x363267a0, 0x3d578c63, 0x1707305a, 0x1b2c2928, 0x1e364c2e, 0x495d3313, 0x39425035, 0x391c111c, 0x38025142, 0x1e924156, 0x49832108,
	0x69509977, 0x07366b9e, 0xbc0c130d, 0x974f0f0b, 0xda8b8bda, 0x2a184f96, 0x39212139, 0x964f182a, 0x973a0f83, 0xbc0b0f4f, 0x070d130c, 0x699e6b36,
	0x49779950, 0x2d4e3b21, 0x213b4e2d, 0x95415f05, 0x0128081b, 0x1d05de00, 0x34061004, 0x1b001900, 0x0a190c40, 0x3c070b1a, 0x3c171010, 0x2f00000a,
	0x2f32ed32, 0xed2f01ed, 0x013031c4, 0x21109842, 0x4c426603, 0x22052117, 0x44087190, 0x73000200, 0x4c069dff, 0x4300f005, 0x56005100, 0x05442d40,
	0x3a154f0e, 0x0c3a1435, 0x3a471500, 0x24474724, 0x2e0e033a, 0x0c0c1c15, 0x3f344a0e, 0x3429333f, 0x34334421, 0x11330717, 0x000a1705, 0xedd4333f,
	0x218d8310, 0x91833912, 0x2f2f332f, 0x391712ed, 0x102f2f2f, 0x391211ed, 0x21058239, 0xa4823939, 0x020e1431, 0x32331607, 0x3337023e, 0x23060615,
	0x83272622, 0x45242005, 0x2428054a, 0x17163233, 0x26262315, 0x24094b45, 0x35032e37, 0x058b4434, 0x36360124, 0x1a863437, 0x05165d08, 0x634626da,
	0x196d613e, 0x1627272a, 0x365c330a, 0x365bc35b, 0xff9d3e74, 0x5f62b400, 0xa20001b2, 0x09336e3b, 0x713b6136, 0x45437eb4, 0x1f6fb47e, 0x2e41281e,
	0x9071441a, 0x72924c4c, 0x6d4efe46, 0x665f0176, 0x18314a33, 0x61ab0258, 0x2e7893ac, 0x0c080425, 0x080ab108, 0x11113531, 0x24097b45, 0x17bd0e0b,
	0x07794514, 0x2d037108, 0x5796826e, 0x3270b482, 0xfdaf672a, 0xa5f5429e, 0x4f2a9388, 0xe795456f, 0x00020000, 0x0491ff6a, 0x007c04db, 0x00410036,
	0x0332405d, 0x1b3c093f, 0x092a0f2d, 0x371b002d, 0x37371f2d, 0x0a032d1f, 0x08171b27, 0x3f39090a, 0x32013210, 0x3f242a32, 0x2a3f041c, 0x3f05123f,
	0x12030c0c, 0x333f000a, 0x10ed2f33, 0xed3f32ed, 0x5d2f3912, 0x2f2f01ed, 0x44410f82, 0x07062814, 0x36323316, 0x41153337, 0x28430841, 0x6126200b,
	0x16230512, 0x41262617, 0x4f08073b, 0x22233407, 0x16141506, 0x04363617, 0x3f5b6585, 0x1c44224b, 0x5e4c400a, 0x3b1d49ad, 0x8cc67b21, 0xc48a4b4b,
	0x2e653779, 0x39592f0a, 0x95a1b09f, 0x5836302c, 0x743d3d73, 0x7ec2365a, 0x33313e3f, 0xe3014f48, 0x1445d483, 0x0caa0a0a, 0x07062f2e, 0x0807d545,
	0xc10e0c4a, 0xd9d31b1e, 0x420bd6c9, 0x886267a7, 0x52262757, 0x62b75d84, 0x3a9a5861, 0x00009d2a, 0xff1b0002, 0x059506e5, 0x002f00ec, 0x4038003a,
	0x1507301d, 0x311b1b2b, 0x31201328, 0x1b051115, 0x302b3507, 0x340c0030, 0x34360a16, 0x3f232c82, 0x5ded3fed, 0x012705cd, 0x2fed332f, 0x823912ed,
	0x31322c06, 0x16320130, 0x15151216, 0x85031e21, 0x030e30f5, 0x26242223, 0x032e2702, 0x37363435, 0x84061533, 0x033e23da, 0xcb452101, 0x046b0805,
	0xacf39603, 0x09aafb5d, 0x6db88952, 0x0e64f792, 0x887d7336, 0xfbfe9e4c, 0x4b086fbe, 0x05335b7d, 0x0907be06, 0x650f564c, 0xcffee4a7, 0x470d7d03,
	0x60609a71, 0x0546719c, 0xfec764ec, 0x861fc8d4, 0x694588cb, 0x331ee35b, 0xb3591526, 0x03b10a01, 0x4f754e29, 0x0b1e391c, 0x401a3117, 0xf398054e,
	0x72fd5aaa, 0x417db372, 0x82b37d43, 0xff142ab6, 0x041f05e6, 0x002c007c, 0x3be38333, 0x251a0133, 0x2d191313, 0x212c0c1a, 0x0113191a, 0x3333253c,
	0x293d3007, 0x0f3f0704, 0x85057b47, 0x2f0122d7, 0x85de82ed, 0x24e382ef, 0x17161421, 0x07d64116, 0x20230629, 0x26032627, 0x89022e27, 0x178908e1,
	0x37361716, 0x12323336, 0x26262715, 0x07062223, 0xc9fc1f05, 0x8f34363e, 0x31e77256, 0x6dc65f0a, 0x999ceafe, 0x362f3603, 0x05042c4e, 0x21080599,
	0x701b4920, 0xf5e2f496, 0x969301b7, 0x020cb397, 0x3199671b, 0x2c5b3030, 0x963628cd, 0x030c0194, 0x603f100d, 0x192d1742, 0x14281309, 0x031e2036,
	0xfea179b7, 0x942af3f8, 0xff84b2a2, 0xfe1b00ff, 0x059506af, 0x032602ec, 0x0000009a, 0x01b20307, 0xff000005, 0xfe1400ff, 0x82ed83f4, 0x849b2017,
	0x00b32217, 0x291784ac, 0x0577fe73, 0x02f005f8, 0x094b0006, 0xfe6c2605, 0x04430464, 0x200f827c, 0x201f8454, 0x2244825c, 0x82d1058d, 0x843a200f,
	0x0056260f, 0x04360600, 0x200f825d, 0x0847825a, 0xb900012e, 0x1b05e6ff, 0x3a00f005, 0x23404200, 0x15301835, 0x0a0a181b, 0x25031b18, 0x00001514,
	0x2514243c, 0x18331735, 0x341e1118, 0x1125022b, 0x2705f447, 0x12ed3f2f, 0x39ed2f39, 0x2805a249, 0x391711ed, 0xed2f2f2f, 0x06674411, 0x2e222330,
	0x33352702, 0x3233031e, 0x26343536, 0x06853523, 0x020e2226, 0x11231115, 0x08065444, 0x0e1415aa, 0x1e150702, 0x481b0503, 0x1871b883, 0x22393430,
	0x36371f0d, 0x7f89223a, 0x97a0c9cf, 0x76489b8f, 0x49c62f56, 0x697fc88b, 0x1f4982b2, 0x48304f38, 0x012b5173, 0x70b583c0, 0x0b070332, 0x160fc907,
	0x8d9d070f, 0x729c8b8e, 0x1c74757d, 0xfb5f7b48, 0x771804f7, 0x2f3b75b1, 0x3b5f8d5e, 0x14394c61, 0x5c3f1309, 0xffff007b, 0x6d0486fb, 0x0b0850ff,
	0x0d000700, 0xf701dffa, 0x73000200, 0x5d05e5ff, 0x1a00ec05, 0x29002f00, 0x12151540, 0x2014142a, 0x12150715, 0x11341b03, 0x3425020c, 0x000a0016,
	0x3fed323f, 0x2f3fed33, 0x2f3be582, 0x313232ed, 0x2e220530, 0x12343504, 0x32332436, 0x3517021e, 0x35231133, 0x8303030e, 0x067e4ad7, 0x1137cd08,
	0xfc02032e, 0x7890a456, 0xae583057, 0x40ad0501, 0x224b5768, 0x5931c6c6, 0x77146d5f, 0x4d417db7, 0x4563b084, 0x294a5466, 0x62544c29, 0x7d552b1b,
	0xa979cca6, 0x7bd72401, 0x1a2d2112, 0x662ffa5f, 0x0e1f3123, 0xa2595e05, 0xdd9289e2, 0x1f114a94, 0xce031a2c, 0x101c291a, 0x3d000100, 0x54050000,
	0x16007804, 0x10402300, 0x08111100, 0x08091415, 0x540e1316, 0x05140405, 0xed3f3f00, 0x2f01332f, 0x12332f33, 0x31331139, 0x033e0130, 0x17163233,
	0x23032e23, 0x01070622, 0x01330123, 0x3e1e3a03, 0x72355749, 0x029b0671, 0x151d1209, 0xfe2a422c, 0x3ffebde9, 0x035a01cc, 0x4d77533d, 0x127d7b24,
	0x6e0e1821, 0x0407fd72, 0x0087fc5d, 0x34087382, 0x0800005c, 0x00eb059b, 0x404e001a, 0x110f0027, 0x18191a10, 0x17131412, 0x17121a0f, 0x0f1a1217,
	0x08091504, 0x15161c08, 0x03151218, 0x111a1417, 0x0205540c, 0x24898300, 0x333f332f, 0x208e8233, 0x22908311, 0x822f3917, 0x33112200, 0x89028733,
	0x0550439e, 0xa1849e82, 0x3c08a482, 0x30128b06, 0x6c3e5d45, 0x02a0077b, 0x352f2b24, 0xdcc2fe14, 0xcefedafe, 0xcb76feda, 0x34013901, 0x042d01c9,
	0x496b46cc, 0x2b8a7c25, 0xfb4b543c, 0xfbd40453, 0xfbd1052c, 0xfbd6042a, 0x28b1821e, 0x07000056, 0x00780428, 0x08b1831c, 0x011c0b29, 0x08090a00,
	0x07030402, 0x07020a1c, 0x1c0a0207, 0x13140504, 0x05061e13, 0x04105217, 0x05050208, 0x010a0407, 0x84332f00, 0xed3f21af, 0x2122b19a, 0xa3830323,
	0x33011324, 0x5b411313, 0x052f4706, 0x04073c08, 0xfef7adea, 0xdafeade3, 0x1701cdc4, 0x13a5f89b, 0x42593c29, 0x96047566, 0x19252502, 0x0d171d23,
	0xa3fc5d03, 0x9ffc5d04, 0x9bfc6103, 0x73414402, 0x82763256, 0x381f2f34, 0x82002d4b, 0xab3a08b1, 0xe7023503, 0x0900d105, 0x00b40e00, 0x03060101,
	0x01cd3f00, 0x3031cd2f, 0x07112301, 0x01330127, 0x18022707, 0x0106c99e, 0x1c01041c, 0x3503c906, 0x08304101, 0x7dfe8301, 0x3d8e3008, 0x03080923,
	0x213d8908, 0xaf821737, 0x17373e08, 0x18023311, 0xe4fe06c9, 0x06e4fe04, 0x90049ec9, 0x7dfe0830, 0x30088301, 0x02004101, 0xac03b200, 0xb2066e01,
	0x07000300, 0x00b71500, 0x01050304, 0x00030507, 0xceddd62f, 0xcd332f01, 0x37848232, 0x13032303, 0x01333523, 0x1c861a6e, 0x06ababb4, 0x010afeb2,
	0xb1fafcf6, 0x07233d90, 0x82020403, 0x0002233e, 0x3d89c42f, 0x26083982, 0x13331303, 0xabab6601, 0x1a861cb4, 0xfcb10106, 0xfef601fa, 0x00ffff0a,
	0x019401b2, 0x029a046e, 0x00ab0307, 0x82e8fd00, 0xfe4c37fa, 0xffca0359, 0x0006008d, 0x0400b40f, 0x00058004, 0x01cd1a2f, 0x8582c42f, 0x27232208,
	0x33132307, 0x9fa2ca03, 0xe3ce9e9f, 0xb9b959fe, 0xffff3401, 0x00005a01, 0x5d044902, 0x1d000602, 0x270a8200, 0x6a01c800, 0xae037a03, 0x1e2fcf84,
	0x07000e40, 0x54050601, 0x54010606, 0x8201020f, 0xed5d2298, 0x05234933, 0x56653320, 0x7a032509, 0xb2024efd, 0x032f0383, 0xbcfda00e, 0x000100a0,
	0x013d03a4, 0x82140682, 0xb50f2d45, 0x02032c00, 0x3f000103, 0xed2f01cd, 0x2a050d41, 0x72368201, 0xfd140636, 0x82d70229, 0x03a422c5, 0x822b83d1,
	0x820a2081, 0x02012681, 0x03affea4, 0x2909825f, 0xb5110003, 0x02034000, 0xc4850380, 0x31cd1a36, 0x23112130, 0xbb5f0311, 0x5101affe, 0x36020100,
	0xe402f4fe, 0x0230299a, 0xf4feaee4, 0x03000c01, 0x1efe7900, 0x0206f306, 0x202f0982, 0x44002400, 0x1a002040, 0x0a191901, 0x820a0412, 0x24222d01,
	0x010fef22, 0x0712070f, 0x07020119, 0x21330182, 0x2f002123, 0x3939122f, 0xd6102f2f, 0x103911cd, 0x87015dc6, 0x11c63f0f, 0xc6332f39, 0x25303132,
	0x01331523, 0x22232634, 0x33150706, 0x32333636, 0x06141516, 0x0d830607, 0x36357c08, 0x36363736, 0xeb030309, 0x3c01a3a3, 0xac4dacc7, 0x9a2d0838,
	0x337b6057, 0x3479262f, 0x2c75428f, 0x8ffe382e, 0x3d03c3fc, 0xa9263d03, 0xa7898f03, 0x1ca31622, 0x455b5836, 0x46242a58, 0x26b4f41e, 0x7b2f2d50,
	0xf20360fb, 0x0efcf203, 0x00020000, 0x04000036, 0x00d105e0, 0x000b0007, 0x052f404a, 0x0b060620, 0x03100300, 0x03900380, 0x030503a0, 0x0d0f0d03,
	0x08020d1f, 0x821f000f, 0x0004302d, 0x10010049, 0x01010201, 0x09490806, 0x46000603, 0x5d3a056d, 0x2f0132ed, 0x115d325d, 0x335d2f33, 0x31ed2f39,
	0x21351330, 0x23112115, 0x07820111, 0xaa043636, 0xfec00bfe, 0x04aa040b, 0xfba5a501, 0x010104ff, 0x00a5a52b, 0x01340083, 0x920c0000, 0x16020100,
	0x0900000c, 0x04008400, 0x9cffb400, 0xb6200582, 0x0a220582, 0x05842400, 0x05829020, 0x17820f20, 0x0f002e28, 0x2effb600, 0x17821000, 0x0582ce20,
	0xe2ff2c22, 0x2d200582, 0x10241d82, 0xecff3600, 0x37220b82, 0x05826aff, 0x83ff3921, 0x843a201d, 0xff3b2205, 0x221182b0, 0x8274ff3c, 0x843d2005,
	0x8444202f, 0xff592229, 0x201182d8, 0x200b845a, 0x2029845b, 0x2011845c, 0x2005845d, 0x20118490, 0x2a1d82a0, 0xff0f0011, 0x0011007e, 0x8260ff10,
	0xffb12205, 0x20058288, 0x200584b2, 0x208982b4, 0x228f8411, 0x82b2001d, 0x8224205f, 0x00ce2223, 0x20898224, 0x200582f6, 0x23238237, 0xff380024,
	0x39220b83, 0x1182c4ff, 0x24228f83, 0x8f823c00, 0x57002422, 0x24225982, 0x1d845800, 0x6b825920, 0x5a002422, 0x24229b82, 0x0b845c00, 0x0584b120,
	0x0584b220, 0x0584b320, 0x4d84b420, 0x0b84b520, 0x0b82b620, 0x95822520, 0x2500ec22, 0x0a20c182, 0x11200582, 0x25224d82, 0x65823700, 0xab002522,
	0xb1210b84, 0x20178300, 0x200582b2, 0x27958426, 0xffaf0026, 0x002600e7, 0x26205983, 0xce22ad82, 0x41822700, 0x11200583, 0x27205382, 0x0b833b82,
	0x3b823a20, 0x3b002722, 0x27209582, 0xec20a782, 0x3d202382, 0xab201184, 0x29282382, 0xd4fe0f00, 0x11002900, 0x1d200584, 0x29226b82, 0x05841e00,
	0x3c002228, 0x24002900, 0x05829cff, 0x1e003722, 0x44200582, 0x48200b84, 0x52203584, 0x90220584, 0x178292ff, 0x1784a020, 0x1184a120, 0x4784ab20,
	0x0b82b020, 0xa1822c20, 0x2c00e222, 0x05839b82, 0xe2ffb224, 0xdd842d00, 0x83002d21, 0x822d20d7, 0x82f62059, 0x82902011, 0x842d2095, 0x002e22dd,
	0x224d8210, 0x8232002e, 0x002e229b, 0x28838244, 0xff48002e, 0x002e00ba, 0x20058452, 0x24538258, 0xff59002e, 0x201182b0, 0x2011845a, 0x200b845c,
	0x202f8491, 0x202f84a0, 0x201784a1, 0x201184af, 0x200b84b0, 0x205384b1, 0x260582b2, 0xff0a002f, 0x822f0088, 0x82602065, 0x82262005, 0x002f2223,
	0x2205842a, 0x8264002d, 0x24778311, 0xff37002f, 0x200b8256, 0x202f8439, 0x23d7823a, 0xff3c002f, 0x59202f83, 0x5c201184, 0x64200584, 0x77833584,
	0x83002f21, 0x822f206b, 0x202383e3, 0x202984b2, 0x200584b4, 0x200582b6, 0x22ef8232, 0x823200e2, 0x200583ef, 0x22bf8237, 0x823b0032, 0x823220ef,
	0x82ec2053, 0x823d2017, 0x82322047, 0x00e226fb, 0xfe0f0033, 0x200582d4, 0x20058411, 0x24298224, 0x003c0033, 0x20118214, 0x200b8444, 0x20058448,
	0x20058452, 0x22d78290, 0x84a00033, 0x84a1200b, 0x84ab2005, 0x82b02035, 0x8434200b, 0x84342071, 0x84342071, 0x82352059, 0x009c22ef, 0x20d78235,
	0x200582c4, 0x2471823c, 0xff440035, 0x830b82d8, 0x00352153, 0x35225383, 0x17845800, 0xc9ff5c22, 0x59831782, 0x83003521, 0x00352359, 0x3583ffb0,
	0x83ffb121, 0x84b22041, 0x82b42005, 0x0035227d, 0x200582b6, 0x226b8236, 0x823600ec, 0x2005836b, 0x24418224, 0xff360036, 0x221182ea, 0x82e2ff59,
	0x845a2005, 0x845c2011, 0x8490200b, 0x82ab200b, 0x82372005, 0x00de22e9, 0x20958237, 0x2105826a, 0x0b83fe11, 0x38ff1d22, 0x1e200b82, 0x22200584,
	0x3724f782, 0x88ff2400, 0x26201182, 0x3722a782, 0x05842a00, 0xdd823220, 0x5f823720, 0x1782f420, 0x7d823720, 0xc5823720, 0x0b821020, 0x24ff4622,
	0x48200582, 0x4a220584, 0x0b822eff, 0x0b845220, 0x4d845520, 0x4cff5622, 0x58201182, 0x59200b84, 0x5a200584, 0x5c200584, 0x5d220584, 0x1d8256ff,
	0x5f846420, 0x7eff9022, 0x91200b82, 0xa0216584, 0x205983ff, 0x204784a1, 0x20a184ab, 0x201784af, 0x211184b0, 0xb983ffb1, 0x0582b220, 0x0f003822,
	0x3822d182, 0x05841100, 0xf6ff2425, 0x83003800, 0x003821e9, 0x3920e983, 0x3920e984, 0xce23e982, 0x83003900, 0x003924e9, 0x82b0ff1d, 0x841e200b,
	0xff242205, 0x220b82c4, 0x829cff44, 0x84482005, 0x84522005, 0x84582005, 0xff5c2217, 0x201782bf, 0x22e98290, 0x84a00039, 0x84a12017, 0x228f8305,
	0x84b00039, 0x82b1200b, 0x00392295, 0x200582b2, 0x206b843a, 0x206b843a, 0x228f823a, 0x843a0024, 0x003a216b, 0x3a226b83, 0x23842400, 0x3a216b83,
	0x216b8300, 0x6b83003a, 0x55003a24, 0x2982c4ff, 0x3a227183, 0x71825c00, 0x90003a22, 0x71831184, 0x83003a21, 0x823a2071, 0x204d83cb, 0x217182b0,
	0x7183003a, 0x71843a20, 0x6b823b20, 0x3b00b024, 0xf5822600, 0x2a003b22, 0x32200584, 0x44200584, 0x3b206b82, 0xc4206582, 0x52201d82, 0x3b244d82,
	0xe2ff5800, 0x5c200b82, 0x3b22f582, 0x23846400, 0x05849120, 0x2984a020, 0x2384a120, 0x1184af20, 0x0b84b020, 0x2984b120, 0x0582b220, 0xd7843c20,
	0x6b823c20, 0x3c007426, 0xdefe1100, 0x1d220582, 0x058238ff, 0x05841e20, 0x23842420, 0xecff3222, 0x44211182, 0x222383ff, 0x8288ff47, 0xff48220b,
	0x2005827e, 0x2005844a, 0x22b98250, 0x8451003c, 0x84522005, 0x84532011, 0x8454200b, 0x8455200b, 0xff56220b, 0x202f8292, 0x20058458, 0x20118459,
	0x20598490, 0x20598491, 0x205984a0, 0x202f84a1, 0x208384ab, 0x201784af, 0x201184b0, 0x201d84b1, 0x200582b2, 0x24a7823d, 0x003d00c4, 0x221d8226,
	0x842a003d, 0x229b8305, 0x823d003d, 0x003d22dd, 0x22ef8244, 0x8248003d, 0x003d22e3, 0x22058452, 0x82d8ff5a, 0xff5c222f, 0x200582bf, 0x832f8464,
	0x003d2271, 0x202984a0, 0x832384a1, 0x003d226b, 0x200b84b0, 0x201784b1, 0x2a0582b2, 0xff590044, 0x004400f0, 0x82f6ff5a, 0x825c2005, 0x0045280b,
	0x00e2ff0f, 0x82110045, 0x00452447, 0x82fbff5c, 0x82ab200b, 0x8246200b, 0x00ec2495, 0x82370046, 0x00462241, 0x201184b1, 0x200582b2, 0x24118248,
	0x00490074, 0x22f98205, 0x840a0049, 0x000c2205, 0x22118264, 0x8232000d, 0x820f2005, 0x824920dd, 0x82ce203b, 0xff11220b, 0x22058288, 0x826e0022,
	0x843f2005, 0x84402023, 0x825c2005, 0x0049227d, 0x200b8460, 0x832384ab, 0x004921a1, 0x4922a183, 0x4784b400, 0x0582b620, 0xad824b20, 0x4b00ec22,
	0x4b20ad84, 0xec229b82, 0x59824e00, 0x05829c20, 0x83ff4821, 0x8452200b, 0x84a12005, 0x84b02005, 0xffb12105, 0xb2201d83, 0x50200582, 0x50203b84,
	0x50203b84, 0x51203b84, 0x51201184, 0x51201184, 0x52201184, 0x5220fb84, 0x5220fb84, 0xf1241d82, 0x5b005200, 0x52204782, 0x0b831d82, 0x0b82ab20,
	0x23845320, 0x23845320, 0x17825320, 0x5300fb23, 0x26178300, 0xfe0f0055, 0x825500de, 0x82ec208f, 0x84112005, 0xff44220b, 0x220b82dc, 0x82d8ffa0,
	0x84ab2005, 0x82b12011, 0x82552041, 0x222383d7, 0x821e00b4, 0x82b62017, 0x82572005, 0x00d82235, 0x204d8257, 0x200582f6, 0x202f82b1, 0x83238257,
	0x00b42211, 0x20118214, 0x200582b6, 0x22778259, 0x8459004c, 0x82592029, 0x200b837d, 0x24298244, 0xff480059, 0x201782ee, 0x20058452, 0x201184a0,
	0x210b84a1, 0x2383ffab, 0xf1ffb022, 0x53831d82, 0x53845920, 0x47825a20, 0x5a00ba22, 0x5a20a784, 0x0b834782, 0x95824420, 0xa0005a22, 0xab210584,
	0x831183ff, 0x845a20a7, 0x825b20a7, 0x00ce2429, 0x8246005b, 0x005b241d, 0x82f6ff47, 0xff48220b, 0x200582e8, 0x200b844a, 0x200b8452, 0x201d846f,
	0x200b84a1, 0x210b84b0, 0x3583ffb1, 0x0582b220, 0x71825c20, 0x5c004222, 0x5c20b984, 0x0b837182, 0x5c20b983, 0xee205382, 0x47201782, 0x5c204782,
	0x5c21c584, 0x21538300, 0xcb83005c, 0x54005c22, 0x6f201784, 0x5c20cb82, 0xd8209b82, 0xd7832982, 0x83005c21, 0x005c21d7, 0x5c21d783, 0x20d78300,
	0x20d7845c, 0x20d1845d, 0x2253825d, 0x845d00f6, 0x825d20a7, 0x82f42053, 0x824a200b, 0x825d2047, 0x830b8353, 0x005d2253, 0x2111846f, 0x1183ffa1,
	0x5d20e983, 0x6420e984, 0x6426e984, 0xe7ffaf00, 0x59826400, 0x0582ce20, 0x6f20bf83, 0x6f205984, 0xec221182, 0x29846f00, 0xd1829120, 0x9100e222,
	0x0583cb82, 0xe3823720, 0x3b009122, 0x91225382, 0xfb823c00, 0x3d009122, 0xab240584, 0xa100e2ff, 0xa1202984, 0xec202982, 0x59220b82, 0x0582f1ff,
	0x1d825b20, 0x5c00a122, 0xab200b84, 0xab280b82, 0x2effb400, 0xb600ab00, 0xb1220582, 0x4d822400, 0x2c00b122, 0xb1283b82, 0x9cff2d00, 0x3600b100,
	0xb1242382, 0x6aff3700, 0x39200b82, 0x3a201d84, 0x3b220584, 0x1182b0ff, 0x74ff3c22, 0x3d200582, 0xb1227d82, 0x29844400, 0xd8ff5922, 0x5a201182,
	0x5b200b84, 0x5c202984, 0x5d201184, 0x90200584, 0xa0201184, 0xb2201d82, 0xb2206b84, 0xb2206b84, 0xb2206b84, 0xb2206b84, 0xb2216b84, 0x216b8300,
	0x6b8300b2, 0xdd82b220, 0xb200b022, 0x7420dd82, 0x6b830582, 0x6b84b220, 0x8300b221, 0x00b2216b, 0xb2216b83, 0x206b8300, 0x20d782b2, 0x832382d8,
	0x00b2216b, 0xb2216b83, 0x206b8300, 0x226b82b3, 0x82b3009c, 0x009c2411, 0x820f00b4, 0x00b422e9, 0x20058411, 0x24e38224, 0x003700b4, 0x2217826e,
	0x82640039, 0x003a2205, 0x2005823c, 0x2211843c, 0x82baff56, 0x0057220b, 0x20058228, 0x20298490, 0x203582ab, 0x204d84b5, 0x204d84b5, 0x204d84b6,
	0x204d84b6, 0x201784b6, 0x214d84b6, 0x4d8300b6, 0x8300b621, 0x82b6204d, 0x006e2351, 0x4d8300b6, 0x8300b621, 0x86b6204d, 0x204d833b, 0x22ef82c3,
	0x82c3002e, 0x200583ef, 0x2265823a, 0x823c00c3, 0x84c42065, 0x84c42017, 0x00c42117, 0xc4201783, 0x00201784, 0x2e240082, 0x01002e02, 0x02830782,
	0x04823220, 0x01240b85, 0x32000700, 0x02201786, 0x39200b82, 0x03200b86, 0x40201582, 0x04200b86, 0x0524238a, 0x5a000c00, 0x06201786, 0x0724178a,
	0x72003b00, 0x09241786, 0xad000e00, 0x0d240b86, 0xbb004c01, 0x0e300b86, 0x07022a00, 0x01000300, 0x02000304, 0x31020c00, 0x05200b84, 0x10220b82,
	0x0b843d02, 0x17840620, 0x0b844d20, 0x17840720, 0x0b845920, 0x0b840820, 0x0b846920, 0xbb820920, 0x79026422, 0x01240b86, 0xdd020e00, 0x02200b86,
	0xeb200b82, 0x03240b86, 0xf9026400, 0x04200b86, 0x0524238a, 0x2d031800, 0x06201786, 0x0724178a, 0x5d037600, 0x09241786, 0xd3031c00, 0x0d240b86,
	0xef039802, 0x0e240b86, 0x87065400, 0x0a200b84, 0x0b20bf8a, 0x10220b82, 0x1784db06, 0x178a0c20, 0x0b830e20, 0x8f850620, 0x0b821020, 0xf7060e22,
	0x13202384, 0x12220b82, 0x0b840507, 0x2f8a1420, 0x0b821520, 0x17071022, 0x16201784, 0x1920178a, 0x0e220b82, 0x17842707, 0x23841b20, 0x0b843520,
	0x238a1d20, 0x0b8a1f20, 0x2f842420, 0x23844520, 0x0b842d20, 0x0b835320, 0xb38a0820, 0x5f8a0820, 0x178a0c20, 0x850c0c21, 0xa93f0847, 0x31303220,
	0x694d2030, 0x736f7263, 0x2074666f, 0x70726f43, 0x7461726f, 0x2e6e6f69, 0x6c6c4120, 0x67695220, 0x20737468, 0x65736552, 0x64657672, 0x7265562e,
	0x616e6164, 0x75676552, 0x8872616c, 0x863a2038, 0x84288217, 0x200f8318, 0x26448273, 0x302e3520, 0x88282033, 0x87292027, 0x73693427, 0x74206120,
	0x65646172, 0x6b72616d, 0x20666f20, 0x8a656874, 0x72672488, 0x8370756f, 0x6f632c16, 0x6e61706d, 0x2e736569, 0x8274614d, 0x20773223, 0x74726143,
	0x6f597265, 0x616d2075, 0x73752079, 0x823a8265, 0x6f66334e, 0x6120746e, 0x65702073, 0x74696d72, 0x20646574, 0x54847962, 0x4c554527, 0x6f662041,
	0x2f0c8472, 0x646f7270, 0x20746375, 0x77206e69, 0x68636968, 0x43823b8a, 0x636e6925, 0x8264756c, 0x6f74273a, 0x73696420, 0x60826c70, 0x646e6126,
	0x69727020, 0x63205c82, 0x65246182, 0x202e746e, 0x6f2b7b87, 0x20796c6e, 0x20296928, 0x83626d65, 0x87682034, 0x865d8286, 0x8491942c, 0x6964302e,
	0x7220676e, 0x72747365, 0x69746369, 0x82736e6f, 0x827d8693, 0x8774203e, 0x203b214b, 0x28218083, 0x28658269, 0x706d6574, 0x7261726f, 0x27758269,
	0x6e776f64, 0x64616f6c, 0xb382bf8a, 0xa9856120, 0x20726522, 0x6f22ee82, 0x08836874, 0x7074752c, 0x64207475, 0x63697665, 0x23822065, 0x6c656823,
	0x2bd08e70, 0x70747468, 0x772f2f3a, 0x6d2e7777, 0x30070a42, 0x6d6f632e, 0x7079742f, 0x6172676f, 0x2f796870, 0x2dfc8266, 0x4e002f73, 0x72006f00,
	0x61006d00, 0x09826c00, 0x7900622c, 0x65000d01, 0x6e006a00, 0x0382e900, 0x53221b89, 0x23827400, 0x64006e22, 0x722a0582, 0x9a036400, 0xbd03b103,
	0x0382bf03, 0xba03b92e, 0xa900ac03, 0x32002000, 0x31003000, 0x20260382, 0x69004d00, 0x57826300, 0x73006f22, 0x66205582, 0x20223b82, 0x69844300,
	0x05847020, 0x11826120, 0x09826920, 0x2e006e22, 0x41203782, 0x6c207b82, 0x52200782, 0x67223582, 0x1b826800, 0x0d847320, 0x3d826520, 0x45826520,
	0x91827620, 0x29826420, 0x07825620, 0x87847b82, 0x52006122, 0x67220d82, 0x3b827500, 0x23826120, 0x3a217191, 0x202f8d00, 0x87318e20, 0x8273201f,
	0x826f2075, 0x002022eb, 0x22638235, 0x82330030, 0x9228207b, 0x902920c1, 0x8269204f, 0x8220209f, 0x8220208d, 0x827220b1, 0x82642007, 0x826d2091,
	0x00722207, 0x2243826b, 0x8266006f, 0x82742005, 0x826520cf, 0x229f9107, 0x82670020, 0x826f20b7, 0x887020c1, 0x0063262d, 0x006d006f, 0x20438270,
	0x8395826e, 0x822e20ff, 0x82612089, 0x2047855f, 0x20298277, 0x20618443, 0x226b8274, 0x82590072, 0x8275202f, 0x826d2013, 0x82792013, 0x82752007,
	0x836d8391, 0x209d852d, 0x20218266, 0x833f826e, 0x827320a7, 0x84702021, 0x826d2037, 0x8274205d, 0x00652215, 0x21138264, 0x3b830062, 0x20286185,
	0x55004500, 0x41004c00, 0x3b831782, 0xc38a7220, 0xaf847020, 0x75006424, 0x51846300, 0x6e006922, 0x77201d82, 0x6920e182, 0x68201182, 0x778f2986,
	0x2b830f85, 0x6c006322, 0x64203b82, 0x75838182, 0x99827420, 0x7f822020, 0x70201f83, 0x61201982, 0x61208584, 0x1d835382, 0x6b827020, 0x74203383,
	0x63205582, 0x6520c386, 0x74221b82, 0x11822e00, 0x6f20f78f, 0x6c201982, 0x28203f84, 0x2920d982, 0x65242182, 0x62006d00, 0x68206988, 0xfd831582,
	0x85090d41, 0x41598dbb, 0x5d892923, 0x59826420, 0x67006e22, 0x72207182, 0x73226d82, 0xb7847400, 0xdf426320, 0x91758308, 0x417d85fb, 0x3b2011a5,
	0x01414782, 0x21c98307, 0xcb830069, 0x59827420, 0x43006d21, 0x72230739, 0x85006900, 0x006424eb, 0x8477006f, 0x006f23f9, 0x53410061, 0x41e99105,
	0x61200567, 0x53415982, 0x82652009, 0x822020a5, 0x8272203d, 0x826f2015, 0x826820ab, 0x200b8561, 0x210d8275, 0x05830070, 0x51822020, 0x76006522,
	0x63206d82, 0x20201d82, 0x6f201782, 0x29832d82, 0x70006c22, 0x20214d8c, 0x0d474100, 0x68002e22, 0x74202d82, 0x3a222582, 0x01822f00, 0x83007721,
	0x002e2201, 0x1015446d, 0x39842e20, 0x23826d20, 0x79007422, 0x6720e184, 0x61209982, 0x68200982, 0x2f210f82, 0x07af4100, 0x21827320, 0x2009a944,
	0x20ff8261, 0x08b94469, 0x0d82e120, 0x6c201b89, 0xab44ab82, 0x8261200b, 0x4464204f, 0x6e2c0ce5, 0x1e047900, 0x4b043104, 0x3d044704, 0x39200582,
	0x6e20498c, 0x4e223f82, 0xf7826100, 0xff826120, 0x6f006e24, 0x41824100, 0x75007224, 0xd3826e00, 0x00006124, 0x00840002, 0x004cff23, 0x8e088478,
	0xb7032104, 0x01201082, 0x7a082582, 0x00040003, 0x00060005, 0x00080007, 0x000a0009, 0x000c000b, 0x000e000d, 0x0010000f, 0x00120011, 0x00140013,
	0x00160015, 0x00180017, 0x001a0019, 0x001c001b, 0x001e001d, 0x0020001f, 0x00220021, 0x00240023, 0x00260025, 0x00280027, 0x002a0029, 0x002c002b,
	0x002e002d, 0x0030002f, 0x00320031, 0x00340033, 0x00360035, 0x00380037, 0x003a0039, 0x003c003b, 0x003e003d, 0x8240003f, 0x004236b2, 0x00440043,
	0x00460045, 0x00480047, 0x004a0049, 0x004c004b, 0x08ea824d, 0x50004f22, 0x52005100, 0x54005300, 0x56005500, 0x58005700, 0x5a005900, 0x5c005b00,
	0x5e005d00, 0x60005f00, 0x6222fe82, 0xfe826300, 0x0065ae0e, 0x00670066, 0x00690068, 0x006b006a, 0x006d006c, 0x006f006e, 0x00710070, 0x00730072,
	0x00750074, 0x00770076, 0x00790078, 0x007b007a, 0x007d007c, 0x007f007e, 0x00810080, 0x00830082, 0x00850084, 0x00870086, 0x00890088, 0x008b008a,
	0x008d008c, 0x008f008e, 0x00910090, 0x00930092, 0x00950094, 0x00020196, 0x00990098, 0x0003019a, 0x009d009c, 0x0004019e, 0x00a100a0, 0x00a300a2,
	0x00a500a4, 0x01a700a6, 0x00a90005, 0x00ab00aa, 0x00ae00ad, 0x00b000af, 0x00b200b1, 0x00b400b3, 0x00b600b5, 0x00b800b7, 0x00ba00b9, 0x01bc00bb,
	0x00be0006, 0x010701bf, 0x01c20008, 0x00c40009, 0x00c600c5, 0x00c800c7, 0x00ca00c9, 0x00cc00cb, 0x00ce00cd, 0x00d000cf, 0x00d300d1, 0x00d500d4,
	0x00d700d6, 0x01d900d8, 0x00db000a, 0x00dd00dc, 0x00df00de, 0x00e100e0, 0x00e300e2, 0x00e500e4, 0x00e700e6, 0x00e900e8, 0x00eb00ea, 0x00ed00ec,
	0x00ef00ee, 0x010b01f0, 0x000d010c, 0x00f500f4, 0x00f700f6, 0x00f900f8, 0x00fb00fa, 0x00fd00fc, 0x01ff00fe, 0x00010100, 0x01c300da, 0x010f010e,
	0x01110110, 0x01130112, 0x01150114, 0x01170116, 0x01190118, 0x011b011a, 0x011d011c, 0x011f011e, 0x01210120, 0x01230122, 0x01250124, 0x01270126,
	0x01290128, 0x012b012a, 0x012d012c, 0x012f012e, 0x01310130, 0x01330132, 0x01350134, 0x01370136, 0x01390138, 0x013b013a, 0x013d013c, 0x013f013e,
	0x01410140, 0x01430142, 0x01450144, 0x01470146, 0x01490148, 0x014b014a, 0x014d014c, 0x014f014e, 0x01510150, 0x01530152, 0x01550154, 0x01570156,
	0x01590158, 0x015b015a, 0x015d015c, 0x015f015e, 0x01610160, 0x01630162, 0x01650164, 0x01670166, 0x01690168, 0x016b016a, 0x016d016c, 0x016f016e,
	0x01710170, 0x01730172, 0x01750174, 0x01770176, 0x01790178, 0x017b017a, 0x017d017c, 0x017f017e, 0x01810180, 0x01830182, 0x01850184, 0x01870186,
	0x01890188, 0x018b018a, 0x018d018c, 0x018f018e, 0x01910190, 0x01930192, 0x01950194, 0x01970196, 0x01990198, 0x019b019a, 0x019d019c, 0x019f019e,
	0x01a101a0, 0x01a301a2, 0x01a501a4, 0x01a701a6, 0x01a901a8, 0x01ab01aa, 0x01ad01ac, 0x01af01ae, 0x01b101b0, 0x01b301b2, 0x01a800b4, 0x01b601b5,
	0x01b801b7, 0x01ba01b9, 0x01bc01bb, 0x01be01bd, 0x01c001bf, 0x01c201c1, 0x01c401c3, 0x019f00c5, 0x01c701c6, 0x01c901c8, 0x01cb01ca, 0x01cd01cc,
	0x01cf01ce, 0x01d101d0, 0x01d301d2, 0x019700d4, 0x01d601d5, 0x01d801d7, 0x01da01d9, 0x01dc01db, 0x01de01dd, 0x01e001df, 0x01e201e1, 0x01e401e3,
	0x01e601e5, 0x01e801e7, 0x01ea01e9, 0x01ec01eb, 0x01ee01ed, 0x01f001ef, 0x01f201f1, 0x01f401f3, 0x01f601f5, 0x01f801f7, 0x01fa01f9, 0x01fc01fb,
	0x01fe01fd, 0x020002ff, 0x02020201, 0x02040203, 0x02060205, 0x02080207, 0x020a0209, 0x020c020b, 0x020e020d, 0x0210020f, 0x02120211, 0x02140213,
	0x02160215, 0x02180217, 0x021a0219, 0x021c021b, 0x021e021d, 0x0220021f, 0x02220221, 0x02240223, 0x02260225, 0x02280227, 0x022a0229, 0x022c022b,
	0x022e022d, 0x0230022f, 0x02320231, 0x02340233, 0x02360235, 0x02380237, 0x023a0239, 0x023c023b, 0x023e023d, 0x0240023f, 0x00420241, 0x0243029b,
	0x02450244, 0x02470246, 0x02490248, 0x024b024a, 0x024d024c, 0x024f024e, 0x02510250, 0x02530252, 0x02550254, 0x02570256, 0x02590258, 0x025b025a,
	0x025d025c, 0x025f025e, 0x02610260, 0x02630262, 0x02650264, 0x02670266, 0x02690268, 0x026b026a, 0x026d026c, 0x026f026e, 0x02710270, 0x02730272,
	0x02750274, 0x02770276, 0x02790278, 0x027b027a, 0x027d027c, 0x027f027e, 0x02810280, 0x02830282, 0x02850284, 0x02870286, 0x02890288, 0x028b028a,
	0x028d028c, 0x028f028e, 0x02910290, 0x02930292, 0x02950294, 0x02970296, 0x02990298, 0x029b029a, 0x029d029c, 0x029f029e, 0x02a102a0, 0x02a302a2,
	0x02a502a4, 0x02a702a6, 0x02a902a8, 0x02ab02aa, 0x02ad02ac, 0x02af02ae, 0x02b102b0, 0x02b302b2, 0x02b502b4, 0x02b702b6, 0x02b902b8, 0x02bb02ba,
	0x02bd02bc, 0x02bf02be, 0x02c102c0, 0x02c302c2, 0x02c502c4, 0x02c702c6, 0x02c902c8, 0x02cb02ca, 0x02cd02cc, 0x02cf02ce, 0x02d102d0, 0x02d302d2,
	0x02d502d4, 0x02d702d6, 0x02d902d8, 0x02db02da, 0x02dd02dc, 0x02df02de, 0x02e102e0, 0x02e302e2, 0x02e502e4, 0x02e702e6, 0x02e902e8, 0x02eb02ea,
	0x02ed02ec, 0x02ef02ee, 0x02f102f0, 0x02f302f2, 0x02f502f4, 0x02f702f6, 0x02f902f8, 0x02fb02fa, 0x02fd02fc, 0x03ff02fe, 0x03010300, 0x03030302,
	0x03050304, 0x03070306, 0x03090308, 0x030b030a, 0x030d030c, 0x030f030e, 0x03110310, 0x03130312, 0x03150314, 0x03170316, 0x03190318, 0x031b031a,
	0x031d031c, 0x031f031e, 0x03210320, 0x03230322, 0x03250324, 0x03270326, 0x03290328, 0x032b032a, 0x032d032c, 0x032f032e, 0x03310330, 0x03330332,
	0x03350334, 0x03370336, 0x03390338, 0x033b033a, 0x033d033c, 0x033f033e, 0x03410340, 0x03430342, 0x03450344, 0x03470346, 0x03490348, 0x034b034a,
	0x034d034c, 0x034f034e, 0x03510350, 0x03530352, 0x03550354, 0x03570356, 0x03590358, 0x035b035a, 0x035d035c, 0x035f035e, 0x03610360, 0x03630362,
	0x03650364, 0x03670366, 0x03690368, 0x036b036a, 0x036d036c, 0x036f036e, 0x03710370, 0x03730372, 0x03750374, 0x03770376, 0x03790378, 0x037b037a,
	0x037d037c, 0x037f037e, 0x03810380, 0x00830382, 0x038403bd, 0x03860385, 0x03880387, 0x038a0389, 0x038c038b, 0x038e038d, 0x0390038f, 0x03920391,
	0x03940393, 0x03960395, 0x03980397, 0x039a0399, 0x039c039b, 0x039e039d, 0x03a0039f, 0x03a203a1, 0x03a403a3, 0x03a603a5, 0x03a803a7, 0x03aa03a9,
	0x03ac03ab, 0x03ae03ad, 0x03b003af, 0x03b203b1, 0x03b403b3, 0x03b603b5, 0x03b803b7, 0x03ba03b9, 0x03bc03bb, 0x6e7507bd, 0x42303069, 0x69700335,
	0x230b8331, 0x36323132, 0x32270784, 0x45043630, 0x836f7275, 0x4246220c, 0x821c8430, 0x85322007, 0x3931211c, 0x32213884, 0x21078543, 0x07874230,
	0x50821f84, 0x41063329, 0x76657262, 0x84610665, 0x41072906, 0x6e6f676f, 0x61076b65, 0x06280785, 0x72616344, 0x64066e6f, 0x44270685, 0x616f7263,
	0x85450774, 0x6507211c, 0x06210785, 0x201d8545, 0x27068565, 0x7563614c, 0x6c066574, 0x4c200685, 0x6c201485, 0x04260684, 0x746f644c, 0x04826c04,
	0x854e0621, 0x856e201e, 0x844e2006, 0x6e06211e, 0x0d2f0684, 0x6e75684f, 0x75726167, 0x75616c6d, 0x8b6f0d74, 0x5206210d, 0x72203085, 0x52200685,
	0x06213084, 0x20068572, 0x20148553, 0x84068473, 0x363121f8, 0x3124e885, 0x54063336, 0x74202485, 0x05270684, 0x6e697255, 0x83750567, 0x550d2105,
	0x75206f8c, 0x5a206f8c, 0x06214c84, 0x2106847a, 0xba825a0a, 0x63636127, 0x0a746e65, 0x080a887a, 0x61470546, 0x05616d6d, 0x74656854, 0x68500361,
	0x6c610569, 0x05616870, 0x746c6564, 0x70650761, 0x6f6c6973, 0x6973056e, 0x03616d67, 0x03756174, 0x0d696870, 0x65646e75, 0x6f637372, 0x62646572,
	0x7865096c, 0x6d616c63, 0xb3830982, 0x37303227, 0x65700646, 0x084c8273, 0x4a490229, 0x0b6a6902, 0x6f70616e, 0x6f727473, 0x06656870, 0x756e696d,
	0x73066574, 0x6e6f6365, 0x66610964, 0x31366969, 0x87383432, 0x39382409, 0x82324806, 0x06332641, 0x35383148, 0x21068534, 0x0d843135, 0x0a333336,
	0x6e65706f, 0x6c6c7562, 0x41077465, 0x7263616d, 0x61076e6f, 0x0b2d0785, 0x72696343, 0x666d7563, 0x0b78656c, 0x210b8963, 0xe688430a, 0x88630a21,
	0x4507210a, 0x07213585, 0x28078565, 0x72624506, 0x06657665, 0x21068465, 0x2888450a, 0x88650a21, 0x470b210a, 0x0b215589, 0x210b8967, 0x2d89470a,
	0x0a886720, 0x2005bd41, 0x06bd4132, 0x0b333223, 0x21318948, 0x0b89680b, 0x62480426, 0x68047261, 0x06280482, 0x6c697449, 0x69066564, 0x07210684,
	0x21998549, 0x07856907, 0x84490621, 0x6906219a, 0x07210684, 0x05b94249, 0x85690721, 0x4a0b2107, 0x0b215189, 0x2a0b896a, 0x65634b08, 0x6c6c6964,
	0x866b0861, 0x6b0c2e08, 0x65657267, 0x6e616c6e, 0x08636964, 0x2115864c, 0x08876c08, 0x08874e20, 0x08866e20, 0x6e450329, 0x6e650367, 0x854f0767,
	0x6f072188, 0x06210785, 0x2189844f, 0x06846f06, 0x86520821, 0x7208212e, 0x0b210886, 0x21868953, 0x0b89730b, 0x82540421, 0x740421eb, 0x06210482,
	0x21e98455, 0x06847506, 0x85550721, 0x75072157, 0x06210785, 0x21588455, 0x06847506, 0x85550721, 0x750721e8, 0x0b210785, 0x21518957, 0x0b8a770b,
	0x0b8a5920, 0x0b897920, 0x6f6c052b, 0x0a73676e, 0x6e697241, 0x05094367, 0x0a886120, 0x45410722, 0x07221284, 0x07846561, 0x734f0b26, 0x6873616c,
	0x6f200b85, 0x09320b89, 0x746f6e61, 0x69656c65, 0x67570661, 0x65766172, 0x06857706, 0x2a845720, 0x84770621, 0x57092b06, 0x72656964, 0x73697365,
	0x09877709, 0x85590621, 0x84792028, 0x710d2206, 0x27478275, 0x65766572, 0x64657372, 0x3f053243, 0x6c044533, 0x09617269, 0x69747365, 0x6574616d,
	0x6e6f0964, 0x67696565, 0x0c687468, 0x65726874, 0x73240b86, 0x7669660b, 0x0c210b87, 0x20428273, 0x2024856e, 0x23468373, 0x34303046, 0x35270786,
	0x6e6f7405, 0x870d736f, 0x250d8481, 0x706c410a, 0x0a846168, 0x43450c21, 0x0c8405d6, 0x74450822, 0x09221585, 0x09866f49, 0x6d4f0c27, 0x6f726369,
	0x211f846e, 0x2c8a550c, 0x6d4f0a24, 0x2e856765, 0x82691121, 0x20618c2e, 0x25618405, 0x74654204, 0x61860761, 0x825a0421, 0x8203200c, 0x83042061,
	0x4b05365c, 0x61707061, 0x6d614c06, 0x02616462, 0x4e02754d, 0x69580275, 0x316d8607, 0x03695002, 0x056f6852, 0x6d676953, 0x61540361, 0x79860775,
	0x68430328, 0x73500369, 0x43830c69, 0x0f207187, 0x0f871c86, 0x89610a21, 0x06b544de, 0x8082de85, 0x09200884, 0x0984af83, 0x85751421, 0x21bc8cd1,
	0x28826204, 0x61670527, 0x04616d6d, 0x200a827a, 0x22038203, 0x82687405, 0x83042005, 0x6b052138, 0x6c20ba84, 0x6e26ba85, 0x69780275, 0x25416f07,
	0x72032505, 0x73066f68, 0x3121b483, 0x21598607, 0xb1826303, 0x05266482, 0x67656d6f, 0x29410c61, 0x8e0f200b, 0x860c207c, 0x20998445, 0x841c860c,
	0x840a200c, 0x290a843c, 0x69666109, 0x30303169, 0x09873332, 0x88313521, 0x88322009, 0x201d8909, 0x20138834, 0x20098835, 0x20098836, 0x45098837,
	0x5982057a, 0x87393521, 0x30362113, 0x63880988, 0x63873620, 0x88343121, 0x8831204f, 0x88312045, 0x88312045, 0x88322045, 0x88322045, 0x88322045,
	0x883220a9, 0x8832209f, 0x8832204f, 0x8832209f, 0x88322059, 0x88322059, 0x88332059, 0x88332059, 0x88332059, 0x41332059, 0x33200803, 0x33206388,
	0x33206388, 0x33206388, 0x33206388, 0x33206388, 0x34206388, 0x34206388, 0x34206388, 0x34206388, 0x34206388, 0x17416388, 0x88342009, 0x88342063,
	0x06e24663, 0x30303123, 0x20638834, 0x20958836, 0x20318836, 0x20318836, 0x20958836, 0x20318836, 0x20958837, 0x208b8837, 0x208b8837, 0x208b8837,
	0x20598837, 0x20598837, 0x20598837, 0x20598837, 0x20598837, 0x20598838, 0x20ef8838, 0x20638838, 0x20638838, 0x20638838, 0x20638838, 0x20638838,
	0x20638838, 0x20638838, 0x20638838, 0x20638839, 0x20638839, 0x20638839, 0x20638839, 0x20638839, 0x20638839, 0x20638839, 0x20638839, 0x87458937,
	0x30312163, 0x31216387, 0x211d8730, 0xbb423031, 0x87302008, 0x30312163, 0x31216387, 0x21638730, 0x63873031, 0x87303121, 0x30312163, 0x3121c787,
	0x20638830, 0x89638831, 0x893520b3, 0x223185db, 0x86323030, 0x31362c3b, 0x09323533, 0x70796c67, 0x82352068, 0x210987b3, 0x09840832, 0x33373522,
	0x21050346, 0x07863437, 0x07863520, 0x07863720, 0x28873820, 0x39200888, 0x38211186, 0x28088730, 0x684f0531, 0x056e726f, 0x2005846f, 0x20058455,
	0x36058375, 0x6f6f680d, 0x6f62616b, 0x6f636576, 0x640c626d, 0x6562746f, 0x83776f6c, 0x6709230c, 0x16856172, 0x63610924, 0x20847475, 0x39204f86,
	0x39215887, 0x87118731, 0x333921ae, 0x34201187, 0x35200887, 0x36200887, 0x37200887, 0xb2870887, 0xb2863920, 0x30303622, 0x36221a85, 0x08873130,
	0x36215986, 0x20598630, 0x05c64636, 0x41453127, 0x6e750730, 0x20078269, 0x20078631, 0x20078632, 0x20078633, 0x20078634, 0x20078635, 0x20078636,
	0x20078637, 0x20078638, 0x20078639, 0x20078641, 0x20078642, 0x20078643, 0x20078644, 0x20078645, 0x21078546, 0x07863042, 0x07863120, 0x42207f86,
	0x42207f86, 0x42207f86, 0x42207f86, 0x42207f86, 0x42207f86, 0x42207f86, 0x42207f86, 0x42207f86, 0x42207f86, 0x42207f86, 0x42207f86, 0x42207f86,
	0x43217f86, 0x21778530, 0x07863143, 0x43207f86, 0x43207f86, 0x43207f86, 0x43207f86, 0x43207f86, 0x43207f86, 0x3d4d7f86, 0x45312205, 0x207f8643,
	0x227f8443, 0x84383130, 0x32302267, 0x229f8435, 0x84393430, 0x8407825f, 0x8407825f, 0x8407824f, 0x8407824f, 0x8507823f, 0x3934213f, 0x0f82bf84,
	0x3022bf84, 0x3f864134, 0x3f864120, 0xcf844120, 0x67851782, 0x4f413420, 0x34302305, 0xcf833142, 0x2f860782, 0x82054f41, 0x82af840f, 0x418f8607,
	0x0f82052f, 0x44206f86, 0x23055a43, 0x34383031, 0x45209986, 0x45203186, 0x35223185, 0x59843436, 0x3038352d, 0x6769660a, 0x64657275, 0x43687361,
	0x31200546, 0x32228484, 0x22843330, 0x41303231, 0x6f630d30, 0x6d6e6f6c, 0x74656e6f, 0x85797261, 0x82c28525, 0x8635201d, 0x8268840f, 0x8268840f,
	0x05054407, 0x36373523, 0x84198733, 0x841982fc, 0x860782ec, 0x2fec8567, 0x31423032, 0x7571650b, 0x6c617669, 0x65636e65, 0x30225583, 0x23843345,
	0x3645463c, 0x65720439, 0x73046873, 0x036e6968, 0x09766174, 0x62756f64, 0x6176656c, 0x03820676, 0x646f7922, 0x09821086, 0x65670622, 0x09202a83,
	0x73370682, 0x69796168, 0x656e0d6d, 0x65687377, 0x736c6571, 0x0a6e6769, 0x83766176, 0x6f642b45, 0x69660d74, 0x6b6c616e, 0x1d826661, 0x0e617622,
	0x712d0d87, 0x74616d61, 0x616c0a73, 0x6864656d, 0x2006826f, 0x220a8910, 0x82676164, 0x61072386, 0x5982746c, 0x830b6e21, 0x204c8648, 0x210b840a,
	0x57826e69, 0x12841120, 0x09842984, 0x10746f22, 0x2284118a, 0xe4820920, 0x61706626, 0x0a686174, 0x72850983, 0x6d281484, 0x71697061, 0x74656209,
	0x0b256a85, 0x656d6967, 0x220b866c, 0x876c6164, 0x68082217, 0x20148565, 0x85cf8209, 0x7a0b2109, 0x0b859383, 0x87740921, 0x79092328, 0x1385646f,
	0x0e85e088, 0xf8820920, 0x0b200985, 0x0b85df84, 0x656d0923, 0x2209866d, 0x856e756e, 0x730c2609, 0x6b656d61, 0x410c8568, 0x70200534, 0x08207d86,
	0x0b250887, 0x64617374, 0x23228569, 0x666f7109, 0x0a230985, 0x86736572, 0x410a2037, 0x08230902, 0x84766174, 0x7608251f, 0x6f687661, 0x07207d82,
	0x7227ef82, 0x07656661, 0x8366616b, 0x70062207, 0x20068365, 0x20ef8209, 0x339c8466, 0x72657a12, 0x6469776f, 0x6f6e6874, 0x696f6a6e, 0x0f72656e,
	0x0f861288, 0x66656c2f, 0x726f7474, 0x74686769, 0x6b72616d, 0x2109840f, 0x16836f74, 0x09280f83, 0x69696661, 0x38333735, 0x22051b43, 0x46343735,
	0x098306e4, 0x8305c646, 0x07b64209, 0x46343421, 0x138205a8, 0x8306404a, 0x05204709, 0x20470983, 0x47098305, 0x09830520, 0x83052047, 0x05204709,
	0x59880983, 0x77873520, 0xca473320, 0x478b8206, 0x09830616, 0x33204587, 0x8306ca47, 0x20458713, 0x06ca4733, 0x45891383, 0xca47a988, 0x20bd8306,
	0x87e58831, 0x36342109, 0x36220985, 0x32493133, 0x87d18306, 0x4935203b, 0x352206a0, 0x044a3537, 0x481d8206, 0x36220656, 0x1d863832, 0x9f850983,
	0xe5850983, 0x32343622, 0x83062141, 0x21638709, 0xc7883539, 0x2b413820, 0x861d8305, 0x38322209, 0x82278538, 0x0656486d, 0xb449d182, 0x49098206,
	0x098306b4, 0xbe49c788, 0x41138306, 0x33200771, 0x2206be49, 0x49333735, 0x098206be, 0x22062849, 0x48343735, 0x098206ec, 0x22069e4b, 0x41323235,
	0x3520087b, 0x2206ba48, 0x86393236, 0x41098313, 0x13820667, 0x2007ad41, 0x06ec4835, 0x3820ef82, 0x83052b41, 0x831d8509, 0x07854109, 0x00493520,
	0x41458206, 0x45820767, 0x39203187, 0x37218187, 0x07e24835, 0x4c393221, 0x35220620, 0x8f413537, 0x413b8306, 0x32210635, 0x20778633, 0x86098235,
	0x893b8295, 0x2081874f, 0x06124b39, 0x27883b83, 0x99413520, 0x203b8205, 0x234f8536, 0x35373336, 0x83053541, 0x86138909, 0x3733224f, 0x421d8836,
	0xdb820675, 0x22064941, 0x89383336, 0x06f84bb3, 0xd2491382, 0x20778206, 0x07d54134, 0xbc4b3920, 0x871d8306, 0x4d38204f, 0x1382067e, 0x8206c04c,
	0x06704c09, 0x0c4c0982, 0x426d8206, 0x32220725, 0x3b863838, 0x6b420982, 0x85382008, 0x202783d1, 0x05894836, 0x86434321, 0x86442007, 0x86452007,
	0x85462007, 0x30442107, 0x31200786, 0x32200786, 0x33200786, 0x34200786, 0x35200786, 0x57860786, 0x86374421, 0x8638200f, 0x86392007, 0x86412007,
	0x86422007, 0x207f8607, 0x207f8644, 0x207f8644, 0x217f8644, 0x27853045, 0x86314521, 0x207f8607, 0x207f8645, 0x207f8645, 0x207f8645, 0x207f8645,
	0x477f8645, 0x312105a7, 0x05a74745, 0x7f860782, 0x7f864520, 0x7f864520, 0x7f864520, 0x7f864520, 0x7f864520, 0x7f864620, 0x344a4620, 0x38382106,
	0x2106344a, 0x81863838, 0x81864620, 0x81864620, 0x81864620, 0x81864620, 0x01414620, 0x39463006, 0x6e6f6404, 0x69740967, 0x6365646c, 0x83626d6f,
	0x313222d0, 0x22608432, 0x87303532, 0x82e08407, 0x2298840f, 0x86313532, 0x84312017, 0x2c0f8266, 0x756d0b38, 0x61636973, 0x746f6e6c, 0x21438465,
	0x33854230, 0xce483020, 0x30322105, 0x82051e4a, 0x0c352207, 0x29698253, 0x6361616d, 0x746e6563, 0x0c8a730c, 0x30233983, 0x86413132, 0x0c422e07,
	0x74746f64, 0x61696465, 0x65747563, 0x22288f0b, 0x84443034, 0x35342128, 0x33210785, 0x22fd8433, 0x84343330, 0x343022e5, 0x82e58437, 0x85392007,
	0x84372027, 0x850f82be, 0x3834212f, 0x41202786, 0x41202786, 0x894a2786, 0x34302105, 0x8205894a, 0x85452007, 0x05894a3f, 0x86353021, 0x313522a0,
	0x21178442, 0x57853135, 0x84313521, 0x45312257, 0x212f8439, 0xa7413032, 0x43322205, 0x23178436, 0x31374332, 0x07822f83, 0x20051a41, 0x05eb4c43,
	0x85374121, 0x84078247, 0x84078247, 0x8407822f, 0x20078247, 0x22378346, 0x84383741, 0x840782a7, 0x200782a7, 0x84178641, 0x330f8287, 0x62411043,
	0x7361686b, 0x7365645f, 0x646e6563, 0x61107265, 0x8184108e, 0x84323021, 0x46462251, 0x24698446, 0x38423032, 0x2e008200, 0x00080003, 0x00100002,
	0x00ffff01, 0x82010003, 0x820c2011, 0x82162003, 0x83022003, 0xb603210d, 0x04200582, 0x19830d82, 0x01000022, 0x0a2a0982, 0x36003400, 0x616c0100,
	0x3b826e74, 0x02001032, 0x2048544c, 0x4f521600, 0x1c00204d, 0xffff0000, 0x058c2382, 0x37850f82, 0x52003822, 0x1e203796, 0x6984378a, 0x00ffff23,
	0x26018201, 0x636f6c02, 0x840e006c, 0x84142005, 0x831d8347, 0x00022403, 0x840e0006, 0x8301208f, 0x221b84bd, 0x82020026, 0x59042013, 0x0d8207d3,
	0xf9000224, 0xb682fa00, 0x20011f22, 0x08240d84, 0x8d030100, 0x74205984, 0x63833184, 0x00231e82, 0x82661700, 0x8261830f, 0x5e173406, 0x5a178230,
	0x862a0906, 0x0df78648, 0xa0020701, 0x824b1782, 0x47240812, 0x31010102, 0x0609300b, 0x030e2b05, 0x00051a02, 0x0a066130, 0x0401062b, 0x02378201,
	0x53a00401, 0x2c305130, 0x1c26118a, 0x1c801ea2, 0x01843c00, 0x62004f2c, 0x6f007300, 0x65006c00, 0x03827400, 0x82003e21, 0x21302101, 0x32084c8a,
	0xd3c81404, 0x0b2d60ba, 0x9efe9907, 0xe8e2e0ab, 0x967c40a4, 0x82a0ef2e, 0x82303112, 0x82306004, 0x03a04c03, 0x02020102, 0x11ab2e0a, 0x5cff50dc,
	0x87c0cb9d, 0x821d203d, 0x31703d8a, 0x0629302b, 0x0b045503, 0x6f432213, 0x69727970, 0x20746867, 0x20296328, 0x37393931, 0x240e6869, 0x301e312e,
	0x202c851c, 0x14826915, 0x30213123, 0x221f831f, 0x89181303, 0x6f52361f, 0x4120746f, 0x6f687475, 0x79746972, 0x0d171e30, 0x38303730, 0x28008232,
	0x32303133, 0x310d175a, 0x200e8232, 0x27148235, 0x5a303030, 0x0b317930, 0x9182a082, 0x02130628, 0x13315355, 0x51831130, 0x0a130830, 0x68736157,
	0x74676e69, 0x10316e6f, 0x14830e30, 0x07130729, 0x6d646552, 0x87646e6f, 0x130a2198, 0x23229896, 0x98852130, 0x98891a20, 0x646f4328, 0x69532065,
	0x55826e67, 0x43502029, 0x01823041, 0x410d3022, 0x012808c0, 0x03000501, 0x000f0182, 0x28091782, 0x0182020a, 0x79b70001, 0xb35dd67d, 0x34a83945,
	0xf9da31ac, 0x77493525, 0x9e1ffbc0, 0xef7145c7, 0xd4e846d1, 0x4c6bc38c, 0x99f46252, 0xd84dc302, 0x242f6c49, 0xcebf653e, 0x480bb723, 0xdd757fb7,
	0x8faabd45, 0x25c5500e, 0xe7a0f22b, 0xd11f230d, 0x62fa2441, 0x4519cf99, 0x1f4a93a5, 0x2fb3cd99, 0x2d4ac322, 0x15d96f7c, 0x398c3b1e, 0xbddd3910,
	0x3b66f429, 0xff32012d, 0xa64827fe, 0x87016cb5, 0xb2bafb9c, 0xf9827f63, 0x8481a05c, 0xf2b08e85, 0xcfa394b8, 0x8550a638, 0x4e872717, 0x00f630dd,
	0xf9c6f43d, 0x86be813d, 0xa7396ced, 0xb4f6342e, 0x7d0aaf2e, 0x66789162, 0x0d73989c, 0xc4f2af86, 0x4fb920f3, 0xcb638d12, 0x4532d92c, 0x4abbee19,
	0x53503b96, 0x5166ce18, 0x87adaa79, 0x9f3e56c8, 0x6e885082, 0xc135b105, 0x52bd247b, 0x4e993d66, 0x337e2bcc, 0x0647846e, 0x4ad09ed1, 0x866e0286,
	0x87c0a400, 0x030253df, 0xa3010001, 0x8130fa81, 0x061330f7, 0x251d5503, 0x0a300c04, 0x062b0806, 0x07050501, 0x81300303, 0x3b1583a2, 0x9a810401,
	0x80978130, 0x70d05b10, 0x9e7269ef, 0x147e5123, 0xff8e4db2, 0x3072a1cb, 0x32706f42, 0xc1000f82, 0x3c3c8b00, 0x3ed11188, 0xdfec63f6, 0x830f3040,
	0x011327a3, 0x0504ff01, 0x06820330, 0x831d3021, 0x040e3a10, 0xcc140416, 0x0076ce1d, 0xf1af5b70, 0x9a4ec4da, 0xa32e4451, 0x30f06344, 0x261e830b,
	0x0304040f, 0x43860102, 0x0c090a3a, 0x01018203, 0xaeab7b00, 0xf2264a7e, 0x744ebcce, 0x742758a2, 0x86b3752a, 0x944cabfd, 0xe94d0078, 0xdc18ebca,
	0xa20ec569, 0x4302f37c, 0xcc87cac6, 0xc2cc53f8, 0x6f56bd9f, 0xa94463f0, 0x96ee0044, 0x1cd59ac8, 0x199f0bb8, 0xdad7940d, 0x7d29ad1e, 0x73a6edef,
	0x39de8fac, 0x6a983d8e, 0xd26d38bc, 0xfd23af88, 0x69d6e9df, 0xbd889109, 0xbb00e1fe, 0x7cf7f334, 0x2e1210f9, 0x9629eb05, 0x286b4293, 0x8f38b771,
	0xc90d07e0, 0xbdcd685d, 0x666b4180, 0xbbb7bba8, 0xf2ca348e, 0x7a7c1003, 0x42e0d2f5, 0xe1fe7bdf, 0xf6feace1, 0xb30dd5df, 0xe392d670, 0xa238b64f,
	0x3dd42d7c, 0x620b34db, 0x819f0237, 0xf689236a, 0xb08f635c, 0xd739bb5a, 0x84558c60, 0x3bf5331a, 0x0c82a098, 0xb38b5fa2, 0xa5a1b72c, 0x20daabcb,
	0x1930bfb6, 0x0d142085, 0xf452bc2a, 0x305ee041, 0x692892e3, 0xe270c187, 0xceaba7f3, 0x76724280, 0x0482300e, 0x0382307a, 0x06634462, 0xcf016124,
	0x0083003e, 0x47430f20, 0x0505220b, 0x7bd54300, 0x0d171e35, 0x32313930, 0x32323730, 0x39323034, 0x310d175a, 0x88333031, 0x8130220e, 0x54714483,
	0x0b300d22, 0x24052a45, 0x504f4d04, 0x07a04452, 0xa0440320, 0x207b4416, 0x30bdff08, 0x7245fb89, 0x9e6b53a8, 0x23004f89, 0x1dd4bec0, 0x4059b13d,
	0x9173f338, 0x96e62682, 0xd9530012, 0x3c0e821c, 0xbdbb1dce, 0x978d42f7, 0x1a38fcd4, 0xe3f9b9e4, 0x0361d3ec, 0xd6d3a0bf, 0x465c4d75, 0xf05eeda9,
	0x5b69e2d2, 0xb3ea731a, 0xcd048d1c, 0x64a04429, 0x981e2f59, 0xabc76e5d, 0x65823918, 0xabbca7c4, 0xea198875, 0x26149787, 0x76267fb3, 0x3938d4a4,
	0x26b3e384, 0x2bf918d5, 0x16c9d2e9, 0xf221545a, 0x86878d97, 0x49f4fe29, 0xf88be62c, 0xcd7d3f04, 0x869296cd, 0xe203710d, 0x420cfed0, 0xb8d7ff35,
	0x458edd3f, 0xd7f67d0a, 0xf05bad4b, 0x771d7276, 0x35897d23, 0xb25d1cc4, 0x474b0350, 0x55a7076d, 0x80069888, 0x54ad81a6, 0xd681d84e, 0xc042bffa,
	0x0d55be31, 0x4953d599, 0xe5eb3012, 0x5e7c88a5, 0x145a7ac4, 0x37b40887, 0x32eba069, 0xeb088c24, 0xba14d4f9, 0xeacdfce0, 0x7b4415a4, 0x30f82306,
	0x7b44f581, 0x09c54315, 0x78382508, 0x1bc87305, 0x925f9b32, 0x89af5586, 0xb199c6ba, 0x0e308e74, 0x1d550306, 0xff01010f, 0x02030404, 0x1f308007,
	0x23250f83, 0x16301804, 0x15f64380, 0x20834420, 0x3d041f2c, 0x39303b30, 0x35a037a0, 0x756e3386, 0x72632206, 0x0e756e6c, 0x696b7023, 0x2015822f,
	0x06ab6f2f, 0x432f7327, 0x41435053, 0x2112822e, 0x1d454830, 0x01012707, 0x3a303c04, 0x0f873830, 0x86023023, 0x18c66e2c, 0x65225084, 0x49897472,
	0x50437420, 0x030c090e, 0x00010182, 0xab830328, 0xfef10d13, 0x76426f11, 0xb8ab43d8, 0x24fa42c6, 0x75ae3465, 0x8e3071b0, 0xfa83b696, 0xcdfee472,
	0x703ae737, 0x0e205198, 0xc9b471ba, 0x8ae4d5f4, 0x737028e8, 0xc2e1edd5, 0x56f1ee7b, 0x82805a34, 0x72d710eb, 0x4e12ea03, 0x8c0dddec, 0x0c4f447b,
	0x6efd7561, 0xcedd079c, 0x0d185a2b, 0xfd60b039, 0xaa04ffda, 0xfad8a302, 0xbdbba38e, 0x3b546ac1, 0x2ce45f31, 0x4df1cb6e, 0x1ef21c2a, 0xaf867b76,
	0xb1d687c6, 0xccaced2a, 0x9fe4c00e, 0xe8cfe87f, 0x82547284, 0xc82a6e18, 0x1ab4959e, 0x936fc11e, 0xc1a662db, 0xc9ad6b4b, 0xe3923ded, 0x7aab2fb2,
	0x6a673977, 0x9d827b00, 0x63de1003, 0x42264995, 0xc12295de, 0x14d00b87, 0x73dc5fa3, 0x1e367232, 0xc529c8ff, 0x664f5224, 0x1d1dc948, 0x3926c5a9,
	0xa74e5069, 0x6c06c2ec, 0xf11b722e, 0x246dda21, 0x15818048, 0xcc9f7c40, 0x4f4a3874, 0x9d048230, 0x85038230, 0x30057d44, 0x990b6a10, 0x2500c04f,
	0x45db11ab, 0x677a581f, 0x0e3241a2, 0x34717b46, 0x0d171e30, 0x39303630, 0x31303631, 0x37343430, 0x310d175a, 0x480e8239, 0x542872eb, 0x73656d69,
	0x706d6174, 0x0827eb48, 0x6e37dcff, 0x42c8affb, 0xc818714a, 0x533e48ce, 0x14abfac0, 0xbb322cba, 0xc8524f12, 0x333eed83, 0x923149d9, 0x6491b628,
	0x84501fe0, 0xd14bc2ba, 0xeff8057f, 0xc78bbe75, 0x69aed5a8, 0x27786670, 0xb7b6e866, 0xcdb985ef, 0x12fdaaee, 0x22590ba4, 0x40cf2f29, 0x1b0456d9,
	0x646db576, 0xdb544a6d, 0xbfdef1dd, 0x80c7839f, 0x024c7fdf, 0xc0f59437, 0x1e56089e, 0xd9cd4768, 0x2f5c76c0, 0x0425b67d, 0x6a5b56b4, 0x80ff631c,
	0xd5ee3c7c, 0x394d2504, 0x5d077477, 0x86d85cc2, 0xc9752c37, 0x391eea0e, 0xfe767c09, 0x7a6e6c9d, 0x8f3eece0, 0x0e719e97, 0x184f2a5f, 0x9e326062,
	0x2b4e83d2, 0x45685c22, 0x842fde8b, 0xf9b25010, 0x6c8d1ab5, 0x139b25ee, 0xd710cbf8, 0x82f40e85, 0xc6367376, 0xcca27a95, 0x05ec0660, 0xb73386b0,
	0x845b94f8, 0x85588441, 0x1fb06e94, 0x6fcc482c, 0x6ae0439c, 0x8e267fe8, 0x056f446b, 0x28018226, 0x24018230, 0x20137144, 0xa5ed4808, 0x09061022,
	0x26066b4c, 0x03040115, 0x48000102, 0x6f350aee, 0x973f4ee8, 0x4bab34b9, 0x9cbc8f86, 0x413bacea, 0x30d0c643, 0x2f308819, 0x0c040214, 0x53000a1e,
	0x62007500, 0x41004300, 0x490d0949, 0x394b1046, 0x050f090a, 0x82030005, 0x94000101, 0xc231114d, 0x11bb507c, 0x0761a18e, 0x708c0e01, 0x73ef8d45,
	0x093fbd54, 0xb8ff2d05, 0x1c855351, 0xb79139ed, 0xde0b56a3, 0x1b3bb68c, 0xa7acfbd1, 0x51b1b7c9, 0x086f1b21, 0x036b7e69, 0xed4622a2, 0x7c6db46c,
	0xd346b822, 0x0f8df384, 0x368a07be, 0xe97eebc1, 0x9f455d70, 0xceccd292, 0xe1c08edd, 0x7ccd2abf, 0x32aec9ec, 0xcbb987d5, 0xd136c463, 0x76bf2118,
	0xb39a3bde, 0x219e731b, 0xb4b4d888, 0xf48c5412, 0x4a65c29c, 0x9c26289a, 0x3b0f8a60, 0x786513c7, 0xadcfbb48, 0xb04f3a83, 0x30de5862, 0x1d39e9e9,
	0xdaf289e3, 0x13f98139, 0x80648c21, 0x96040663, 0x43029af2, 0x88467b2f, 0xd902ffba, 0xde4af965, 0x937403da, 0x0c6e05b3, 0x28dc9dcc, 0xf1487c61,
	0x21119c17, 0x871c0238, 0x96c506ac, 0x40e5b832, 0xbd3d53c6, 0xe8de89a9, 0xf48d3766, 0xcc9c9622, 0x515477b0, 0x4472d63a, 0x30f623b2, 0x30aa0482,
	0x44920382, 0x0a2505a0, 0x30a20561, 0x20008300, 0x0f9a4408, 0x4469f44c, 0x1e331008, 0x38300d17, 0x35323730, 0x31303931, 0x175a3531, 0x8533310d,
	0x8331200e, 0x8130220e, 0x631e49b3, 0x25302722, 0x08052d49, 0x436e1e22, 0x65687069, 0x53442072, 0x53452045, 0x35383a4e, 0x332d3344, 0x2d433530,
	0x46434235, 0x23302531, 0x2005c84d, 0x09c84d1c, 0x2d2dd383, 0x6d617453, 0x65532070, 0x63697672, 0x204e4965, 0x04f0ff08, 0xc096b22d, 0x2567811a,
	0xb36226b1, 0x30ce4b13, 0x3812c0ba, 0x346581fc, 0xb236c407, 0x07f66824, 0x9707c004, 0x7bf1b7f4, 0x462c621e, 0x51a44bd9, 0x6cd3b734, 0xb43b5aed,
	0x3d47a183, 0x352e0811, 0xc2e6456b, 0x66028c3c, 0x6918a902, 0x27ed4aeb, 0x773cee2c, 0x70d4a45b, 0x84574b99, 0x2dafd010, 0xe61d89f8, 0xe7b429ea,
	0x62069ecf, 0xc25472a7, 0x3fcfc63b, 0x58b0e1b8, 0xa5e56c10, 0x75c2c3d7, 0x85f4bd37, 0x28e881e1, 0xf2f11bd8, 0xa382f1ae, 0xa203d7d6, 0xfb84159f,
	0xe1abfa3d, 0xa0c832b6, 0xe6f36402, 0x71261aff, 0x158a5308, 0x2783f202, 0x71824976, 0x32adefa7, 0x6cd7c678, 0x65224f16, 0x464d6297, 0xaf23ff2f,
	0x70a6ec85, 0xdacb03bd, 0xc50532d8, 0xb640902b, 0x862cd59e, 0x13cbb76c, 0xc68d7d32, 0x2f17ae7e, 0xbb66fc32, 0x5545b01d, 0x2dfaadf8, 0x29678367,
	0x5ad28493, 0x4e4923a1, 0x0939490b, 0xf697e833, 0xf18ceff7, 0x59e369e6, 0x98f74e68, 0x9bdd7a8a, 0x0c29492e, 0x49143144, 0x74243b29, 0x61637073,
	0x87442949, 0x45742049, 0xff4915ac, 0xc006210c, 0x090e8043, 0x01820312, 0x3f0d0001, 0x3c915f77, 0xa435a5be, 0x840505db, 0xeff2561f, 0x08c7a699,
	0xcdb32f8d, 0x86d5713f, 0xdd1f777c, 0xbdb217eb, 0x99f9e37c, 0x48450af2, 0x69bb14ad, 0x673ef22c, 0xeef25462, 0x9211277f, 0xd9ceec39, 0xf7884e87,
	0x7b234760, 0x08401527, 0x310dbf9f, 0x35d88204, 0x009c0cb6, 0x78aa8bd3, 0x88b5c561, 0x363e9d41, 0x27a458dc, 0xbdda3a9b, 0xa6145d06, 0xc14c0fb2,
	0xf28b3c8e, 0x66f89962, 0x1cf3d5ed, 0xdb32b028, 0xbc0931ca, 0x466822fb, 0x73d3fa4c, 0x8e29e722, 0x56fb0022, 0x81ae06bf, 0x34ba15a0, 0x1f8e28f9,
	0xa105624a, 0x4781f589, 0x08910de9, 0x8f3b58d7, 0x69096b1e, 0x7c48c0a9, 0x5f3f8255, 0x9c433800, 0xd83fcc06, 0x734fbf2f, 0xbafd3d09, 0xecc7f45e,
	0x6164c237, 0x3dd44da0, 0xb05bcc70, 0xd4c18113, 0xbd1a31a3, 0xd296d664, 0x5b2a3f7a, 0x3c095346, 0x3ff903cd, 0x89cc0059, 0x82316153, 0x82309b04,
	0x01029704, 0x87813001, 0x217ab24d, 0x484e0a02, 0x0937530a, 0xc681a024, 0x9e511930, 0x03092308, 0x35530c31, 0x3004220a, 0x230d8a1c, 0x300e310b,
	0x15221d8b, 0x38892330, 0x1631043a, 0x10021404, 0x50f422d5, 0xc18a6364, 0x49b42004, 0x0ec9cfcf, 0x6630101e, 0x0c28428a, 0x56305831, 0x2a802ca0,
	0x20122a79, 0x15ec7920, 0x8026a123, 0x18d34b24, 0x20099a7a, 0x0e645220, 0x82040b09, 0x05a60001, 0xa66e03f7, 0xc72c3268, 0x3ca63a84, 0x40c1e9f8,
	0xebdf5a55, 0x08c4f225, 0xb1a4d8a6, 0x05ec49c4, 0x157a23cb, 0x0405d31b, 0x157fca99, 0x88950e99, 0x177e5ab6, 0xc675a793, 0xca21f1df, 0x3cb92201,
	0xb5b336e4, 0xbaa664af, 0x304833ef, 0xf5e8137e, 0x33469d84, 0x8f35cc30, 0x0ae35e2a, 0x55c86bf2, 0xcc69a8c9, 0xa5d1efd4, 0xbf527a8d, 0x1352fe36,
	0x45bb7fe1, 0xdca4687c, 0x00bf1c80, 0xaf3ebf7f, 0xabac3d30, 0x9f8d9052, 0x70f3671f, 0x008cc15d, 0x4d1065d0, 0x48dd9de4, 0x1fb714ab, 0x97a956a2,
	0xaed4c3d0, 0xc7af8996, 0x53009c51, 0x5bfe6252, 0x40251abe, 0x5b98f7ae, 0x5f35a502, 0x32adb11e, 0x6b694088, 0xdd334163, 0x148a3b0e, 0x623af508,
	0x9efe8fb9, 0xf199fa84, 0xf594a177, 0x4cc77cc3, 0xc89e25c2, 0xaef10777, 0x5fb1a9e1, 0xca618963, 0x9cbd417d, 0xd612a6db, 0x76b886ea, 0x82a162e3,
	0x82301f02, 0xa5411b02, 0x31062409, 0x820c0282, 0x42082012, 0x2247708e, 0x4702200f, 0x07200bb8, 0x2306c655, 0x18305da0, 0x0322ac89, 0x0c880b31,
	0x30010723, 0x320c881c, 0x0f310509, 0x30310d17, 0x39313830, 0x33323130, 0x425a3435, 0x9233108a, 0x00ae5565, 0xe65c0104, 0x552e5c18, 0x57f65da5,
	0x44171a39, 0x05090e9f, 0x00018204, 0x8a6a3a22, 0xed717123, 0x74ef44b5, 0x65122e5e, 0x5faeadec, 0x20970064, 0x8cabd8be, 0x842fe2dc, 0xda9a608c,
	0x6788d252, 0xee4d2c36, 0x0212fba7, 0xe99869ce, 0x885f630f, 0x4cae55c3, 0x90270bf5, 0x685e1225, 0x939fd545, 0x2fd94cf4, 0xd9b5a4e9, 0x01f3976d,
	0xf13f0585, 0x5ed1f2fb, 0x9fcdec90, 0xd06585a4, 0x6e1fdcc2, 0xb0373f03, 0x805816ce, 0x63217077, 0xc7f32279, 0xf2f04c87, 0xbb2ef55f, 0xd999c845,
	0xfb407090, 0xa9e37e03, 0xc441eeec, 0x635383f9, 0x69a1277e, 0xf6d0fe4a, 0xacdd8b6c, 0xa386bb27, 0xb8737615, 0x8ba24694, 0xfe267d79, 0x1248ce35,
	0x60db449a, 0x375aad16, 0x0726e047, 0x43ccb951, 0xba19a96b, 0x26caecdf, 0x9461736c, 0x44661591, 0xd1737d7b, 0x41612337, 0xdeeda3a2, 0x11f7d0b4,
	0xa0b66df8, 0xff3c9a51, 0x323f5018, 0xc9ec56a8, 0xd3986a22, 0x49d547bb, 0xa3fe0c84, 0xfa050000, 0x04986851,
};

// Load embedded ProggyClean.ttf at size 13, disable oversampling
ImFont* ImFontAtlas::AddFontDefault(const ImFontConfig* font_cfg_template)
{
    ImFontConfig font_cfg = font_cfg_template ? *font_cfg_template : ImFontConfig();
    if (!font_cfg_template)
    {
        font_cfg.OversampleH = font_cfg.OversampleV = 1;
        font_cfg.PixelSnapH = true;
    }
    if (font_cfg.Name[0] == '\0') strcpy(font_cfg.Name, "<default>");
    if (font_cfg.SizePixels <= 0.0f) font_cfg.SizePixels = 13.0f;

    //const char* ttf_compressed_base85 = GetDefaultCompressedFontDataTTFBase85();
    ImFont* font = AddFontFromMemoryCompressedTTF(verdana_compressed_data, verdana_compressed_size, 13.0f, &font_cfg, GetGlyphRangesCyrillic());
    return font;
}

ImFont* ImFontAtlas::AddFontFromFileTTF(const char* filename, float size_pixels, const ImFontConfig* font_cfg_template, const ImWchar* glyph_ranges)
{
    int data_size = 0;
    void* data = ImFileLoadToMemory(filename, "rb", &data_size, 0);
    if (!data)
    {
        IM_ASSERT(0); // Could not load file.
        return NULL;
    }
    ImFontConfig font_cfg = font_cfg_template ? *font_cfg_template : ImFontConfig();
    if (font_cfg.Name[0] == '\0')
    {
        // Store a short copy of filename into into the font name for convenience
        const char* p;
        for (p = filename + strlen(filename); p > filename && p[-1] != '/' && p[-1] != '\\'; p--) {}
        snprintf(font_cfg.Name, IM_ARRAYSIZE(font_cfg.Name), "%s, %.0fpx", p, size_pixels);
    }
    return AddFontFromMemoryTTF(data, data_size, size_pixels, &font_cfg, glyph_ranges);
}

// NB: Transfer ownership of 'ttf_data' to ImFontAtlas, unless font_cfg_template->FontDataOwnedByAtlas == false. Owned TTF buffer will be deleted after Build().
ImFont* ImFontAtlas::AddFontFromMemoryTTF(void* ttf_data, int ttf_size, float size_pixels, const ImFontConfig* font_cfg_template, const ImWchar* glyph_ranges)
{
    ImFontConfig font_cfg = font_cfg_template ? *font_cfg_template : ImFontConfig();
    IM_ASSERT(font_cfg.FontData == NULL);
    font_cfg.FontData = ttf_data;
    font_cfg.FontDataSize = ttf_size;
    font_cfg.SizePixels = size_pixels;
    if (glyph_ranges)
        font_cfg.GlyphRanges = glyph_ranges;
    return AddFont(&font_cfg);
}

ImFont* ImFontAtlas::AddFontFromMemoryCompressedTTF(const void* compressed_ttf_data, int compressed_ttf_size, float size_pixels, const ImFontConfig* font_cfg_template, const ImWchar* glyph_ranges)
{
    const unsigned int buf_decompressed_size = stb_decompress_length((unsigned char*)compressed_ttf_data);
    unsigned char* buf_decompressed_data = (unsigned char *)ImGui::MemAlloc(buf_decompressed_size);
    stb_decompress(buf_decompressed_data, (unsigned char*)compressed_ttf_data, (unsigned int)compressed_ttf_size);

    ImFontConfig font_cfg = font_cfg_template ? *font_cfg_template : ImFontConfig();
    IM_ASSERT(font_cfg.FontData == NULL);
    font_cfg.FontDataOwnedByAtlas = true;
    return AddFontFromMemoryTTF(buf_decompressed_data, (int)buf_decompressed_size, size_pixels, &font_cfg, glyph_ranges);
}

ImFont* ImFontAtlas::AddFontFromMemoryCompressedBase85TTF(const char* compressed_ttf_data_base85, float size_pixels, const ImFontConfig* font_cfg, const ImWchar* glyph_ranges)
{
    int compressed_ttf_size = (((int)strlen(compressed_ttf_data_base85) + 4) / 5) * 4;
    void* compressed_ttf = ImGui::MemAlloc((size_t)compressed_ttf_size);
    Decode85((const unsigned char*)compressed_ttf_data_base85, (unsigned char*)compressed_ttf);
    ImFont* font = AddFontFromMemoryCompressedTTF(compressed_ttf, compressed_ttf_size, size_pixels, font_cfg, glyph_ranges);
    ImGui::MemFree(compressed_ttf);
    return font;
}

int ImFontAtlas::AddCustomRectRegular(unsigned int id, int width, int height)
{
    IM_ASSERT(id >= 0x10000);
    IM_ASSERT(width > 0 && width <= 0xFFFF);
    IM_ASSERT(height > 0 && height <= 0xFFFF);
    CustomRect r;
    r.ID = id;
    r.Width = (unsigned short)width;
    r.Height = (unsigned short)height;
    CustomRects.push_back(r);
    return CustomRects.Size - 1; // Return index
}

int ImFontAtlas::AddCustomRectFontGlyph(ImFont* font, ImWchar id, int width, int height, float advance_x, const ImVec2& offset)
{
    IM_ASSERT(font != NULL);
    IM_ASSERT(width > 0 && width <= 0xFFFF);
    IM_ASSERT(height > 0 && height <= 0xFFFF);
    CustomRect r;
    r.ID = id;
    r.Width = (unsigned short)width;
    r.Height = (unsigned short)height;
    r.GlyphAdvanceX = advance_x;
    r.GlyphOffset = offset;
    r.Font = font;
    CustomRects.push_back(r);
    return CustomRects.Size - 1; // Return index
}

void ImFontAtlas::CalcCustomRectUV(const CustomRect* rect, ImVec2* out_uv_min, ImVec2* out_uv_max)
{
    IM_ASSERT(TexWidth > 0 && TexHeight > 0);   // Font atlas needs to be built before we can calculate UV coordinates
    IM_ASSERT(rect->IsPacked());                // Make sure the rectangle has been packed
    *out_uv_min = ImVec2((float)rect->X / TexWidth, (float)rect->Y / TexHeight);
    *out_uv_max = ImVec2((float)(rect->X + rect->Width) / TexWidth, (float)(rect->Y + rect->Height) / TexHeight);
}

bool    ImFontAtlas::Build()
{
    return ImFontAtlasBuildWithStbTruetype(this);
}

void    ImFontAtlasBuildMultiplyCalcLookupTable(unsigned char out_table[256], float in_brighten_factor)
{
    for (unsigned int i = 0; i < 256; i++)
    {
        unsigned int value = (unsigned int)(i * in_brighten_factor);
        out_table[i] = value > 255 ? 255 : (value & 0xFF);
    }
}

void    ImFontAtlasBuildMultiplyRectAlpha8(const unsigned char table[256], unsigned char* pixels, int x, int y, int w, int h, int stride)
{
    unsigned char* data = pixels + x + y * stride;
    for (int j = h; j > 0; j--, data += stride)
        for (int i = 0; i < w; i++)
            data[i] = table[data[i]];
}

bool    ImFontAtlasBuildWithStbTruetype(ImFontAtlas* atlas)
{
    IM_ASSERT(atlas->ConfigData.Size > 0);

    ImFontAtlasBuildRegisterDefaultCustomRects(atlas);

    atlas->TexID = NULL;
    atlas->TexWidth = atlas->TexHeight = 0;
    atlas->TexUvWhitePixel = ImVec2(0, 0);
    atlas->ClearTexData();

    // Count glyphs/ranges
    int total_glyphs_count = 0;
    int total_ranges_count = 0;
    for (int input_i = 0; input_i < atlas->ConfigData.Size; input_i++)
    {
        ImFontConfig& cfg = atlas->ConfigData[input_i];
        if (!cfg.GlyphRanges)
            cfg.GlyphRanges = atlas->GetGlyphRangesDefault();
        for (const ImWchar* in_range = cfg.GlyphRanges; in_range[0] && in_range[1]; in_range += 2, total_ranges_count++)
            total_glyphs_count += (in_range[1] - in_range[0]) + 1;
    }

    // We need a width for the skyline algorithm. Using a dumb heuristic here to decide of width. User can override TexDesiredWidth and TexGlyphPadding if they wish.
    // Width doesn't really matter much, but some API/GPU have texture size limitations and increasing width can decrease height.
    atlas->TexWidth = (atlas->TexDesiredWidth > 0) ? atlas->TexDesiredWidth : (total_glyphs_count > 4000) ? 4096 : (total_glyphs_count > 2000) ? 2048 : (total_glyphs_count > 1000) ? 1024 : 512;
    atlas->TexHeight = 0;

    // Start packing
    const int max_tex_height = 1024*32;
    stbtt_pack_context spc = {};
    stbtt_PackBegin(&spc, NULL, atlas->TexWidth, max_tex_height, 0, atlas->TexGlyphPadding, NULL);
    stbtt_PackSetOversampling(&spc, 1, 1);

    // Pack our extra data rectangles first, so it will be on the upper-left corner of our texture (UV will have small values).
    ImFontAtlasBuildPackCustomRects(atlas, spc.pack_info);

    // initialize font information (so we can error without any cleanup)
    struct ImFontTempBuildData
    {
        stbtt_fontinfo      FontInfo;
        stbrp_rect*         Rects;
        int                 RectsCount;
        stbtt_pack_range*   Ranges;
        int                 RangesCount;
    };
    ImFontTempBuildData* tmp_array = (ImFontTempBuildData*)ImGui::MemAlloc((size_t)atlas->ConfigData.Size * sizeof(ImFontTempBuildData));
    for (int input_i = 0; input_i < atlas->ConfigData.Size; input_i++)
    {
        ImFontConfig& cfg = atlas->ConfigData[input_i];
        ImFontTempBuildData& tmp = tmp_array[input_i];
        IM_ASSERT(cfg.DstFont && (!cfg.DstFont->IsLoaded() || cfg.DstFont->ContainerAtlas == atlas));

        const int font_offset = stbtt_GetFontOffsetForIndex((unsigned char*)cfg.FontData, cfg.FontNo);
        IM_ASSERT(font_offset >= 0);
        if (!stbtt_InitFont(&tmp.FontInfo, (unsigned char*)cfg.FontData, font_offset))
        {
            atlas->TexWidth = atlas->TexHeight = 0; // Reset output on failure
            ImGui::MemFree(tmp_array);
            return false;
        }
    }

    // Allocate packing character data and flag packed characters buffer as non-packed (x0=y0=x1=y1=0)
    int buf_packedchars_n = 0, buf_rects_n = 0, buf_ranges_n = 0;
    stbtt_packedchar* buf_packedchars = (stbtt_packedchar*)ImGui::MemAlloc(total_glyphs_count * sizeof(stbtt_packedchar));
    stbrp_rect* buf_rects = (stbrp_rect*)ImGui::MemAlloc(total_glyphs_count * sizeof(stbrp_rect));
    stbtt_pack_range* buf_ranges = (stbtt_pack_range*)ImGui::MemAlloc(total_ranges_count * sizeof(stbtt_pack_range));
    memset(buf_packedchars, 0, total_glyphs_count * sizeof(stbtt_packedchar));
    memset(buf_rects, 0, total_glyphs_count * sizeof(stbrp_rect));              // Unnecessary but let's clear this for the sake of sanity.
    memset(buf_ranges, 0, total_ranges_count * sizeof(stbtt_pack_range));

    // First font pass: pack all glyphs (no rendering at this point, we are working with rectangles in an infinitely tall texture at this point)
    for (int input_i = 0; input_i < atlas->ConfigData.Size; input_i++)
    {
        ImFontConfig& cfg = atlas->ConfigData[input_i];
        ImFontTempBuildData& tmp = tmp_array[input_i];

        // Setup ranges
        int font_glyphs_count = 0;
        int font_ranges_count = 0;
        for (const ImWchar* in_range = cfg.GlyphRanges; in_range[0] && in_range[1]; in_range += 2, font_ranges_count++)
            font_glyphs_count += (in_range[1] - in_range[0]) + 1;
        tmp.Ranges = buf_ranges + buf_ranges_n;
        tmp.RangesCount = font_ranges_count;
        buf_ranges_n += font_ranges_count;
        for (int i = 0; i < font_ranges_count; i++)
        {
            const ImWchar* in_range = &cfg.GlyphRanges[i * 2];
            stbtt_pack_range& range = tmp.Ranges[i];
            range.font_size = cfg.SizePixels;
            range.first_unicode_codepoint_in_range = in_range[0];
            range.num_chars = (in_range[1] - in_range[0]) + 1;
            range.chardata_for_range = buf_packedchars + buf_packedchars_n;
            buf_packedchars_n += range.num_chars;
        }

        // Pack
        tmp.Rects = buf_rects + buf_rects_n;
        tmp.RectsCount = font_glyphs_count;
        buf_rects_n += font_glyphs_count;
        stbtt_PackSetOversampling(&spc, cfg.OversampleH, cfg.OversampleV);
        int n = stbtt_PackFontRangesGatherRects(&spc, &tmp.FontInfo, tmp.Ranges, tmp.RangesCount, tmp.Rects);
        IM_ASSERT(n == font_glyphs_count);
        stbrp_pack_rects((stbrp_context*)spc.pack_info, tmp.Rects, n);

        // Extend texture height
        for (int i = 0; i < n; i++)
            if (tmp.Rects[i].was_packed)
                atlas->TexHeight = ImMax(atlas->TexHeight, tmp.Rects[i].y + tmp.Rects[i].h);
    }
    IM_ASSERT(buf_rects_n == total_glyphs_count);
    IM_ASSERT(buf_packedchars_n == total_glyphs_count);
    IM_ASSERT(buf_ranges_n == total_ranges_count);

    // Create texture
    atlas->TexHeight = ImUpperPowerOfTwo(atlas->TexHeight);
    atlas->TexPixelsAlpha8 = (unsigned char*)ImGui::MemAlloc(atlas->TexWidth * atlas->TexHeight);
    memset(atlas->TexPixelsAlpha8, 0, atlas->TexWidth * atlas->TexHeight);
    spc.pixels = atlas->TexPixelsAlpha8;
    spc.height = atlas->TexHeight;

    // Second pass: render font characters
    for (int input_i = 0; input_i < atlas->ConfigData.Size; input_i++)
    {
        ImFontConfig& cfg = atlas->ConfigData[input_i];
        ImFontTempBuildData& tmp = tmp_array[input_i];
        stbtt_PackSetOversampling(&spc, cfg.OversampleH, cfg.OversampleV);
        stbtt_PackFontRangesRenderIntoRects(&spc, &tmp.FontInfo, tmp.Ranges, tmp.RangesCount, tmp.Rects);
        if (cfg.RasterizerMultiply != 1.0f)
        {
            unsigned char multiply_table[256];
            ImFontAtlasBuildMultiplyCalcLookupTable(multiply_table, cfg.RasterizerMultiply);
            for (const stbrp_rect* r = tmp.Rects; r != tmp.Rects + tmp.RectsCount; r++)
                if (r->was_packed)
                    ImFontAtlasBuildMultiplyRectAlpha8(multiply_table, spc.pixels, r->x, r->y, r->w, r->h, spc.stride_in_BYTEs);
        }
        tmp.Rects = NULL;
    }

    // End packing
    stbtt_PackEnd(&spc);
    ImGui::MemFree(buf_rects);
    buf_rects = NULL;

    // Third pass: setup ImFont and glyphs for runtime
    for (int input_i = 0; input_i < atlas->ConfigData.Size; input_i++)
    {
        ImFontConfig& cfg = atlas->ConfigData[input_i];
        ImFontTempBuildData& tmp = tmp_array[input_i];
        ImFont* dst_font = cfg.DstFont; // We can have multiple input fonts writing into a same destination font (when using MergeMode=true)

        const float font_scale = stbtt_ScaleForPixelHeight(&tmp.FontInfo, cfg.SizePixels);
        int unscaled_ascent, unscaled_descent, unscaled_line_gap;
        stbtt_GetFontVMetrics(&tmp.FontInfo, &unscaled_ascent, &unscaled_descent, &unscaled_line_gap);

        const float ascent = unscaled_ascent * font_scale;
        const float descent = unscaled_descent * font_scale;
        ImFontAtlasBuildSetupFont(atlas, dst_font, &cfg, ascent, descent);
        const float off_x = cfg.GlyphOffset.x;
        const float off_y = cfg.GlyphOffset.y + (float)(int)(dst_font->Ascent + 0.5f);

        for (int i = 0; i < tmp.RangesCount; i++)
        {
            stbtt_pack_range& range = tmp.Ranges[i];
            for (int char_idx = 0; char_idx < range.num_chars; char_idx += 1)
            {
                const stbtt_packedchar& pc = range.chardata_for_range[char_idx];
                if (!pc.x0 && !pc.x1 && !pc.y0 && !pc.y1)
                    continue;

                const int codepoint = range.first_unicode_codepoint_in_range + char_idx;
                if (cfg.MergeMode && dst_font->FindGlyph((unsigned short)codepoint))
                    continue;

                stbtt_aligned_quad q;
                float dummy_x = 0.0f, dummy_y = 0.0f;
                stbtt_GetPackedQuad(range.chardata_for_range, atlas->TexWidth, atlas->TexHeight, char_idx, &dummy_x, &dummy_y, &q, 0);
                dst_font->AddGlyph((ImWchar)codepoint, q.x0 + off_x, q.y0 + off_y, q.x1 + off_x, q.y1 + off_y, q.s0, q.t0, q.s1, q.t1, pc.xadvance);
            }
        }
    }

    // Cleanup temporaries
    ImGui::MemFree(buf_packedchars);
    ImGui::MemFree(buf_ranges);
    ImGui::MemFree(tmp_array);

    ImFontAtlasBuildFinish(atlas);

    return true;
}

void ImFontAtlasBuildRegisterDefaultCustomRects(ImFontAtlas* atlas)
{
    if (atlas->CustomRectIds[0] < 0)
        atlas->CustomRectIds[0] = atlas->AddCustomRectRegular(FONT_ATLAS_DEFAULT_TEX_DATA_ID, FONT_ATLAS_DEFAULT_TEX_DATA_W_HALF*2+1, FONT_ATLAS_DEFAULT_TEX_DATA_H);
}

void ImFontAtlasBuildSetupFont(ImFontAtlas* atlas, ImFont* font, ImFontConfig* font_config, float ascent, float descent)
{
    if (!font_config->MergeMode)
    {
        font->ClearOutputData();
        font->FontSize = font_config->SizePixels;
        font->ConfigData = font_config;
        font->ContainerAtlas = atlas;
        font->Ascent = ascent;
        font->Descent = descent;
    }
    font->ConfigDataCount++;
}

void ImFontAtlasBuildPackCustomRects(ImFontAtlas* atlas, void* pack_context_opaque)
{
    stbrp_context* pack_context = (stbrp_context*)pack_context_opaque;

    ImVector<ImFontAtlas::CustomRect>& user_rects = atlas->CustomRects;
    IM_ASSERT(user_rects.Size >= 1); // We expect at least the default custom rects to be registered, else something went wrong.

    ImVector<stbrp_rect> pack_rects;
    pack_rects.resize(user_rects.Size);
    memset(pack_rects.Data, 0, sizeof(stbrp_rect) * user_rects.Size);
    for (int i = 0; i < user_rects.Size; i++)
    {
        pack_rects[i].w = user_rects[i].Width;
        pack_rects[i].h = user_rects[i].Height;
    }
    stbrp_pack_rects(pack_context, &pack_rects[0], pack_rects.Size);
    for (int i = 0; i < pack_rects.Size; i++)
        if (pack_rects[i].was_packed)
        {
            user_rects[i].X = pack_rects[i].x;
            user_rects[i].Y = pack_rects[i].y;
            IM_ASSERT(pack_rects[i].w == user_rects[i].Width && pack_rects[i].h == user_rects[i].Height);
            atlas->TexHeight = ImMax(atlas->TexHeight, pack_rects[i].y + pack_rects[i].h);
        }
}

static void ImFontAtlasBuildRenderDefaultTexData(ImFontAtlas* atlas)
{
    IM_ASSERT(atlas->CustomRectIds[0] >= 0);
    ImFontAtlas::CustomRect& r = atlas->CustomRects[atlas->CustomRectIds[0]];
    IM_ASSERT(r.ID == FONT_ATLAS_DEFAULT_TEX_DATA_ID);
    IM_ASSERT(r.Width == FONT_ATLAS_DEFAULT_TEX_DATA_W_HALF*2+1);
    IM_ASSERT(r.Height == FONT_ATLAS_DEFAULT_TEX_DATA_H);
    IM_ASSERT(r.IsPacked());
    IM_ASSERT(atlas->TexPixelsAlpha8 != NULL);

    // Render/copy pixels
    for (int y = 0, n = 0; y < FONT_ATLAS_DEFAULT_TEX_DATA_H; y++)
        for (int x = 0; x < FONT_ATLAS_DEFAULT_TEX_DATA_W_HALF; x++, n++)
        {
            const int offset0 = (int)(r.X + x) + (int)(r.Y + y) * atlas->TexWidth;
            const int offset1 = offset0 + FONT_ATLAS_DEFAULT_TEX_DATA_W_HALF + 1;
            atlas->TexPixelsAlpha8[offset0] = FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS[n] == '.' ? 0xFF : 0x00;
            atlas->TexPixelsAlpha8[offset1] = FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS[n] == 'X' ? 0xFF : 0x00;
        }
    const ImVec2 tex_uv_scale(1.0f / atlas->TexWidth, 1.0f / atlas->TexHeight);
    atlas->TexUvWhitePixel = ImVec2((r.X + 0.5f) * tex_uv_scale.x, (r.Y + 0.5f) * tex_uv_scale.y);

    // Setup mouse cursors
    for (int type = 0; type < ImGuiMouseCursor_Count_; type++)
    {
        ImGuiMouseCursorData& cursor_data = GImGui->MouseCursorData[type];
        ImVec2 pos = FONT_ATLAS_DEFAULT_TEX_CURSOR_DATA[type][0] + ImVec2((float)r.X, (float)r.Y);
        const ImVec2 size = FONT_ATLAS_DEFAULT_TEX_CURSOR_DATA[type][1];
        cursor_data.Type = type;
        cursor_data.Size = size;
        cursor_data.HotOffset = FONT_ATLAS_DEFAULT_TEX_CURSOR_DATA[type][2];
        cursor_data.TexUvMin[0] = (pos) * tex_uv_scale;
        cursor_data.TexUvMax[0] = (pos + size) * tex_uv_scale;
        pos.x += FONT_ATLAS_DEFAULT_TEX_DATA_W_HALF + 1;
        cursor_data.TexUvMin[1] = (pos) * tex_uv_scale;
        cursor_data.TexUvMax[1] = (pos + size) * tex_uv_scale;
    }
}

void ImFontAtlasBuildFinish(ImFontAtlas* atlas)
{
    // Render into our custom data block
    ImFontAtlasBuildRenderDefaultTexData(atlas);

    // Register custom rectangle glyphs
    for (int i = 0; i < atlas->CustomRects.Size; i++)
    {
        const ImFontAtlas::CustomRect& r = atlas->CustomRects[i];
        if (r.Font == NULL || r.ID > 0x10000)
            continue;

        IM_ASSERT(r.Font->ContainerAtlas == atlas);
        ImVec2 uv0, uv1;
        atlas->CalcCustomRectUV(&r, &uv0, &uv1);
        r.Font->AddGlyph((ImWchar)r.ID, r.GlyphOffset.x, r.GlyphOffset.y, r.GlyphOffset.x + r.Width, r.GlyphOffset.y + r.Height, uv0.x, uv0.y, uv1.x, uv1.y, r.GlyphAdvanceX);
    }

    // Build all fonts lookup tables
    for (int i = 0; i < atlas->Fonts.Size; i++)
        atlas->Fonts[i]->BuildLookupTable();
}

// Retrieve list of range (2 int per range, values are inclusive)
const ImWchar*   ImFontAtlas::GetGlyphRangesDefault()
{
    static const ImWchar ranges[] =
    {
        0x0020, 0x00FF, // Basic Latin + Latin Supplement
        0,
    };
    return &ranges[0];
}

const ImWchar*  ImFontAtlas::GetGlyphRangesKorean()
{
    static const ImWchar ranges[] =
    {
        0x0020, 0x00FF, // Basic Latin + Latin Supplement
        0x3131, 0x3163, // Korean alphabets
        0xAC00, 0xD79D, // Korean characters
        0,
    };
    return &ranges[0];
}

const ImWchar*  ImFontAtlas::GetGlyphRangesChinese()
{
    static const ImWchar ranges[] =
    {
        0x0020, 0x00FF, // Basic Latin + Latin Supplement
        0x3000, 0x30FF, // Punctuations, Hiragana, Katakana
        0x31F0, 0x31FF, // Katakana Phonetic Extensions
        0xFF00, 0xFFEF, // Half-width characters
        0x4e00, 0x9FAF, // CJK Ideograms
        0,
    };
    return &ranges[0];
}

const ImWchar*  ImFontAtlas::GetGlyphRangesJapanese()
{
    // Store the 1946 ideograms code points as successive offsets from the initial unicode codepoint 0x4E00. Each offset has an implicit +1.
    // This encoding is designed to helps us reduce the source code size.
    // FIXME: Source a list of the revised 2136 joyo kanji list from 2010 and rebuild this.
    // The current list was sourced from http://theinstructionlimit.com/author/renaudbedardrenaudbedard/page/3
    // Note that you may use ImFontAtlas::GlyphRangesBuilder to create your own ranges, by merging existing ranges or adding new characters.
    static const short offsets_from_0x4E00[] =
    {
        -1,0,1,3,0,0,0,0,1,0,5,1,1,0,7,4,6,10,0,1,9,9,7,1,3,19,1,10,7,1,0,1,0,5,1,0,6,4,2,6,0,0,12,6,8,0,3,5,0,1,0,9,0,0,8,1,1,3,4,5,13,0,0,8,2,17,
        4,3,1,1,9,6,0,0,0,2,1,3,2,22,1,9,11,1,13,1,3,12,0,5,9,2,0,6,12,5,3,12,4,1,2,16,1,1,4,6,5,3,0,6,13,15,5,12,8,14,0,0,6,15,3,6,0,18,8,1,6,14,1,
        5,4,12,24,3,13,12,10,24,0,0,0,1,0,1,1,2,9,10,2,2,0,0,3,3,1,0,3,8,0,3,2,4,4,1,6,11,10,14,6,15,3,4,15,1,0,0,5,2,2,0,0,1,6,5,5,6,0,3,6,5,0,0,1,0,
        11,2,2,8,4,7,0,10,0,1,2,17,19,3,0,2,5,0,6,2,4,4,6,1,1,11,2,0,3,1,2,1,2,10,7,6,3,16,0,8,24,0,0,3,1,1,3,0,1,6,0,0,0,2,0,1,5,15,0,1,0,0,2,11,19,
        1,4,19,7,6,5,1,0,0,0,0,5,1,0,1,9,0,0,5,0,2,0,1,0,3,0,11,3,0,2,0,0,0,0,0,9,3,6,4,12,0,14,0,0,29,10,8,0,14,37,13,0,31,16,19,0,8,30,1,20,8,3,48,
        21,1,0,12,0,10,44,34,42,54,11,18,82,0,2,1,2,12,1,0,6,2,17,2,12,7,0,7,17,4,2,6,24,23,8,23,39,2,16,23,1,0,5,1,2,15,14,5,6,2,11,0,8,6,2,2,2,14,
        20,4,15,3,4,11,10,10,2,5,2,1,30,2,1,0,0,22,5,5,0,3,1,5,4,1,0,0,2,2,21,1,5,1,2,16,2,1,3,4,0,8,4,0,0,5,14,11,2,16,1,13,1,7,0,22,15,3,1,22,7,14,
        22,19,11,24,18,46,10,20,64,45,3,2,0,4,5,0,1,4,25,1,0,0,2,10,0,0,0,1,0,1,2,0,0,9,1,2,0,0,0,2,5,2,1,1,5,5,8,1,1,1,5,1,4,9,1,3,0,1,0,1,1,2,0,0,
        2,0,1,8,22,8,1,0,0,0,0,4,2,1,0,9,8,5,0,9,1,30,24,2,6,4,39,0,14,5,16,6,26,179,0,2,1,1,0,0,0,5,2,9,6,0,2,5,16,7,5,1,1,0,2,4,4,7,15,13,14,0,0,
        3,0,1,0,0,0,2,1,6,4,5,1,4,9,0,3,1,8,0,0,10,5,0,43,0,2,6,8,4,0,2,0,0,9,6,0,9,3,1,6,20,14,6,1,4,0,7,2,3,0,2,0,5,0,3,1,0,3,9,7,0,3,4,0,4,9,1,6,0,
        9,0,0,2,3,10,9,28,3,6,2,4,1,2,32,4,1,18,2,0,3,1,5,30,10,0,2,2,2,0,7,9,8,11,10,11,7,2,13,7,5,10,0,3,40,2,0,1,6,12,0,4,5,1,5,11,11,21,4,8,3,7,
        8,8,33,5,23,0,0,19,8,8,2,3,0,6,1,1,1,5,1,27,4,2,5,0,3,5,6,3,1,0,3,1,12,5,3,3,2,0,7,7,2,1,0,4,0,1,1,2,0,10,10,6,2,5,9,7,5,15,15,21,6,11,5,20,
        4,3,5,5,2,5,0,2,1,0,1,7,28,0,9,0,5,12,5,5,18,30,0,12,3,3,21,16,25,32,9,3,14,11,24,5,66,9,1,2,0,5,9,1,5,1,8,0,8,3,3,0,1,15,1,4,8,1,2,7,0,7,2,
        8,3,7,5,3,7,10,2,1,0,0,2,25,0,6,4,0,10,0,4,2,4,1,12,5,38,4,0,4,1,10,5,9,4,0,14,4,2,5,18,20,21,1,3,0,5,0,7,0,3,7,1,3,1,1,8,1,0,0,0,3,2,5,2,11,
        6,0,13,1,3,9,1,12,0,16,6,2,1,0,2,1,12,6,13,11,2,0,28,1,7,8,14,13,8,13,0,2,0,5,4,8,10,2,37,42,19,6,6,7,4,14,11,18,14,80,7,6,0,4,72,12,36,27,
        7,7,0,14,17,19,164,27,0,5,10,7,3,13,6,14,0,2,2,5,3,0,6,13,0,0,10,29,0,4,0,3,13,0,3,1,6,51,1,5,28,2,0,8,0,20,2,4,0,25,2,10,13,10,0,16,4,0,1,0,
        2,1,7,0,1,8,11,0,0,1,2,7,2,23,11,6,6,4,16,2,2,2,0,22,9,3,3,5,2,0,15,16,21,2,9,20,15,15,5,3,9,1,0,0,1,7,7,5,4,2,2,2,38,24,14,0,0,15,5,6,24,14,
        5,5,11,0,21,12,0,3,8,4,11,1,8,0,11,27,7,2,4,9,21,59,0,1,39,3,60,62,3,0,12,11,0,3,30,11,0,13,88,4,15,5,28,13,1,4,48,17,17,4,28,32,46,0,16,0,
        18,11,1,8,6,38,11,2,6,11,38,2,0,45,3,11,2,7,8,4,30,14,17,2,1,1,65,18,12,16,4,2,45,123,12,56,33,1,4,3,4,7,0,0,0,3,2,0,16,4,2,4,2,0,7,4,5,2,26,
        2,25,6,11,6,1,16,2,6,17,77,15,3,35,0,1,0,5,1,0,38,16,6,3,12,3,3,3,0,9,3,1,3,5,2,9,0,18,0,25,1,3,32,1,72,46,6,2,7,1,3,14,17,0,28,1,40,13,0,20,
        15,40,6,38,24,12,43,1,1,9,0,12,6,0,6,2,4,19,3,7,1,48,0,9,5,0,5,6,9,6,10,15,2,11,19,3,9,2,0,1,10,1,27,8,1,3,6,1,14,0,26,0,27,16,3,4,9,6,2,23,
        9,10,5,25,2,1,6,1,1,48,15,9,15,14,3,4,26,60,29,13,37,21,1,6,4,0,2,11,22,23,16,16,2,2,1,3,0,5,1,6,4,0,0,4,0,0,8,3,0,2,5,0,7,1,7,3,13,2,4,10,
        3,0,2,31,0,18,3,0,12,10,4,1,0,7,5,7,0,5,4,12,2,22,10,4,2,15,2,8,9,0,23,2,197,51,3,1,1,4,13,4,3,21,4,19,3,10,5,40,0,4,1,1,10,4,1,27,34,7,21,
        2,17,2,9,6,4,2,3,0,4,2,7,8,2,5,1,15,21,3,4,4,2,2,17,22,1,5,22,4,26,7,0,32,1,11,42,15,4,1,2,5,0,19,3,1,8,6,0,10,1,9,2,13,30,8,2,24,17,19,1,4,
        4,25,13,0,10,16,11,39,18,8,5,30,82,1,6,8,18,77,11,13,20,75,11,112,78,33,3,0,0,60,17,84,9,1,1,12,30,10,49,5,32,158,178,5,5,6,3,3,1,3,1,4,7,6,
        19,31,21,0,2,9,5,6,27,4,9,8,1,76,18,12,1,4,0,3,3,6,3,12,2,8,30,16,2,25,1,5,5,4,3,0,6,10,2,3,1,0,5,1,19,3,0,8,1,5,2,6,0,0,0,19,1,2,0,5,1,2,5,
        1,3,7,0,4,12,7,3,10,22,0,9,5,1,0,2,20,1,1,3,23,30,3,9,9,1,4,191,14,3,15,6,8,50,0,1,0,0,4,0,0,1,0,2,4,2,0,2,3,0,2,0,2,2,8,7,0,1,1,1,3,3,17,11,
        91,1,9,3,2,13,4,24,15,41,3,13,3,1,20,4,125,29,30,1,0,4,12,2,21,4,5,5,19,11,0,13,11,86,2,18,0,7,1,8,8,2,2,22,1,2,6,5,2,0,1,2,8,0,2,0,5,2,1,0,
        2,10,2,0,5,9,2,1,2,0,1,0,4,0,0,10,2,5,3,0,6,1,0,1,4,4,33,3,13,17,3,18,6,4,7,1,5,78,0,4,1,13,7,1,8,1,0,35,27,15,3,0,0,0,1,11,5,41,38,15,22,6,
        14,14,2,1,11,6,20,63,5,8,27,7,11,2,2,40,58,23,50,54,56,293,8,8,1,5,1,14,0,1,12,37,89,8,8,8,2,10,6,0,0,0,4,5,2,1,0,1,1,2,7,0,3,3,0,4,6,0,3,2,
        19,3,8,0,0,0,4,4,16,0,4,1,5,1,3,0,3,4,6,2,17,10,10,31,6,4,3,6,10,126,7,3,2,2,0,9,0,0,5,20,13,0,15,0,6,0,2,5,8,64,50,3,2,12,2,9,0,0,11,8,20,
        109,2,18,23,0,0,9,61,3,0,28,41,77,27,19,17,81,5,2,14,5,83,57,252,14,154,263,14,20,8,13,6,57,39,38,
    };
    static ImWchar base_ranges[] =
    {
        0x0020, 0x00FF, // Basic Latin + Latin Supplement
        0x3000, 0x30FF, // Punctuations, Hiragana, Katakana
        0x31F0, 0x31FF, // Katakana Phonetic Extensions
        0xFF00, 0xFFEF, // Half-width characters
    };
    static bool full_ranges_unpacked = false;
    static ImWchar full_ranges[IM_ARRAYSIZE(base_ranges) + IM_ARRAYSIZE(offsets_from_0x4E00)*2 + 1];
    if (!full_ranges_unpacked)
    {
        // Unpack
        int codepoint = 0x4e00;
        memcpy(full_ranges, base_ranges, sizeof(base_ranges));
        ImWchar* dst = full_ranges + IM_ARRAYSIZE(base_ranges);;
        for (int n = 0; n < IM_ARRAYSIZE(offsets_from_0x4E00); n++, dst += 2)
            dst[0] = dst[1] = (ImWchar)(codepoint += (offsets_from_0x4E00[n] + 1));
        dst[0] = 0;
        full_ranges_unpacked = true;
    }
    return &full_ranges[0];
}

const ImWchar*  ImFontAtlas::GetGlyphRangesCyrillic()
{
    static const ImWchar ranges[] =
    {
        0x0020, 0x00FF, // Basic Latin + Latin Supplement
        0x0400, 0x052F, // Cyrillic + Cyrillic Supplement
        0x2DE0, 0x2DFF, // Cyrillic Extended-A
        0xA640, 0xA69F, // Cyrillic Extended-B
        0,
    };
    return &ranges[0];
}

const ImWchar*  ImFontAtlas::GetGlyphRangesThai()
{
    static const ImWchar ranges[] =
    {
        0x0020, 0x00FF, // Basic Latin
        0x2010, 0x205E, // Punctuations
        0x0E00, 0x0E7F, // Thai
        0,
    };
    return &ranges[0];
}

//-----------------------------------------------------------------------------
// ImFontAtlas::GlyphRangesBuilder
//-----------------------------------------------------------------------------

void ImFontAtlas::GlyphRangesBuilder::AddText(const char* text, const char* text_end)
{
    while (text_end ? (text < text_end) : *text)
    {
        unsigned int c = 0;
        int c_len = ImTextCharFromUtf8(&c, text, text_end);
        text += c_len;
        if (c_len == 0)
            break;
        if (c < 0x10000)
            AddChar((ImWchar)c);
    }
}

void ImFontAtlas::GlyphRangesBuilder::AddRanges(const ImWchar* ranges)
{
    for (; ranges[0]; ranges += 2)
        for (ImWchar c = ranges[0]; c <= ranges[1]; c++)
            AddChar(c);
}

void ImFontAtlas::GlyphRangesBuilder::BuildRanges(ImVector<ImWchar>* out_ranges)
{
    for (int n = 0; n < 0x10000; n++)
        if (GetBit(n))
        {
            out_ranges->push_back((ImWchar)n);
            while (n < 0x10000 && GetBit(n + 1))
                n++;
            out_ranges->push_back((ImWchar)n);
        }
    out_ranges->push_back(0);
}

//-----------------------------------------------------------------------------
// ImFont
//-----------------------------------------------------------------------------

ImFont::ImFont()
{
    Scale = 1.0f;
    FallbackChar = (ImWchar)'?';
    DisplayOffset = ImVec2(0.0f, 1.0f);
    ClearOutputData();
}

ImFont::~ImFont()
{
    // Invalidate active font so that the user gets a clear crash instead of a dangling pointer.
    // If you want to delete fonts you need to do it between Render() and NewFrame().
    // FIXME-CLEANUP
    /*
    ImGuiContext& g = *GImGui;
    if (g.Font == this)
        g.Font = NULL;
    */
    ClearOutputData();
}

void    ImFont::ClearOutputData()
{
    FontSize = 0.0f;
    Glyphs.clear();
    IndexAdvanceX.clear();
    IndexLookup.clear();
    FallbackGlyph = NULL;
    FallbackAdvanceX = 0.0f;
    ConfigDataCount = 0;
    ConfigData = NULL;
    ContainerAtlas = NULL;
    Ascent = Descent = 0.0f;
    MetricsTotalSurface = 0;
}

void ImFont::BuildLookupTable()
{
    int max_codepoint = 0;
    for (int i = 0; i != Glyphs.Size; i++)
        max_codepoint = ImMax(max_codepoint, (int)Glyphs[i].Codepoint);

    IM_ASSERT(Glyphs.Size < 0xFFFF); // -1 is reserved
    IndexAdvanceX.clear();
    IndexLookup.clear();
    GrowIndex(max_codepoint + 1);
    for (int i = 0; i < Glyphs.Size; i++)
    {
        int codepoint = (int)Glyphs[i].Codepoint;
        IndexAdvanceX[codepoint] = Glyphs[i].AdvanceX;
        IndexLookup[codepoint] = (unsigned short)i;
    }

    // Create a glyph to handle TAB
    // FIXME: Needs proper TAB handling but it needs to be contextualized (or we could arbitrary say that each string starts at "column 0" ?)
    if (FindGlyph((unsigned short)' '))
    {
        if (Glyphs.back().Codepoint != '\t')   // So we can call this function multiple times
            Glyphs.resize(Glyphs.Size + 1);
        ImFontGlyph& tab_glyph = Glyphs.back();
        tab_glyph = *FindGlyph((unsigned short)' ');
        tab_glyph.Codepoint = '\t';
        tab_glyph.AdvanceX *= 4;
        IndexAdvanceX[(int)tab_glyph.Codepoint] = (float)tab_glyph.AdvanceX;
        IndexLookup[(int)tab_glyph.Codepoint] = (unsigned short)(Glyphs.Size-1);
    }

    FallbackGlyph = NULL;
    FallbackGlyph = FindGlyph(FallbackChar);
    FallbackAdvanceX = FallbackGlyph ? FallbackGlyph->AdvanceX : 0.0f;
    for (int i = 0; i < max_codepoint + 1; i++)
        if (IndexAdvanceX[i] < 0.0f)
            IndexAdvanceX[i] = FallbackAdvanceX;
}

void ImFont::SetFallbackChar(ImWchar c)
{
    FallbackChar = c;
    BuildLookupTable();
}

void ImFont::GrowIndex(int new_size)
{
    IM_ASSERT(IndexAdvanceX.Size == IndexLookup.Size);
    if (new_size <= IndexLookup.Size)
        return;
    IndexAdvanceX.resize(new_size, -1.0f);
    IndexLookup.resize(new_size, (unsigned short)-1);
}

void ImFont::AddGlyph(ImWchar codepoint, float x0, float y0, float x1, float y1, float u0, float v0, float u1, float v1, float advance_x)
{
    Glyphs.resize(Glyphs.Size + 1);
    ImFontGlyph& glyph = Glyphs.back();
    glyph.Codepoint = (ImWchar)codepoint;
    glyph.X0 = x0; 
    glyph.Y0 = y0; 
    glyph.X1 = x1; 
    glyph.Y1 = y1;
    glyph.U0 = u0; 
    glyph.V0 = v0; 
    glyph.U1 = u1; 
    glyph.V1 = v1;
    glyph.AdvanceX = advance_x + ConfigData->GlyphExtraSpacing.x;  // Bake spacing into AdvanceX

    if (ConfigData->PixelSnapH)
        glyph.AdvanceX = (float)(int)(glyph.AdvanceX + 0.5f);
    
    // Compute rough surface usage metrics (+1 to account for average padding, +0.99 to round)
    MetricsTotalSurface += (int)((glyph.U1 - glyph.U0) * ContainerAtlas->TexWidth + 1.99f) * (int)((glyph.V1 - glyph.V0) * ContainerAtlas->TexHeight + 1.99f);
}

void ImFont::AddRemapChar(ImWchar dst, ImWchar src, bool overwrite_dst)
{
    IM_ASSERT(IndexLookup.Size > 0);    // Currently this can only be called AFTER the font has been built, aka after calling ImFontAtlas::GetTexDataAs*() function.
    int index_size = IndexLookup.Size;

    if (dst < index_size && IndexLookup.Data[dst] == (unsigned short)-1 && !overwrite_dst) // 'dst' already exists
        return;
    if (src >= index_size && dst >= index_size) // both 'dst' and 'src' don't exist -> no-op
        return;

    GrowIndex(dst + 1);
    IndexLookup[dst] = (src < index_size) ? IndexLookup.Data[src] : (unsigned short)-1;
    IndexAdvanceX[dst] = (src < index_size) ? IndexAdvanceX.Data[src] : 1.0f;
}

const ImFontGlyph* ImFont::FindGlyph(ImWchar c) const
{
    if (c < IndexLookup.Size)
    {
        const unsigned short i = IndexLookup[c];
        if (i != (unsigned short)-1)
            return &Glyphs.Data[i];
    }
    return FallbackGlyph;
}

const char* ImFont::CalcWordWrapPositionA(float scale, const char* text, const char* text_end, float wrap_width) const
{
    // Simple word-wrapping for English, not full-featured. Please submit failing cases!
    // FIXME: Much possible improvements (don't cut things like "word !", "word!!!" but cut within "word,,,,", more sensible support for punctuations, support for Unicode punctuations, etc.)

    // For references, possible wrap point marked with ^
    //  "aaa bbb, ccc,ddd. eee   fff. ggg!"
    //      ^    ^    ^   ^   ^__    ^    ^

    // List of hardcoded separators: .,;!?'"

    // Skip extra blanks after a line returns (that includes not counting them in width computation)
    // e.g. "Hello    world" --> "Hello" "World"

    // Cut words that cannot possibly fit within one line.
    // e.g.: "The tropical fish" with ~5 characters worth of width --> "The tr" "opical" "fish"

    float line_width = 0.0f;
    float word_width = 0.0f;
    float blank_width = 0.0f;
    wrap_width /= scale; // We work with unscaled widths to avoid scaling every characters

    const char* word_end = text;
    const char* prev_word_end = NULL;
    bool inside_word = true;

    const char* s = text;
    while (s < text_end)
    {
        unsigned int c = (unsigned int)*s;
        const char* next_s;
        if (c < 0x80)
            next_s = s + 1;
        else
            next_s = s + ImTextCharFromUtf8(&c, s, text_end);
        if (c == 0)
            break;

        if (c < 32)
        {
            if (c == '\n')
            {
                line_width = word_width = blank_width = 0.0f;
                inside_word = true;
                s = next_s;
                continue;
            }
            if (c == '\r')
            {
                s = next_s;
                continue;
            }
        }

        const float char_width = ((int)c < IndexAdvanceX.Size ? IndexAdvanceX[(int)c] : FallbackAdvanceX);
        if (ImCharIsSpace(c))
        {
            if (inside_word)
            {
                line_width += blank_width;
                blank_width = 0.0f;
                word_end = s;
            }
            blank_width += char_width;
            inside_word = false;
        }
        else
        {
            word_width += char_width;
            if (inside_word)
            {
                word_end = next_s;
            }
            else
            {
                prev_word_end = word_end;
                line_width += word_width + blank_width;
                word_width = blank_width = 0.0f;
            }

            // Allow wrapping after punctuation.
            inside_word = !(c == '.' || c == ',' || c == ';' || c == '!' || c == '?' || c == '\"');
        }

        // We ignore blank width at the end of the line (they can be skipped)
        if (line_width + word_width >= wrap_width)
        {
            // Words that cannot possibly fit within an entire line will be cut anywhere.
            if (word_width < wrap_width)
                s = prev_word_end ? prev_word_end : word_end;
            break;
        }

        s = next_s;
    }

    return s;
}

ImVec2 ImFont::CalcTextSizeA(float size, float max_width, float wrap_width, const char* text_begin, const char* text_end, const char** remaining) const
{
    if (!text_end)
        text_end = text_begin + strlen(text_begin); // FIXME-OPT: Need to avoid this.

    const float line_height = size;
    const float scale = size / FontSize;

    ImVec2 text_size = ImVec2(0,0);
    float line_width = 0.0f;

    const bool word_wrap_enabled = (wrap_width > 0.0f);
    const char* word_wrap_eol = NULL;

    const char* s = text_begin;
    while (s < text_end)
    {
        if (word_wrap_enabled)
        {
            // Calculate how far we can render. Requires two passes on the string data but keeps the code simple and not intrusive for what's essentially an uncommon feature.
            if (!word_wrap_eol)
            {
                word_wrap_eol = CalcWordWrapPositionA(scale, s, text_end, wrap_width - line_width);
                if (word_wrap_eol == s) // Wrap_width is too small to fit anything. Force displaying 1 character to minimize the height discontinuity.
                    word_wrap_eol++;    // +1 may not be a character start point in UTF-8 but it's ok because we use s >= word_wrap_eol below
            }

            if (s >= word_wrap_eol)
            {
                if (text_size.x < line_width)
                    text_size.x = line_width;
                text_size.y += line_height;
                line_width = 0.0f;
                word_wrap_eol = NULL;

                // Wrapping skips upcoming blanks
                while (s < text_end)
                {
                    const char c = *s;
                    if (ImCharIsSpace(c)) { s++; } else if (c == '\n') { s++; break; } else { break; }
                }
                continue;
            }
        }

        // Decode and advance source
        const char* prev_s = s;
        unsigned int c = (unsigned int)*s;
        if (c < 0x80)
        {
            s += 1;
        }
        else
        {
            s += ImTextCharFromUtf8(&c, s, text_end);
            if (c == 0) // Malformed UTF-8?
                break;
        }

        if (c < 32)
        {
            if (c == '\n')
            {
                text_size.x = ImMax(text_size.x, line_width);
                text_size.y += line_height;
                line_width = 0.0f;
                continue;
            }
            if (c == '\r')
                continue;
        }

        const float char_width = ((int)c < IndexAdvanceX.Size ? IndexAdvanceX[(int)c] : FallbackAdvanceX) * scale;
        if (line_width + char_width >= max_width)
        {
            s = prev_s;
            break;
        }

        line_width += char_width;
    }

    if (text_size.x < line_width)
        text_size.x = line_width;

    if (line_width > 0 || text_size.y == 0.0f)
        text_size.y += line_height;

    if (remaining)
        *remaining = s;

    return text_size;
}

void ImFont::RenderChar(ImDrawList* draw_list, float size, ImVec2 pos, ImU32 col, unsigned short c) const
{
    if (c == ' ' || c == '\t' || c == '\n' || c == '\r') // Match behavior of RenderText(), those 4 codepoints are hard-coded.
        return;
    if (const ImFontGlyph* glyph = FindGlyph(c))
    {
        float scale = (size >= 0.0f) ? (size / FontSize) : 1.0f;
        pos.x = (float)(int)pos.x + DisplayOffset.x;
        pos.y = (float)(int)pos.y + DisplayOffset.y;
        draw_list->PrimReserve(6, 4);
        draw_list->PrimRectUV(ImVec2(pos.x + glyph->X0 * scale, pos.y + glyph->Y0 * scale), ImVec2(pos.x + glyph->X1 * scale, pos.y + glyph->Y1 * scale), ImVec2(glyph->U0, glyph->V0), ImVec2(glyph->U1, glyph->V1), col);
    }
}

void ImFont::RenderText(ImDrawList* draw_list, float size, ImVec2 pos, ImU32 col, const ImVec4& clip_rect, const char* text_begin, const char* text_end, float wrap_width, bool cpu_fine_clip) const
{
    if (!text_end)
        text_end = text_begin + strlen(text_begin); // ImGui functions generally already provides a valid text_end, so this is merely to handle direct calls.

    // Align to be pixel perfect
    pos.x = (float)(int)pos.x + DisplayOffset.x;
    pos.y = (float)(int)pos.y + DisplayOffset.y;
    float x = pos.x;
    float y = pos.y;
    if (y > clip_rect.w)
        return;

    const float scale = size / FontSize;
    const float line_height = FontSize * scale;
    const bool word_wrap_enabled = (wrap_width > 0.0f);
    const char* word_wrap_eol = NULL;

    // Skip non-visible lines
    const char* s = text_begin;
    if (!word_wrap_enabled && y + line_height < clip_rect.y)
        while (s < text_end && *s != '\n')  // Fast-forward to next line
            s++;

    // Reserve vertices for remaining worse case (over-reserving is useful and easily amortized)
    const int vtx_count_max = (int)(text_end - s) * 4;
    const int idx_count_max = (int)(text_end - s) * 6;
    const int idx_expected_size = draw_list->IdxBuffer.Size + idx_count_max;
    draw_list->PrimReserve(idx_count_max, vtx_count_max);

    ImDrawVert* vtx_write = draw_list->_VtxWritePtr;
    ImDrawIdx* idx_write = draw_list->_IdxWritePtr;
    unsigned int vtx_current_idx = draw_list->_VtxCurrentIdx;

    while (s < text_end)
    {
        if (word_wrap_enabled)
        {
            // Calculate how far we can render. Requires two passes on the string data but keeps the code simple and not intrusive for what's essentially an uncommon feature.
            if (!word_wrap_eol)
            {
                word_wrap_eol = CalcWordWrapPositionA(scale, s, text_end, wrap_width - (x - pos.x));
                if (word_wrap_eol == s) // Wrap_width is too small to fit anything. Force displaying 1 character to minimize the height discontinuity.
                    word_wrap_eol++;    // +1 may not be a character start point in UTF-8 but it's ok because we use s >= word_wrap_eol below
            }

            if (s >= word_wrap_eol)
            {
                x = pos.x;
                y += line_height;
                word_wrap_eol = NULL;

                // Wrapping skips upcoming blanks
                while (s < text_end)
                {
                    const char c = *s;
                    if (ImCharIsSpace(c)) { s++; } else if (c == '\n') { s++; break; } else { break; }
                }
                continue;
            }
        }

        // Decode and advance source
        unsigned int c = (unsigned int)*s;
        if (c < 0x80)
        {
            s += 1;
        }
        else
        {
            s += ImTextCharFromUtf8(&c, s, text_end);
            if (c == 0) // Malformed UTF-8?
                break;
        }

        if (c < 32)
        {
            if (c == '\n')
            {
                x = pos.x;
                y += line_height;

                if (y > clip_rect.w)
                    break;
                if (!word_wrap_enabled && y + line_height < clip_rect.y)
                    while (s < text_end && *s != '\n')  // Fast-forward to next line
                        s++;
                continue;
            }
            if (c == '\r')
                continue;
        }

        float char_width = 0.0f;
        if (const ImFontGlyph* glyph = FindGlyph((unsigned short)c))
        {
            char_width = glyph->AdvanceX * scale;

            // Arbitrarily assume that both space and tabs are empty glyphs as an optimization
            if (c != ' ' && c != '\t')
            {
                // We don't do a second finer clipping test on the Y axis as we've already skipped anything before clip_rect.y and exit once we pass clip_rect.w
                float x1 = x + glyph->X0 * scale;
                float x2 = x + glyph->X1 * scale;
                float y1 = y + glyph->Y0 * scale;
                float y2 = y + glyph->Y1 * scale;
                if (x1 <= clip_rect.z && x2 >= clip_rect.x)
                {
                    // Render a character
                    float u1 = glyph->U0;
                    float v1 = glyph->V0;
                    float u2 = glyph->U1;
                    float v2 = glyph->V1;

                    // CPU side clipping used to fit text in their frame when the frame is too small. Only does clipping for axis aligned quads.
                    if (cpu_fine_clip)
                    {
                        if (x1 < clip_rect.x)
                        {
                            u1 = u1 + (1.0f - (x2 - clip_rect.x) / (x2 - x1)) * (u2 - u1);
                            x1 = clip_rect.x;
                        }
                        if (y1 < clip_rect.y)
                        {
                            v1 = v1 + (1.0f - (y2 - clip_rect.y) / (y2 - y1)) * (v2 - v1);
                            y1 = clip_rect.y;
                        }
                        if (x2 > clip_rect.z)
                        {
                            u2 = u1 + ((clip_rect.z - x1) / (x2 - x1)) * (u2 - u1);
                            x2 = clip_rect.z;
                        }
                        if (y2 > clip_rect.w)
                        {
                            v2 = v1 + ((clip_rect.w - y1) / (y2 - y1)) * (v2 - v1);
                            y2 = clip_rect.w;
                        }
                        if (y1 >= y2)
                        {
                            x += char_width;
                            continue;
                        }
                    }

                    // We are NOT calling PrimRectUV() here because non-inlined causes too much overhead in a debug builds. Inlined here:
                    {
                        idx_write[0] = (ImDrawIdx)(vtx_current_idx); idx_write[1] = (ImDrawIdx)(vtx_current_idx+1); idx_write[2] = (ImDrawIdx)(vtx_current_idx+2);
                        idx_write[3] = (ImDrawIdx)(vtx_current_idx); idx_write[4] = (ImDrawIdx)(vtx_current_idx+2); idx_write[5] = (ImDrawIdx)(vtx_current_idx+3);
                        vtx_write[0].pos.x = x1; vtx_write[0].pos.y = y1; vtx_write[0].col = col; vtx_write[0].uv.x = u1; vtx_write[0].uv.y = v1;
                        vtx_write[1].pos.x = x2; vtx_write[1].pos.y = y1; vtx_write[1].col = col; vtx_write[1].uv.x = u2; vtx_write[1].uv.y = v1;
                        vtx_write[2].pos.x = x2; vtx_write[2].pos.y = y2; vtx_write[2].col = col; vtx_write[2].uv.x = u2; vtx_write[2].uv.y = v2;
                        vtx_write[3].pos.x = x1; vtx_write[3].pos.y = y2; vtx_write[3].col = col; vtx_write[3].uv.x = u1; vtx_write[3].uv.y = v2;
                        vtx_write += 4;
                        vtx_current_idx += 4;
                        idx_write += 6;
                    }
                }
            }
        }

        x += char_width;
    }

    // Give back unused vertices
    draw_list->VtxBuffer.resize((int)(vtx_write - draw_list->VtxBuffer.Data));
    draw_list->IdxBuffer.resize((int)(idx_write - draw_list->IdxBuffer.Data));
    draw_list->CmdBuffer[draw_list->CmdBuffer.Size-1].ElemCount -= (idx_expected_size - draw_list->IdxBuffer.Size);
    draw_list->_VtxWritePtr = vtx_write;
    draw_list->_IdxWritePtr = idx_write;
    draw_list->_VtxCurrentIdx = (unsigned int)draw_list->VtxBuffer.Size;
}

//-----------------------------------------------------------------------------
// Internals Drawing Helpers
//-----------------------------------------------------------------------------

static inline float ImAcos01(float x)
{
    if (x <= 0.0f) return IM_PI * 0.5f;
    if (x >= 1.0f) return 0.0f;
    return acosf(x);
    //return (-0.69813170079773212f * x * x - 0.87266462599716477f) * x + 1.5707963267948966f; // Cheap approximation, may be enough for what we do.
}

// FIXME: Cleanup and move code to ImDrawList.
void ImGui::RenderRectFilledRangeH(ImDrawList* draw_list, const ImRect& rect, ImU32 col, float x_start_norm, float x_end_norm, float rounding)
{
    if (x_end_norm == x_start_norm)
        return;
    if (x_start_norm > x_end_norm)
        ImSwap(x_start_norm, x_end_norm);

    ImVec2 p0 = ImVec2(ImLerp(rect.Min.x, rect.Max.x, x_start_norm), rect.Min.y);
    ImVec2 p1 = ImVec2(ImLerp(rect.Min.x, rect.Max.x, x_end_norm), rect.Max.y);
    if (rounding == 0.0f)
    {
        draw_list->AddRectFilled(p0, p1, col, 0.0f);
        return;
    }

    rounding = ImClamp(ImMin((rect.Max.x - rect.Min.x) * 0.5f, (rect.Max.y - rect.Min.y) * 0.5f) - 1.0f, 0.0f, rounding);
    const float inv_rounding = 1.0f / rounding;
    const float arc0_b = ImAcos01(1.0f - (p0.x - rect.Min.x) * inv_rounding);
    const float arc0_e = ImAcos01(1.0f - (p1.x - rect.Min.x) * inv_rounding);
    const float x0 = ImMax(p0.x, rect.Min.x + rounding);
    if (arc0_b == arc0_e)
    {
        draw_list->PathLineTo(ImVec2(x0, p1.y));
        draw_list->PathLineTo(ImVec2(x0, p0.y));
    }
    else if (arc0_b == 0.0f && arc0_e == IM_PI*0.5f)
    {
        draw_list->PathArcToFast(ImVec2(x0, p1.y - rounding), rounding, 3, 6); // BL
        draw_list->PathArcToFast(ImVec2(x0, p0.y + rounding), rounding, 6, 9); // TR
    }
    else
    {
        draw_list->PathArcTo(ImVec2(x0, p1.y - rounding), rounding, IM_PI - arc0_e, IM_PI - arc0_b, 3); // BL
        draw_list->PathArcTo(ImVec2(x0, p0.y + rounding), rounding, IM_PI + arc0_b, IM_PI + arc0_e, 3); // TR
    }
    if (p1.x > rect.Min.x + rounding)
    {
        const float arc1_b = ImAcos01(1.0f - (rect.Max.x - p1.x) * inv_rounding);
        const float arc1_e = ImAcos01(1.0f - (rect.Max.x - p0.x) * inv_rounding);
        const float x1 = ImMin(p1.x, rect.Max.x - rounding);
        if (arc1_b == arc1_e)
        {
            draw_list->PathLineTo(ImVec2(x1, p0.y));
            draw_list->PathLineTo(ImVec2(x1, p1.y));
        }
        else if (arc1_b == 0.0f && arc1_e == IM_PI*0.5f)
        {
            draw_list->PathArcToFast(ImVec2(x1, p0.y + rounding), rounding, 9, 12); // TR
            draw_list->PathArcToFast(ImVec2(x1, p1.y - rounding), rounding, 0, 3);  // BR
        }
        else
        {
            draw_list->PathArcTo(ImVec2(x1, p0.y + rounding), rounding, -arc1_e, -arc1_b, 3); // TR
            draw_list->PathArcTo(ImVec2(x1, p1.y - rounding), rounding, +arc1_b, +arc1_e, 3); // BR
        }
    }
    draw_list->PathFillConvex(col);
}

//-----------------------------------------------------------------------------
// DEFAULT FONT DATA
//-----------------------------------------------------------------------------
// Compressed with stb_compress() then converted to a C array.
// Use the program in extra_fonts/binary_to_compressed_c.cpp to create the array from a TTF file.
// Decompression from stb.h (public domain) by Sean Barrett https://github.com/nothings/stb/blob/master/stb.h
//-----------------------------------------------------------------------------

static unsigned int stb_decompress_length(unsigned char *input)
{
    return (input[8] << 24) + (input[9] << 16) + (input[10] << 8) + input[11];
}

static unsigned char *stb__barrier, *stb__barrier2, *stb__barrier3, *stb__barrier4;
static unsigned char *stb__dout;
static void stb__match(unsigned char *data, unsigned int length)
{
    // INVERSE of memmove... write each BYTE before copying the next...
    IM_ASSERT (stb__dout + length <= stb__barrier);
    if (stb__dout + length > stb__barrier) { stb__dout += length; return; }
    if (data < stb__barrier4) { stb__dout = stb__barrier+1; return; }
    while (length--) *stb__dout++ = *data++;
}

static void stb__lit(unsigned char *data, unsigned int length)
{
    IM_ASSERT (stb__dout + length <= stb__barrier);
    if (stb__dout + length > stb__barrier) { stb__dout += length; return; }
    if (data < stb__barrier2) { stb__dout = stb__barrier+1; return; }
    memcpy(stb__dout, data, length);
    stb__dout += length;
}

#define stb__in2(x)   ((i[x] << 8) + i[(x)+1])
#define stb__in3(x)   ((i[x] << 16) + stb__in2((x)+1))
#define stb__in4(x)   ((i[x] << 24) + stb__in3((x)+1))

static unsigned char *stb_decompress_token(unsigned char *i)
{
    if (*i >= 0x20) { // use fewer if's for cases that expand small
        if (*i >= 0x80)       stb__match(stb__dout-i[1]-1, i[0] - 0x80 + 1), i += 2;
        else if (*i >= 0x40)  stb__match(stb__dout-(stb__in2(0) - 0x4000 + 1), i[2]+1), i += 3;
        else /* *i >= 0x20 */ stb__lit(i+1, i[0] - 0x20 + 1), i += 1 + (i[0] - 0x20 + 1);
    } else { // more ifs for cases that expand large, since overhead is amortized
        if (*i >= 0x18)       stb__match(stb__dout-(stb__in3(0) - 0x180000 + 1), i[3]+1), i += 4;
        else if (*i >= 0x10)  stb__match(stb__dout-(stb__in3(0) - 0x100000 + 1), stb__in2(3)+1), i += 5;
        else if (*i >= 0x08)  stb__lit(i+2, stb__in2(0) - 0x0800 + 1), i += 2 + (stb__in2(0) - 0x0800 + 1);
        else if (*i == 0x07)  stb__lit(i+3, stb__in2(1) + 1), i += 3 + (stb__in2(1) + 1);
        else if (*i == 0x06)  stb__match(stb__dout-(stb__in3(1)+1), i[4]+1), i += 5;
        else if (*i == 0x04)  stb__match(stb__dout-(stb__in3(1)+1), stb__in2(4)+1), i += 6;
    }
    return i;
}

static unsigned int stb_adler32(unsigned int adler32, unsigned char *buffer, unsigned int buflen)
{
    const unsigned long ADLER_MOD = 65521;
    unsigned long s1 = adler32 & 0xffff, s2 = adler32 >> 16;
    unsigned long blocklen, i;

    blocklen = buflen % 5552;
    while (buflen) {
        for (i=0; i + 7 < blocklen; i += 8) {
            s1 += buffer[0], s2 += s1;
            s1 += buffer[1], s2 += s1;
            s1 += buffer[2], s2 += s1;
            s1 += buffer[3], s2 += s1;
            s1 += buffer[4], s2 += s1;
            s1 += buffer[5], s2 += s1;
            s1 += buffer[6], s2 += s1;
            s1 += buffer[7], s2 += s1;

            buffer += 8;
        }

        for (; i < blocklen; ++i)
            s1 += *buffer++, s2 += s1;

        s1 %= ADLER_MOD, s2 %= ADLER_MOD;
        buflen -= blocklen;
        blocklen = 5552;
    }
    return (unsigned int)(s2 << 16) + (unsigned int)s1;
}

static unsigned int stb_decompress(unsigned char *output, unsigned char *i, unsigned int length)
{
    unsigned int olen;
    if (stb__in4(0) != 0x57bC0000) return 0;
    if (stb__in4(4) != 0)          return 0; // error! stream is > 4GB
    olen = stb_decompress_length(i);
    stb__barrier2 = i;
    stb__barrier3 = i+length;
    stb__barrier = output + olen;
    stb__barrier4 = output;
    i += 16;

    stb__dout = output;
    for (;;) {
        unsigned char *old_i = i;
        i = stb_decompress_token(i);
        if (i == old_i) {
            if (*i == 0x05 && i[1] == 0xfa) {
                IM_ASSERT(stb__dout == output + olen);
                if (stb__dout != output + olen) return 0;
                if (stb_adler32(1, output, olen) != (unsigned int) stb__in4(2))
                    return 0;
                return olen;
            } else {
                IM_ASSERT(0); /* NOTREACHED */
                return 0;
            }
        }
        IM_ASSERT(stb__dout <= output + olen);
        if (stb__dout > output + olen)
            return 0;
    }
}

//-----------------------------------------------------------------------------
// ProggyClean.ttf
// Copyright (c) 2004, 2005 Tristan Grimmer
// MIT license (see License.txt in http://www.upperbounds.net/download/ProggyClean.ttf.zip)
// Download and more information at http://upperbounds.net
//-----------------------------------------------------------------------------
// File: 'ProggyClean.ttf' (41208 BYTEs)
// Exported using binary_to_compressed_c.cpp
//-----------------------------------------------------------------------------
static const char proggy_clean_ttf_compressed_data_base85[11980 + 1] =
"7])#######hV0qs'/###[),##/l:$#Q6>##5[n42>c-TH`->>#/e>11NNV=Bv(*:.F?uu#(gRU.o0XGH`$vhLG1hxt9?W`#,5LsCp#-i>.r$<$6pD>Lb';9Crc6tgXmKVeU2cD4Eo3R/"
"2*>]b(MC;$jPfY.;h^`IWM9<Lh2TlS+f-s$o6Q<BWH`YiU.xfLq$N;$0iR/GX:U(jcW2p/W*q?-qmnUCI;jHSAiFWM.R*kU@C=GH?a9wp8f$e.-4^Qg1)Q-GL(lf(r/7GrRgwV%MS=C#"
"`8ND>Qo#t'X#(v#Y9w0#1D$CIf;W'#pWUPXOuxXuU(H9M(1<q-UE31#^-V'8IRUo7Qf./L>=Ke$$'5F%)]0^#0X@U.a<r:QLtFsLcL6##lOj)#.Y5<-R&KgLwqJfLgN&;Q?gI^#DY2uL"
"i@^rMl9t=cWq6##weg>$FBjVQTSDgEKnIS7EM9>ZY9w0#L;>>#Mx&4Mvt//L[MkA#W@lK.N'[0#7RL_&#w+F%HtG9M#XL`N&.,GM4Pg;-<nLENhvx>-VsM.M0rJfLH2eTM`*oJMHRC`N"
"kfimM2J,W-jXS:)r0wK#@Fge$U>`w'N7G#$#fB#$E^$#:9:hk+eOe--6x)F7*E%?76%^GMHePW-Z5l'&GiF#$956:rS?dA#fiK:)Yr+`&#0j@'DbG&#^$PG.Ll+DNa<XCMKEV*N)LN/N"
"*b=%Q6pia-Xg8I$<MR&,VdJe$<(7G;Ckl'&hF;;$<_=X(b.RS%%)###MPBuuE1V:v&cX&#2m#(&cV]`k9OhLMbn%s$G2,B$BfD3X*sp5#l,$R#]x_X1xKX%b5U*[r5iMfUo9U`N99hG)"
"tm+/Us9pG)XPu`<0s-)WTt(gCRxIg(%6sfh=ktMKn3j)<6<b5Sk_/0(^]AaN#(p/L>&VZ>1i%h1S9u5o@YaaW$e+b<TWFn/Z:Oh(Cx2$lNEoN^e)#CFY@@I;BOQ*sRwZtZxRcU7uW6CX"
"ow0i(?$Q[cjOd[P4d)]>ROPOpxTO7Stwi1::iB1q)C_=dV26J;2,]7op$]uQr@_V7$q^%lQwtuHY]=DX,n3L#0PHDO4f9>dC@O>HBuKPpP*E,N+b3L#lpR/MrTEH.IAQk.a>D[.e;mc."
"x]Ip.PH^'/aqUO/$1WxLoW0[iLA<QT;5HKD+@qQ'NQ(3_PLhE48R.qAPSwQ0/WK?Z,[x?-J;jQTWA0X@KJ(_Y8N-:/M74:/-ZpKrUss?d#dZq]DAbkU*JqkL+nwX@@47`5>w=4h(9.`G"
"CRUxHPeR`5Mjol(dUWxZa(>STrPkrJiWx`5U7F#.g*jrohGg`cg:lSTvEY/EV_7H4Q9[Z%cnv;JQYZ5q.l7Zeas:HOIZOB?G<Nald$qs]@]L<J7bR*>gv:[7MI2k).'2($5FNP&EQ(,)"
"U]W]+fh18.vsai00);D3@4ku5P?DP8aJt+;qUM]=+b'8@;mViBKx0DE[-auGl8:PJ&Dj+M6OC]O^((##]`0i)drT;-7X`=-H3[igUnPG-NZlo.#k@h#=Ork$m>a>$-?Tm$UV(?#P6YY#"
"'/###xe7q.73rI3*pP/$1>s9)W,JrM7SN]'/4C#v$U`0#V.[0>xQsH$fEmPMgY2u7Kh(G%siIfLSoS+MK2eTM$=5,M8p`A.;_R%#u[K#$x4AG8.kK/HSB==-'Ie/QTtG?-.*^N-4B/ZM"
"_3YlQC7(p7q)&](`6_c)$/*JL(L-^(]$wIM`dPtOdGA,U3:w2M-0<q-]L_?^)1vw'.,MRsqVr.L;aN&#/EgJ)PBc[-f>+WomX2u7lqM2iEumMTcsF?-aT=Z-97UEnXglEn1K-bnEO`gu"
"Ft(c%=;Am_Qs@jLooI&NX;]0#j4#F14;gl8-GQpgwhrq8'=l_f-b49'UOqkLu7-##oDY2L(te+Mch&gLYtJ,MEtJfLh'x'M=$CS-ZZ%P]8bZ>#S?YY#%Q&q'3^Fw&?D)UDNrocM3A76/"
"/oL?#h7gl85[qW/NDOk%16ij;+:1a'iNIdb-ou8.P*w,v5#EI$TWS>Pot-R*H'-SEpA:g)f+O$%%`kA#G=8RMmG1&O`>to8bC]T&$,n.LoO>29sp3dt-52U%VM#q7'DHpg+#Z9%H[K<L"
"%a2E-grWVM3@2=-k22tL]4$##6We'8UJCKE[d_=%wI;'6X-GsLX4j^SgJ$##R*w,vP3wK#iiW&#*h^D&R?jp7+/u&#(AP##XU8c$fSYW-J95_-Dp[g9wcO&#M-h1OcJlc-*vpw0xUX&#"
"OQFKNX@QI'IoPp7nb,QU//MQ&ZDkKP)X<WSVL(68uVl&#c'[0#(s1X&xm$Y%B7*K:eDA323j998GXbA#pwMs-jgD$9QISB-A_(aN4xoFM^@C58D0+Q+q3n0#3U1InDjF682-SjMXJK)("
"h$hxua_K]ul92%'BOU&#BRRh-slg8KDlr:%L71Ka:.A;%YULjDPmL<LYs8i#XwJOYaKPKc1h:'9Ke,g)b),78=I39B;xiY$bgGw-&.Zi9InXDuYa%G*f2Bq7mn9^#p1vv%#(Wi-;/Z5h"
"o;#2:;%d&#x9v68C5g?ntX0X)pT`;%pB3q7mgGN)3%(P8nTd5L7GeA-GL@+%J3u2:(Yf>et`e;)f#Km8&+DC$I46>#Kr]]u-[=99tts1.qb#q72g1WJO81q+eN'03'eM>&1XxY-caEnO"
"j%2n8)),?ILR5^.Ibn<-X-Mq7[a82Lq:F&#ce+S9wsCK*x`569E8ew'He]h:sI[2LM$[guka3ZRd6:t%IG:;$%YiJ:Nq=?eAw;/:nnDq0(CYcMpG)qLN4$##&J<j$UpK<Q4a1]MupW^-"
"sj_$%[HK%'F####QRZJ::Y3EGl4'@%FkiAOg#p[##O`gukTfBHagL<LHw%q&OV0##F=6/:chIm0@eCP8X]:kFI%hl8hgO@RcBhS-@Qb$%+m=hPDLg*%K8ln(wcf3/'DW-$.lR?n[nCH-"
"eXOONTJlh:.RYF%3'p6sq:UIMA945&^HFS87@$EP2iG<-lCO$%c`uKGD3rC$x0BL8aFn--`ke%#HMP'vh1/R&O_J9'um,.<tx[@%wsJk&bUT2`0uMv7gg#qp/ij.L56'hl;.s5CUrxjO"
"M7-##.l+Au'A&O:-T72L]P`&=;ctp'XScX*rU.>-XTt,%OVU4)S1+R-#dg0/Nn?Ku1^0f$B*P:Rowwm-`0PKjYDDM'3]d39VZHEl4,.j']Pk-M.h^&:0FACm$maq-&sgw0t7/6(^xtk%"
"LuH88Fj-ekm>GA#_>568x6(OFRl-IZp`&b,_P'$M<Jnq79VsJW/mWS*PUiq76;]/NM_>hLbxfc$mj`,O;&%W2m`Zh:/)Uetw:aJ%]K9h:TcF]u_-Sj9,VK3M.*'&0D[Ca]J9gp8,kAW]"
"%(?A%R$f<->Zts'^kn=-^@c4%-pY6qI%J%1IGxfLU9CP8cbPlXv);C=b),<2mOvP8up,UVf3839acAWAW-W?#ao/^#%KYo8fRULNd2.>%m]UK:n%r$'sw]J;5pAoO_#2mO3n,'=H5(et"
"Hg*`+RLgv>=4U8guD$I%D:W>-r5V*%j*W:Kvej.Lp$<M-SGZ':+Q_k+uvOSLiEo(<aD/K<CCc`'Lx>'?;++O'>()jLR-^u68PHm8ZFWe+ej8h:9r6L*0//c&iH&R8pRbA#Kjm%upV1g:"
"a_#Ur7FuA#(tRh#.Y5K+@?3<-8m0$PEn;J:rh6?I6uG<-`wMU'ircp0LaE_OtlMb&1#6T.#FDKu#1Lw%u%+GM+X'e?YLfjM[VO0MbuFp7;>Q&#WIo)0@F%q7c#4XAXN-U&VB<HFF*qL("
"$/V,;(kXZejWO`<[5?\?ewY(*9=%wDc;,u<'9t3W-(H1th3+G]ucQ]kLs7df($/*JL]@*t7Bu_G3_7mp7<iaQjO@.kLg;x3B0lqp7Hf,^Ze7-##@/c58Mo(3;knp0%)A7?-W+eI'o8)b<"
"nKnw'Ho8C=Y>pqB>0ie&jhZ[?iLR@@_AvA-iQC(=ksRZRVp7`.=+NpBC%rh&3]R:8XDmE5^V8O(x<<aG/1N$#FX$0V5Y6x'aErI3I$7x%E`v<-BY,)%-?Psf*l?%C3.mM(=/M0:JxG'?"
"7WhH%o'a<-80g0NBxoO(GH<dM]n.+%q@jH?f.UsJ2Ggs&4<-e47&Kl+f//9@`b+?.TeN_&B8Ss?v;^Trk;f#YvJkl&w$]>-+k?'(<S:68tq*WoDfZu';mM?8X[ma8W%*`-=;D.(nc7/;"
")g:T1=^J$&BRV(-lTmNB6xqB[@0*o.erM*<SWF]u2=st-*(6v>^](H.aREZSi,#1:[IXaZFOm<-ui#qUq2$##Ri;u75OK#(RtaW-K-F`S+cF]uN`-KMQ%rP/Xri.LRcB##=YL3BgM/3M"
"D?@f&1'BW-)Ju<L25gl8uhVm1hL$##*8###'A3/LkKW+(^rWX?5W_8g)a(m&K8P>#bmmWCMkk&#TR`C,5d>g)F;t,4:@_l8G/5h4vUd%&%950:VXD'QdWoY-F$BtUwmfe$YqL'8(PWX("
"P?^@Po3$##`MSs?DWBZ/S>+4%>fX,VWv/w'KD`LP5IbH;rTV>n3cEK8U#bX]l-/V+^lj3;vlMb&[5YQ8#pekX9JP3XUC72L,,?+Ni&co7ApnO*5NK,((W-i:$,kp'UDAO(G0Sq7MVjJs"
"bIu)'Z,*[>br5fX^:FPAWr-m2KgL<LUN098kTF&#lvo58=/vjDo;.;)Ka*hLR#/k=rKbxuV`>Q_nN6'8uTG&#1T5g)uLv:873UpTLgH+#FgpH'_o1780Ph8KmxQJ8#H72L4@768@Tm&Q"
"h4CB/5OvmA&,Q&QbUoi$a_%3M01H)4x7I^&KQVgtFnV+;[Pc>[m4k//,]1?#`VY[Jr*3&&slRfLiVZJ:]?=K3Sw=[$=uRB?3xk48@aeg<Z'<$#4H)6,>e0jT6'N#(q%.O=?2S]u*(m<-"
"V8J'(1)G][68hW$5'q[GC&5j`TE?m'esFGNRM)j,ffZ?-qx8;->g4t*:CIP/[Qap7/9'#(1sao7w-.qNUdkJ)tCF&#B^;xGvn2r9FEPFFFcL@.iFNkTve$m%#QvQS8U@)2Z+3K:AKM5i"
"sZ88+dKQ)W6>J%CL<KE>`.d*(B`-n8D9oK<Up]c$X$(,)M8Zt7/[rdkqTgl-0cuGMv'?>-XV1q['-5k'cAZ69e;D_?$ZPP&s^+7])$*$#@QYi9,5P&#9r+$%CE=68>K8r0=dSC%%(@p7"
".m7jilQ02'0-VWAg<a/''3u.=4L$Y)6k/K:_[3=&jvL<L0C/2'v:^;-DIBW,B4E68:kZ;%?8(Q8BH=kO65BW?xSG&#@uU,DS*,?.+(o(#1vCS8#CHF>TlGW'b)Tq7VT9q^*^$$.:&N@@"
"$&)WHtPm*5_rO0&e%K&#-30j(E4#'Zb.o/(Tpm$>K'f@[PvFl,hfINTNU6u'0pao7%XUp9]5.>%h`8_=VYbxuel.NTSsJfLacFu3B'lQSu/m6-Oqem8T+oE--$0a/k]uj9EwsG>%veR*"
"hv^BFpQj:K'#SJ,sB-'#](j.Lg92rTw-*n%@/;39rrJF,l#qV%OrtBeC6/,;qB3ebNW[?,Hqj2L.1NP&GjUR=1D8QaS3Up&@*9wP?+lo7b?@%'k4`p0Z$22%K3+iCZj?XJN4Nm&+YF]u"
"@-W$U%VEQ/,,>>#)D<h#`)h0:<Q6909ua+&VU%n2:cG3FJ-%@Bj-DgLr`Hw&HAKjKjseK</xKT*)B,N9X3]krc12t'pgTV(Lv-tL[xg_%=M_q7a^x?7Ubd>#%8cY#YZ?=,`Wdxu/ae&#"
"w6)R89tI#6@s'(6Bf7a&?S=^ZI_kS&ai`&=tE72L_D,;^R)7[$s<Eh#c&)q.MXI%#v9ROa5FZO%sF7q7Nwb&#ptUJ:aqJe$Sl68%.D###EC><?-aF&#RNQv>o8lKN%5/$(vdfq7+ebA#"
"u1p]ovUKW&Y%q]'>$1@-[xfn$7ZTp7mM,G,Ko7a&Gu%G[RMxJs[0MM%wci.LFDK)(<c`Q8N)jEIF*+?P2a8g%)$q]o2aH8C&<SibC/q,(e:v;-b#6[$NtDZ84Je2KNvB#$P5?tQ3nt(0"
"d=j.LQf./Ll33+(;q3L-w=8dX$#WF&uIJ@-bfI>%:_i2B5CsR8&9Z&#=mPEnm0f`<&c)QL5uJ#%u%lJj+D-r;BoF&#4DoS97h5g)E#o:&S4weDF,9^Hoe`h*L+_a*NrLW-1pG_&2UdB8"
"6e%B/:=>)N4xeW.*wft-;$'58-ESqr<b?UI(_%@[P46>#U`'6AQ]m&6/`Z>#S?YY#Vc;r7U2&326d=w&H####?TZ`*4?&.MK?LP8Vxg>$[QXc%QJv92.(Db*B)gb*BM9dM*hJMAo*c&#"
"b0v=Pjer]$gG&JXDf->'StvU7505l9$AFvgYRI^&<^b68?j#q9QX4SM'RO#&sL1IM.rJfLUAj221]d##DW=m83u5;'bYx,*Sl0hL(W;;$doB&O/TQ:(Z^xBdLjL<Lni;''X.`$#8+1GD"
":k$YUWsbn8ogh6rxZ2Z9]%nd+>V#*8U_72Lh+2Q8Cj0i:6hp&$C/:p(HK>T8Y[gHQ4`4)'$Ab(Nof%V'8hL&#<NEdtg(n'=S1A(Q1/I&4([%dM`,Iu'1:_hL>SfD07&6D<fp8dHM7/g+"
"tlPN9J*rKaPct&?'uBCem^jn%9_K)<,C5K3s=5g&GmJb*[SYq7K;TRLGCsM-$$;S%:Y@r7AK0pprpL<Lrh,q7e/%KWK:50I^+m'vi`3?%Zp+<-d+$L-Sv:@.o19n$s0&39;kn;S%BSq*"
"$3WoJSCLweV[aZ'MQIjO<7;X-X;&+dMLvu#^UsGEC9WEc[X(wI7#2.(F0jV*eZf<-Qv3J-c+J5AlrB#$p(H68LvEA'q3n0#m,[`*8Ft)FcYgEud]CWfm68,(aLA$@EFTgLXoBq/UPlp7"
":d[/;r_ix=:TF`S5H-b<LI&HY(K=h#)]Lk$K14lVfm:x$H<3^Ql<M`$OhapBnkup'D#L$Pb_`N*g]2e;X/Dtg,bsj&K#2[-:iYr'_wgH)NUIR8a1n#S?Yej'h8^58UbZd+^FKD*T@;6A"
"7aQC[K8d-(v6GI$x:T<&'Gp5Uf>@M.*J:;$-rv29'M]8qMv-tLp,'886iaC=Hb*YJoKJ,(j%K=H`K.v9HggqBIiZu'QvBT.#=)0ukruV&.)3=(^1`o*Pj4<-<aN((^7('#Z0wK#5GX@7"
"u][`*S^43933A4rl][`*O4CgLEl]v$1Q3AeF37dbXk,.)vj#x'd`;qgbQR%FW,2(?LO=s%Sc68%NP'##Aotl8x=BE#j1UD([3$M(]UI2LX3RpKN@;/#f'f/&_mt&F)XdF<9t4)Qa.*kT"
"LwQ'(TTB9.xH'>#MJ+gLq9-##@HuZPN0]u:h7.T..G:;$/Usj(T7`Q8tT72LnYl<-qx8;-HV7Q-&Xdx%1a,hC=0u+HlsV>nuIQL-5<N?)NBS)QN*_I,?&)2'IM%L3I)X((e/dl2&8'<M"
":^#M*Q+[T.Xri.LYS3v%fF`68h;b-X[/En'CR.q7E)p'/kle2HM,u;^%OKC-N+Ll%F9CF<Nf'^#t2L,;27W:0O@6##U6W7:$rJfLWHj$#)woqBefIZ.PK<b*t7ed;p*_m;4ExK#h@&]>"
"_>@kXQtMacfD.m-VAb8;IReM3$wf0''hra*so568'Ip&vRs849'MRYSp%:t:h5qSgwpEr$B>Q,;s(C#$)`svQuF$##-D,##,g68@2[T;.XSdN9Qe)rpt._K-#5wF)sP'##p#C0c%-Gb%"
"hd+<-j'Ai*x&&HMkT]C'OSl##5RG[JXaHN;d'uA#x._U;.`PU@(Z3dt4r152@:v,'R.Sj'w#0<-;kPI)FfJ&#AYJ&#//)>-k=m=*XnK$>=)72L]0I%>.G690a:$##<,);?;72#?x9+d;"
"^V'9;jY@;)br#q^YQpx:X#Te$Z^'=-=bGhLf:D6&bNwZ9-ZD#n^9HhLMr5G;']d&6'wYmTFmL<LD)F^%[tC'8;+9E#C$g%#5Y>q9wI>P(9mI[>kC-ekLC/R&CH+s'B;K-M6$EB%is00:"
"+A4[7xks.LrNk0&E)wILYF@2L'0Nb$+pv<(2.768/FrY&h$^3i&@+G%JT'<-,v`3;_)I9M^AE]CN?Cl2AZg+%4iTpT3<n-&%H%b<FDj2M<hH=&Eh<2Len$b*aTX=-8QxN)k11IM1c^j%"
"9s<L<NFSo)B?+<-(GxsF,^-Eh@$4dXhN$+#rxK8'je'D7k`e;)2pYwPA'_p9&@^18ml1^[@g4t*[JOa*[=Qp7(qJ_oOL^('7fB&Hq-:sf,sNj8xq^>$U4O]GKx'm9)b@p7YsvK3w^YR-"
"CdQ*:Ir<($u&)#(&?L9Rg3H)4fiEp^iI9O8KnTj,]H?D*r7'M;PwZ9K0E^k&-cpI;.p/6_vwoFMV<->#%Xi.LxVnrU(4&8/P+:hLSKj$#U%]49t'I:rgMi'FL@a:0Y-uA[39',(vbma*"
"hU%<-SRF`Tt:542R_VV$p@[p8DV[A,?1839FWdF<TddF<9Ah-6&9tWoDlh]&1SpGMq>Ti1O*H&#(AL8[_P%.M>v^-))qOT*F5Cq0`Ye%+$B6i:7@0IX<N+T+0MlMBPQ*Vj>SsD<U4JHY"
"8kD2)2fU/M#$e.)T4,_=8hLim[&);?UkK'-x?'(:siIfL<$pFM`i<?%W(mGDHM%>iWP,##P`%/L<eXi:@Z9C.7o=@(pXdAO/NLQ8lPl+HPOQa8wD8=^GlPa8TKI1CjhsCTSLJM'/Wl>-"
"S(qw%sf/@%#B6;/U7K]uZbi^Oc^2n<bhPmUkMw>%t<)'mEVE''n`WnJra$^TKvX5B>;_aSEK',(hwa0:i4G?.Bci.(X[?b*($,=-n<.Q%`(X=?+@Am*Js0&=3bh8K]mL<LoNs'6,'85`"
"0?t/'_U59@]ddF<#LdF<eWdF<OuN/45rY<-L@&#+fm>69=Lb,OcZV/);TTm8VI;?%OtJ<(b4mq7M6:u?KRdF<gR@2L=FNU-<b[(9c/ML3m;Z[$oF3g)GAWqpARc=<ROu7cL5l;-[A]%/"
"+fsd;l#SafT/f*W]0=O'$(Tb<[)*@e775R-:Yob%g*>l*:xP?Yb.5)%w_I?7uk5JC+FS(m#i'k.'a0i)9<7b'fs'59hq$*5Uhv##pi^8+hIEBF`nvo`;'l0.^S1<-wUK2/Coh58KKhLj"
"M=SO*rfO`+qC`W-On.=AJ56>>i2@2LH6A:&5q`?9I3@@'04&p2/LVa*T-4<-i3;M9UvZd+N7>b*eIwg:CC)c<>nO&#<IGe;__.thjZl<%w(Wk2xmp4Q@I#I9,DF]u7-P=.-_:YJ]aS@V"
"?6*C()dOp7:WL,b&3Rg/.cmM9&r^>$(>.Z-I&J(Q0Hd5Q%7Co-b`-c<N(6r@ip+AurK<m86QIth*#v;-OBqi+L7wDE-Ir8K['m+DDSLwK&/.?-V%U_%3:qKNu$_b*B-kp7NaD'QdWQPK"
"Yq[@>P)hI;*_F]u`Rb[.j8_Q/<&>uu+VsH$sM9TA%?)(vmJ80),P7E>)tjD%2L=-t#fK[%`v=Q8<FfNkgg^oIbah*#8/Qt$F&:K*-(N/'+1vMB,u()-a.VUU*#[e%gAAO(S>WlA2);Sa"
">gXm8YB`1d@K#n]76-a$U,mF<fX]idqd)<3,]J7JmW4`6]uks=4-72L(jEk+:bJ0M^q-8Dm_Z?0olP1C9Sa&H[d&c$ooQUj]Exd*3ZM@-WGW2%s',B-_M%>%Ul:#/'xoFM9QX-$.QN'>"
"[%$Z$uF6pA6Ki2O5:8w*vP1<-1`[G,)-m#>0`P&#eb#.3i)rtB61(o'$?X3B</R90;eZ]%Ncq;-Tl]#F>2Qft^ae_5tKL9MUe9b*sLEQ95C&`=G?@Mj=wh*'3E>=-<)Gt*Iw)'QG:`@I"
"wOf7&]1i'S01B+Ev/Nac#9S;=;YQpg_6U`*kVY39xK,[/6Aj7:'1Bm-_1EYfa1+o&o4hp7KN_Q(OlIo@S%;jVdn0'1<Vc52=u`3^o-n1'g4v58Hj&6_t7$##?M)c<$bgQ_'SY((-xkA#"
"Y(,p'H9rIVY-b,'%bCPF7.J<Up^,(dU1VY*5#WkTU>h19w,WQhLI)3S#f$2(eb,jr*b;3Vw]*7NH%$c4Vs,eD9>XW8?N]o+(*pgC%/72LV-u<Hp,3@e^9UB1J+ak9-TN/mhKPg+AJYd$"
"MlvAF_jCK*.O-^(63adMT->W%iewS8W6m2rtCpo'RS1R84=@paTKt)>=%&1[)*vp'u+x,VrwN;&]kuO9JDbg=pO$J*.jVe;u'm0dr9l,<*wMK*Oe=g8lV_KEBFkO'oU]^=[-792#ok,)"
"i]lR8qQ2oA8wcRCZ^7w/Njh;?.stX?Q1>S1q4Bn$)K1<-rGdO'$Wr.Lc.CG)$/*JL4tNR/,SVO3,aUw'DJN:)Ss;wGn9A32ijw%FL+Z0Fn.U9;reSq)bmI32U==5ALuG&#Vf1398/pVo"
"1*c-(aY168o<`JsSbk-,1N;$>0:OUas(3:8Z972LSfF8eb=c-;>SPw7.6hn3m`9^Xkn(r.qS[0;T%&Qc=+STRxX'q1BNk3&*eu2;&8q$&x>Q#Q7^Tf+6<(d%ZVmj2bDi%.3L2n+4W'$P"
"iDDG)g,r%+?,$@?uou5tSe2aN_AQU*<h`e-GI7)?OK2A.d7_c)?wQ5AS@DL3r#7fSkgl6-++D:'A,uq7SvlB$pcpH'q3n0#_%dY#xCpr-l<F0NR@-##FEV6NTF6##$l84N1w?AO>'IAO"
"URQ##V^Fv-XFbGM7Fl(N<3DhLGF%q.1rC$#:T__&Pi68%0xi_&[qFJ(77j_&JWoF.V735&T,[R*:xFR*K5>>#`bW-?4Ne_&6Ne_&6Ne_&n`kr-#GJcM6X;uM6X;uM(.a..^2TkL%oR(#"
";u.T%fAr%4tJ8&><1=GHZ_+m9/#H1F^R#SC#*N=BA9(D?v[UiFY>>^8p,KKF.W]L29uLkLlu/+4T<XoIB&hx=T1PcDaB&;HH+-AFr?(m9HZV)FKS8JCw;SD=6[^/DZUL`EUDf]GGlG&>"
"w$)F./^n3+rlo+DB;5sIYGNk+i1t-69Jg--0pao7Sm#K)pdHW&;LuDNH@H>#/X-TI(;P>#,Gc>#0Su>#4`1?#8lC?#<xU?#@.i?#D:%@#HF7@#LRI@#P_[@#Tkn@#Xw*A#]-=A#a9OA#"
"d<F&#*;G##.GY##2Sl##6`($#:l:$#>xL$#B.`$#F:r$#JF.%#NR@%#R_R%#Vke%#Zww%#_-4&#3^Rh%Sflr-k'MS.o?.5/sWel/wpEM0%3'/1)K^f1-d>G21&v(35>V`39V7A4=onx4"
"A1OY5EI0;6Ibgr6M$HS7Q<)58C5w,;WoA*#[%T*#`1g*#d=#+#hI5+#lUG+#pbY+#tnl+#x$),#&1;,#*=M,#.I`,#2Ur,#6b.-#;w[H#iQtA#m^0B#qjBB#uvTB##-hB#'9$C#+E6C#"
"/QHC#3^ZC#7jmC#;v)D#?,<D#C8ND#GDaD#KPsD#O]/E#g1A5#KA*1#gC17#MGd;#8(02#L-d3#rWM4#Hga1#,<w0#T.j<#O#'2#CYN1#qa^:#_4m3#o@/=#eG8=#t8J5#`+78#4uI-#"
"m3B2#SB[8#Q0@8#i[*9#iOn8#1Nm;#^sN9#qh<9#:=x-#P;K2#$%X9#bC+.#Rg;<#mN=.#MTF.#RZO.#2?)4#Y#(/#[)1/#b;L/#dAU/#0Sv;#lY$0#n`-0#sf60#(F24#wrH0#%/e0#"
"TmD<#%JSMFove:CTBEXI:<eh2g)B,3h2^G3i;#d3jD>)4kMYD4lVu`4m`:&5niUA5@(A5BA1]PBB:xlBCC=2CDLXMCEUtiCf&0g2'tN?PGT4CPGT4CPGT4CPGT4CPGT4CPGT4CPGT4CP"
"GT4CPGT4CPGT4CPGT4CPGT4CPGT4CP-qekC`.9kEg^+F$kwViFJTB&5KTB&5KTB&5KTB&5KTB&5KTB&5KTB&5KTB&5KTB&5KTB&5KTB&5KTB&5KTB&5KTB&5KTB&5o,^<-28ZI'O?;xp"
"O?;xpO?;xpO?;xpO?;xpO?;xpO?;xpO?;xpO?;xpO?;xpO?;xpO?;xpO?;xpO?;xp;7q-#lLYI:xvD=#";

static const char* GetDefaultCompressedFontDataTTFBase85()
{
    return proggy_clean_ttf_compressed_data_base85;
}
